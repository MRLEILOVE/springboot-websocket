<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
	This code is generated automatically. Please do not edit it.
-->
<mapper namespace="${DEFAULT_BASE_PKG}.DAO${module_name}.IDefault${struct.className}DAO">

	<!-- 通用查询映射结果 -->
	<resultMap id="BaseResultMap" type="${POJO_BASE_PKG}.model${module_name}.${struct.className}">
		<#-- template pattern . -->
		<#list struct.list_itemPK as itemPK>
		<id javaType="${itemPK.javaType}" property="${itemPK.name}" jdbcType="${itemPK.jdbcType}" column="${itemPK.columnName}" />
		</#list>
		<#list struct.list_item as item>
		<result javaType="${item.javaType}" property="${item.name}" jdbcType="${item.jdbcType}" column="${item.columnName}" />
		</#list>
	</resultMap>

	<!-- 通用查询结果列 -->
	<sql id="Base_Column_List">
		<#list struct.list_item as item>
		`${item.columnName}` AS ${item.name}<#if item_has_next>, </#if>
		</#list>
	</sql>
	
	<insert id="add" parameterType="${POJO_BASE_PKG}.model${module_name}.${struct.className}">
		INSERT INTO ${struct.tableName}(<#list struct.list_itemPK as itemPK><#if !itemPK.autoIncrement>`${itemPK.columnName}`, </#if></#list><#list struct.list_item as item>`${item.columnName}`<#if item_has_next>, </#if></#list>)
		VALUES(<#list struct.list_itemPK as itemPK><#if !itemPK.autoIncrement>${r'#{'}${itemPK.name}${r',jdbcType='}${itemPK.jdbcType}${r'}'}, </#if></#list><#list struct.list_item as item>${r'#{'}${item.name}${r',jdbcType='}${item.jdbcType}${r'}'}<#if item_has_next>, </#if></#list>)
	</insert>
	
	<insert id="addWithSelective" parameterType="${POJO_BASE_PKG}.model${module_name}.${struct.className}">
		INSERT INTO ${struct.tableName}(
			<#list struct.list_itemPK as itemPK>
			<#if !itemPK.autoIncrement>
			<if test="${itemPK.name} != null and ${itemPK.name} != ''">
			`${itemPK.columnName}`, 
			</if>
			</#if>
			</#list>
			<#list struct.list_item as item>
			<if test="${item.name} != null and ${item.name} != ''">
			`${item.columnName}`<#if item_has_next>, </#if>
			</if>
			</#list>
		)
		VALUES(
			<#list struct.list_itemPK as itemPK>
			<#if !itemPK.autoIncrement>
			<if test="${itemPK.name} != null and ${itemPK.name} != ''">
			${r'#{'}${itemPK.name}${r',jdbcType='}${itemPK.jdbcType}${r'}'}, 
			</if>
			</#if>
			</#list>
			<#list struct.list_item as item>
			<if test="${item.name} != null and ${item.name} != ''">
			${r'#{'}${item.name}${r',jdbcType='}${item.jdbcType}${r'}'}<#if item_has_next>, </#if>
			</if>
			</#list>
		)
	</insert>
	
	<delete id="removeByPK">
		DELETE FROM ${struct.tableName}
		WHERE 
			<#list struct.list_itemPK as itemPK>
			`${itemPK.columnName}` = ${r'#{'}${itemPK.name},jdbcType=${itemPK.jdbcType}${r'}'}<#if itemPK_has_next> AND</#if>
			</#list>
	</delete>
	
	<delete id="remove" parameterType="${POJO_BASE_PKG}.model${module_name}.${struct.className}">
		DELETE FROM ${struct.tableName}
		WHERE
			<#list struct.list_item as item>
			<if test="${item.name} != null and ${item.name} != ''">
			`${item.columnName}` = ${r'#{'}${item.name}${r',jdbcType='}${item.jdbcType}${r'}'}<#if item_has_next> AND</#if>
			</if>
			</#list>
	</delete>
	
	<update id="modifyByPK" parameterType="${POJO_BASE_PKG}.model${module_name}.${struct.className}">
		UPDATE ${struct.tableName}
		SET
			<#list struct.list_item as item>
			`${item.columnName}` = ${r'#{'}${item.name}${r',jdbcType='}${item.jdbcType}${r'}'}<#if item_has_next>, </#if>
			</#list>
		WHERE 
			<#list struct.list_itemPK as itemPK>
			`${itemPK.columnName}` = ${r'#{'}${itemPK.name},jdbcType=${itemPK.jdbcType}${r'}'}<#if itemPK_has_next> AND</#if>
			</#list>
	</update>
	
	<update id="modifyWithSelectiveByPK" parameterType="${POJO_BASE_PKG}.model${module_name}.${struct.className}">
		UPDATE ${struct.tableName}
		SET
			<#list struct.list_item as item>
			<if test="${item.name} != null and ${item.name} != ''">
			`${item.columnName}` = ${r'#{'}${item.name}${r',jdbcType='}${item.jdbcType}${r'}'}<#if item_has_next>, </#if>
			</if>
			</#list>
		WHERE 
			<#list struct.list_itemPK as itemPK>
			`${itemPK.columnName}` = ${r'#{'}${itemPK.name},jdbcType=${itemPK.jdbcType}${r'}'}<#if itemPK_has_next> AND</#if>
			</#list>
	</update>
	
	<update id="modify">
		UPDATE ${struct.tableName}
		SET
			<#list struct.list_item as item>
			`${item.columnName}` = ${r'#{'}${struct.variableName}.${item.name}${r',jdbcType='}${item.jdbcType}${r'}'}<#if item_has_next>, </#if>
			</#list>
		WHERE 
			<#list struct.list_item as item>
			<if test="condi${struct.className}.${item.name} != null and condi${struct.className}.${item.name} != ''">
			`${item.columnName}` = ${r'#{'}condi${struct.className}.${item.name},jdbcType=${item.jdbcType}${r'}'}<#if item_has_next> AND</#if>
			</if>
			</#list>
	</update>
	
	<update id="modifyWithSelective">
		UPDATE ${struct.tableName}
		SET
			<#list struct.list_item as item>
			<if test="${item.name} != null and ${item.name} != ''">
			`${item.columnName}` = ${r'#{'}${struct.variableName}.${item.name}${r',jdbcType='}${item.jdbcType}${r'}'}<#if item_has_next>, </#if>
			</if>
			</#list>
		WHERE 
			<#list struct.list_item as item>
			<if test="condi${struct.className}.${item.name} != null and condi${struct.className}.${item.name} != ''">
			`${item.columnName}` = ${r'#{'}condi${struct.className}.${item.name},jdbcType=${item.jdbcType}${r'}'}<#if item_has_next> AND</#if>
			</if>
			</#list>
	</update>
	
	<select id="getByPK" resultType="${POJO_BASE_PKG}.model${module_name}.${struct.className}">
		SELECT 
			<#list struct.list_itemPK as itemPK>
			`${itemPK.columnName}`, 
			</#list>
			<#list struct.list_item as item>
			`${item.columnName}`<#if item_has_next>, </#if>
			</#list>
		FROM ${struct.tableName}
		<where>
			<#list struct.list_itemPK as itemPK>
			`${itemPK.columnName}` = ${r'#{'}${itemPK.name},jdbcType=${itemPK.jdbcType}${r'}'}<#if itemPK_has_next> AND</#if>
			</#list>
		</where>
	</select>
	
	<select id="get" resultType="${POJO_BASE_PKG}.model${module_name}.${struct.className}">
		SELECT 
			<#list struct.list_itemPK as itemPK>
			`${itemPK.columnName}`, 
			</#list>
			<#list struct.list_item as item>
			`${item.columnName}`<#if item_has_next>, </#if>
			</#list>
		FROM ${struct.tableName}
		<where>
			<#list struct.list_item as item>
			<if test="${item.name} != null and ${item.name} != ''">
			AND `${item.columnName}` = ${r'#{'}${item.name},jdbcType=${item.jdbcType}${r'}'}
			</if>
			</#list>
		</where>
		LIMIT 1
	</select>
	
	<select id="getsBy" resultType="${POJO_BASE_PKG}.model${module_name}.${struct.className}">
		SELECT 
			<#list struct.list_itemPK as itemPK>
			`${itemPK.columnName}`, 
			</#list>
			<#list struct.list_item as item>
			`${item.columnName}`<#if item_has_next>, </#if>
			</#list>
		FROM ${struct.tableName}
		<where>
			<#list struct.list_item as item>
			<if test="${item.name} != null and ${item.name} != ''">
			AND `${item.columnName}` = ${r'#{'}${item.name},jdbcType=${item.jdbcType}${r'}'}
			</if>
			</#list>
		</where>
	</select>
	
	<select id="gets" resultType="${POJO_BASE_PKG}.model${module_name}.${struct.className}">
		SELECT 
			<#list struct.list_itemPK as itemPK>
			`${itemPK.columnName}`, 
			</#list>
			<#list struct.list_item as item>
			`${item.columnName}`<#if item_has_next>, </#if>
			</#list>
		FROM ${struct.tableName}
	</select>
	
	<select id="getCntWithPage" resultType="int">
		SELECT COUNT(1)
		FROM ${struct.tableName}
		<where>
			<#list struct.list_item as item>
			<if test="${struct.variableName}.${item.name} != null and ${struct.variableName}.${item.name} != ''">
			AND `${item.columnName}` = ${r'#{'}${struct.variableName}.${item.name},jdbcType=${item.jdbcType}${r'}'}
			</if>
			</#list>
		</where>
	</select>
	
	<select id="getsWithPage" resultType="${POJO_BASE_PKG}.model${module_name}.${struct.className}">
		SELECT 
			<#list struct.list_itemPK as itemPK>
			`${itemPK.columnName}`, 
			</#list>
			<#list struct.list_item as item>
			`${item.columnName}`<#if item_has_next>, </#if>
			</#list>
		FROM ${struct.tableName}
		<where>
			<#list struct.list_item as item>
			<if test="${struct.variableName}.${item.name} != null and ${struct.variableName}.${item.name} != ''">
			AND `${item.columnName}` = ${r'#{'}${struct.variableName}.${item.name},jdbcType=${item.jdbcType}${r'}'}
			</if>
			</#list>
		</where>
		LIMIT ${r'#{'}page${r'}'}, ${r'#{'}size${r'}'}
	</select>

</mapper>