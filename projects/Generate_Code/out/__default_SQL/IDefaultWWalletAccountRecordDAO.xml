<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
	This code is generated automatically. Please do not edit it.
	现在字段也可以要彻底动态？
-->
<mapper namespace="com.bittrade.__default.DAO.IDefaultWWalletAccountRecordDAO">

	<!-- 通用查询映射结果 -->
	<resultMap id="BaseResultMap" type="com.bittrade.pojo.model.WWalletAccountRecord">
		<id javaType="Long" property="id" jdbcType="BIGINT" column="id" />
		<result javaType="Long" property="userId" jdbcType="BIGINT" column="user_id" />
		<result javaType="Integer" property="currencyId" jdbcType="INTEGER" column="currency_id" />
		<result javaType="java.math.BigDecimal" property="beforeAmount" jdbcType="DECIMAL" column="before_amount" />
		<result javaType="java.math.BigDecimal" property="afterAmount" jdbcType="DECIMAL" column="after_amount" />
		<result javaType="java.math.BigDecimal" property="changeAmount" jdbcType="DECIMAL" column="change_amount" />
		<result javaType="Byte" property="type" jdbcType="INTEGER" column="type" />
		<result javaType="Long" property="orderId" jdbcType="BIGINT" column="order_id" />
		<result javaType="java.time.LocalDateTime" property="createTime" jdbcType="TIMESTAMP" column="create_time" />
	</resultMap>

	<!--
		通用查询结果列
		其他类似的类似，也可以公用（共用）引用。
	-->
	<sql id="Base_Column_List">
		<choose>
			<when test="strArr_field != null">
		<foreach collection="strArr_field" index="index" item="item" open="" separator="," close="">
			`${item}`
		</foreach>
			</when>
			<otherwise>
		`id` AS `id`, 
		`user_id` AS `userId`, 
		`currency_id` AS `currencyId`, 
		`before_amount` AS `beforeAmount`, 
		`after_amount` AS `afterAmount`, 
		`change_amount` AS `changeAmount`, 
		`type` AS `type`, 
		`order_id` AS `orderId`, 
		`create_time` AS `createTime`
			</otherwise>
		</choose>
	</sql>
	
	<!-- 其他的也可以类似的加， yes， 类似蕾丝的。 -->
	<sql id="sql_WHERE_forProperty">
		<choose>
			<when test="map_in != null">
			
		<foreach collection="map_in.entrySet()" index="map_index" item="map_item">
		AND `${map_index}` IN 
		<foreach collection="map_item" index="arr_index" item="arr_item" open="(" separator="," close=")">
			#{arr_item}
		</foreach>
		</foreach>
			
			</when>
			<!--
			<when test="_parameter != null and _parameter.WWalletAccountRecord != null and WWalletAccountRecord.map_in != null">
			</when>
			<otherwise>
			</otherwise>
			-->
		</choose>
	</sql>
	<sql id="sql_WHERE_forObject">
		<choose>
			<when test="wWalletAccountRecord.map_in != null">
			
		<foreach collection="wWalletAccountRecord.map_in.entrySet()" index="map_index" item="map_item">
		AND `${map_index}` IN 
		<foreach collection="map_item" index="arr_index" item="arr_item" open="(" separator="," close=")">
			#{arr_item}
		</foreach>
		</foreach>
			
			</when>
		</choose>
	</sql>
	
	
	<insert id="add" parameterType="com.bittrade.pojo.model.WWalletAccountRecord">
		INSERT INTO w_wallet_account_record(`id`, `user_id`, `currency_id`, `before_amount`, `after_amount`, `change_amount`, `type`, `order_id`, `create_time`)
		VALUES(#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{currencyId,jdbcType=INTEGER}, #{beforeAmount,jdbcType=DECIMAL}, #{afterAmount,jdbcType=DECIMAL}, #{changeAmount,jdbcType=DECIMAL}, #{type,jdbcType=INTEGER}, #{orderId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP})
	</insert>
	
	<insert id="addWithSelective" parameterType="com.bittrade.pojo.model.WWalletAccountRecord">
		INSERT INTO w_wallet_account_record(
			<if test="id != null">
			`id`, 
			</if>
			<if test="userId != null">
			`user_id`, 
			</if>
			<if test="currencyId != null">
			`currency_id`, 
			</if>
			<if test="beforeAmount != null">
			`before_amount`, 
			</if>
			<if test="afterAmount != null">
			`after_amount`, 
			</if>
			<if test="changeAmount != null">
			`change_amount`, 
			</if>
			<if test="type != null">
			`type`, 
			</if>
			<if test="orderId != null">
			`order_id`, 
			</if>
			<if test="createTime != null">
			`create_time`
			</if>
		)
		VALUES(
			<if test="id != null">
			#{id,jdbcType=BIGINT}, 
			</if>
			<if test="userId != null">
			#{userId,jdbcType=BIGINT}, 
			</if>
			<if test="currencyId != null">
			#{currencyId,jdbcType=INTEGER}, 
			</if>
			<if test="beforeAmount != null">
			#{beforeAmount,jdbcType=DECIMAL}, 
			</if>
			<if test="afterAmount != null">
			#{afterAmount,jdbcType=DECIMAL}, 
			</if>
			<if test="changeAmount != null">
			#{changeAmount,jdbcType=DECIMAL}, 
			</if>
			<if test="type != null">
			#{type,jdbcType=INTEGER}, 
			</if>
			<if test="orderId != null">
			#{orderId,jdbcType=BIGINT}, 
			</if>
			<if test="createTime != null">
			#{createTime,jdbcType=TIMESTAMP}
			</if>
		)
	</insert>
	
	<delete id="removeByPK">
		DELETE FROM w_wallet_account_record
		<where>
			AND `id` = #{id,jdbcType=BIGINT}
		</where>
	</delete>
	
	<delete id="removeBy" parameterType="com.bittrade.pojo.model.WWalletAccountRecord">
		DELETE FROM w_wallet_account_record
		<where>
			<if test="userId != null">
			AND `user_id` = #{userId,jdbcType=BIGINT}
			</if>
			<if test="currencyId != null">
			AND `currency_id` = #{currencyId,jdbcType=INTEGER}
			</if>
			<if test="beforeAmount != null">
			AND `before_amount` = #{beforeAmount,jdbcType=DECIMAL}
			</if>
			<if test="afterAmount != null">
			AND `after_amount` = #{afterAmount,jdbcType=DECIMAL}
			</if>
			<if test="changeAmount != null">
			AND `change_amount` = #{changeAmount,jdbcType=DECIMAL}
			</if>
			<if test="type != null">
			AND `type` = #{type,jdbcType=INTEGER}
			</if>
			<if test="orderId != null">
			AND `order_id` = #{orderId,jdbcType=BIGINT}
			</if>
			<if test="createTime != null">
			AND `create_time` = #{createTime,jdbcType=TIMESTAMP}
			</if>
		</where>
	</delete>
	
	<update id="modifyByPK" parameterType="com.bittrade.pojo.model.WWalletAccountRecord">
		UPDATE w_wallet_account_record
		<set>
			`user_id` = #{userId,jdbcType=BIGINT}, 
			`currency_id` = #{currencyId,jdbcType=INTEGER}, 
			`before_amount` = #{beforeAmount,jdbcType=DECIMAL}, 
			`after_amount` = #{afterAmount,jdbcType=DECIMAL}, 
			`change_amount` = #{changeAmount,jdbcType=DECIMAL}, 
			`type` = #{type,jdbcType=INTEGER}, 
			`order_id` = #{orderId,jdbcType=BIGINT}, 
			`create_time` = #{createTime,jdbcType=TIMESTAMP}, 
		</set>
		<where>
			AND `id` = #{id,jdbcType=BIGINT}
		</where>
	</update>
	
	<update id="modifyWithSelectiveByPK" parameterType="com.bittrade.pojo.model.WWalletAccountRecord">
		UPDATE w_wallet_account_record
		<set>
			<if test="userId != null">
			`user_id` = #{userId,jdbcType=BIGINT}, 
			</if>
			<if test="currencyId != null">
			`currency_id` = #{currencyId,jdbcType=INTEGER}, 
			</if>
			<if test="beforeAmount != null">
			`before_amount` = #{beforeAmount,jdbcType=DECIMAL}, 
			</if>
			<if test="afterAmount != null">
			`after_amount` = #{afterAmount,jdbcType=DECIMAL}, 
			</if>
			<if test="changeAmount != null">
			`change_amount` = #{changeAmount,jdbcType=DECIMAL}, 
			</if>
			<if test="type != null">
			`type` = #{type,jdbcType=INTEGER}, 
			</if>
			<if test="orderId != null">
			`order_id` = #{orderId,jdbcType=BIGINT}, 
			</if>
			<if test="createTime != null">
			`create_time` = #{createTime,jdbcType=TIMESTAMP}, 
			</if>
		</set>
		<where>
			AND `id` = #{id,jdbcType=BIGINT}
		</where>
	</update>
	
	<update id="modifyBy">
		UPDATE w_wallet_account_record
		<set>
			`user_id` = #{wWalletAccountRecord.userId,jdbcType=BIGINT}, 
			`currency_id` = #{wWalletAccountRecord.currencyId,jdbcType=INTEGER}, 
			`before_amount` = #{wWalletAccountRecord.beforeAmount,jdbcType=DECIMAL}, 
			`after_amount` = #{wWalletAccountRecord.afterAmount,jdbcType=DECIMAL}, 
			`change_amount` = #{wWalletAccountRecord.changeAmount,jdbcType=DECIMAL}, 
			`type` = #{wWalletAccountRecord.type,jdbcType=INTEGER}, 
			`order_id` = #{wWalletAccountRecord.orderId,jdbcType=BIGINT}, 
			`create_time` = #{wWalletAccountRecord.createTime,jdbcType=TIMESTAMP}, 
		</set>
		<where>
		<if test="condiWWalletAccountRecord != null">
			<if test="condiWWalletAccountRecord.id != null">
			AND `id` = #{condiWWalletAccountRecord.id,jdbcType=BIGINT}
			</if>
			<if test="condiWWalletAccountRecord.userId != null">
			AND `user_id` = #{condiWWalletAccountRecord.userId,jdbcType=BIGINT}
			</if>
			<if test="condiWWalletAccountRecord.currencyId != null">
			AND `currency_id` = #{condiWWalletAccountRecord.currencyId,jdbcType=INTEGER}
			</if>
			<if test="condiWWalletAccountRecord.beforeAmount != null">
			AND `before_amount` = #{condiWWalletAccountRecord.beforeAmount,jdbcType=DECIMAL}
			</if>
			<if test="condiWWalletAccountRecord.afterAmount != null">
			AND `after_amount` = #{condiWWalletAccountRecord.afterAmount,jdbcType=DECIMAL}
			</if>
			<if test="condiWWalletAccountRecord.changeAmount != null">
			AND `change_amount` = #{condiWWalletAccountRecord.changeAmount,jdbcType=DECIMAL}
			</if>
			<if test="condiWWalletAccountRecord.type != null">
			AND `type` = #{condiWWalletAccountRecord.type,jdbcType=INTEGER}
			</if>
			<if test="condiWWalletAccountRecord.orderId != null">
			AND `order_id` = #{condiWWalletAccountRecord.orderId,jdbcType=BIGINT}
			</if>
			<if test="condiWWalletAccountRecord.createTime != null">
			AND `create_time` = #{condiWWalletAccountRecord.createTime,jdbcType=TIMESTAMP}
			</if>
		</if>
		</where>
	</update>
	
	<update id="modifyWithSelectiveBy">
		UPDATE w_wallet_account_record
		<set>
		<if test="wWalletAccountRecord != null">
			<if test="wWalletAccountRecord.userId != null">
			`user_id` = #{wWalletAccountRecord.userId,jdbcType=BIGINT}, 
			</if>
			<if test="wWalletAccountRecord.currencyId != null">
			`currency_id` = #{wWalletAccountRecord.currencyId,jdbcType=INTEGER}, 
			</if>
			<if test="wWalletAccountRecord.beforeAmount != null">
			`before_amount` = #{wWalletAccountRecord.beforeAmount,jdbcType=DECIMAL}, 
			</if>
			<if test="wWalletAccountRecord.afterAmount != null">
			`after_amount` = #{wWalletAccountRecord.afterAmount,jdbcType=DECIMAL}, 
			</if>
			<if test="wWalletAccountRecord.changeAmount != null">
			`change_amount` = #{wWalletAccountRecord.changeAmount,jdbcType=DECIMAL}, 
			</if>
			<if test="wWalletAccountRecord.type != null">
			`type` = #{wWalletAccountRecord.type,jdbcType=INTEGER}, 
			</if>
			<if test="wWalletAccountRecord.orderId != null">
			`order_id` = #{wWalletAccountRecord.orderId,jdbcType=BIGINT}, 
			</if>
			<if test="wWalletAccountRecord.createTime != null">
			`create_time` = #{wWalletAccountRecord.createTime,jdbcType=TIMESTAMP}, 
			</if>
		</if>
		</set>
		<where>
		<if test="condiWWalletAccountRecord != null">
			<if test="condiWWalletAccountRecord.id != null">
			AND `id` = #{condiWWalletAccountRecord.id,jdbcType=BIGINT}
			</if>
			<if test="condiWWalletAccountRecord.userId != null">
			AND `user_id` = #{condiWWalletAccountRecord.userId,jdbcType=BIGINT}
			</if>
			<if test="condiWWalletAccountRecord.currencyId != null">
			AND `currency_id` = #{condiWWalletAccountRecord.currencyId,jdbcType=INTEGER}
			</if>
			<if test="condiWWalletAccountRecord.beforeAmount != null">
			AND `before_amount` = #{condiWWalletAccountRecord.beforeAmount,jdbcType=DECIMAL}
			</if>
			<if test="condiWWalletAccountRecord.afterAmount != null">
			AND `after_amount` = #{condiWWalletAccountRecord.afterAmount,jdbcType=DECIMAL}
			</if>
			<if test="condiWWalletAccountRecord.changeAmount != null">
			AND `change_amount` = #{condiWWalletAccountRecord.changeAmount,jdbcType=DECIMAL}
			</if>
			<if test="condiWWalletAccountRecord.type != null">
			AND `type` = #{condiWWalletAccountRecord.type,jdbcType=INTEGER}
			</if>
			<if test="condiWWalletAccountRecord.orderId != null">
			AND `order_id` = #{condiWWalletAccountRecord.orderId,jdbcType=BIGINT}
			</if>
			<if test="condiWWalletAccountRecord.createTime != null">
			AND `create_time` = #{condiWWalletAccountRecord.createTime,jdbcType=TIMESTAMP}
			</if>
		</if>
		</where>
	</update>
	
	<select id="getByPK" resultType="com.bittrade.pojo.model.WWalletAccountRecord">
		SELECT 
			`id`, 
			`user_id`, 
			`currency_id`, 
			`before_amount`, 
			`after_amount`, 
			`change_amount`, 
			`type`, 
			`order_id`, 
			`create_time`
		FROM w_wallet_account_record
		<where>
			AND `id` = #{id,jdbcType=BIGINT}
		</where>
	</select>
	
	<select id="getBy" resultType="com.bittrade.pojo.model.WWalletAccountRecord">
		SELECT 
			`id`, 
			`user_id`, 
			`currency_id`, 
			`before_amount`, 
			`after_amount`, 
			`change_amount`, 
			`type`, 
			`order_id`, 
			`create_time`
		FROM w_wallet_account_record
		<where>
			<if test="userId != null">
			AND `user_id` = #{userId,jdbcType=BIGINT}
			</if>
			<if test="currencyId != null">
			AND `currency_id` = #{currencyId,jdbcType=INTEGER}
			</if>
			<if test="beforeAmount != null">
			AND `before_amount` = #{beforeAmount,jdbcType=DECIMAL}
			</if>
			<if test="afterAmount != null">
			AND `after_amount` = #{afterAmount,jdbcType=DECIMAL}
			</if>
			<if test="changeAmount != null">
			AND `change_amount` = #{changeAmount,jdbcType=DECIMAL}
			</if>
			<if test="type != null">
			AND `type` = #{type,jdbcType=INTEGER}
			</if>
			<if test="orderId != null">
			AND `order_id` = #{orderId,jdbcType=BIGINT}
			</if>
			<if test="createTime != null">
			AND `create_time` = #{createTime,jdbcType=TIMESTAMP}
			</if>
		</where>
		LIMIT 1
	</select>
	
	<select id="get" resultType="com.bittrade.pojo.model.WWalletAccountRecord">
		SELECT 
			`id`, 
			`user_id`, 
			`currency_id`, 
			`before_amount`, 
			`after_amount`, 
			`change_amount`, 
			`type`, 
			`order_id`, 
			`create_time`
		FROM w_wallet_account_record
		LIMIT 1
	</select>
	
	<select id="getsBy" resultType="com.bittrade.pojo.model.WWalletAccountRecord">
		SELECT 
			<include refid="Base_Column_List"></include>
		FROM w_wallet_account_record
		<where>
			<if test="userId != null">
			AND `user_id` = #{userId,jdbcType=BIGINT}
			</if>
			<if test="currencyId != null">
			AND `currency_id` = #{currencyId,jdbcType=INTEGER}
			</if>
			<if test="beforeAmount != null">
			AND `before_amount` = #{beforeAmount,jdbcType=DECIMAL}
			</if>
			<if test="afterAmount != null">
			AND `after_amount` = #{afterAmount,jdbcType=DECIMAL}
			</if>
			<if test="changeAmount != null">
			AND `change_amount` = #{changeAmount,jdbcType=DECIMAL}
			</if>
			<if test="type != null">
			AND `type` = #{type,jdbcType=INTEGER}
			</if>
			<if test="orderId != null">
			AND `order_id` = #{orderId,jdbcType=BIGINT}
			</if>
			<if test="createTime != null">
			AND `create_time` = #{createTime,jdbcType=TIMESTAMP}
			</if>
			<include refid="sql_WHERE_forProperty"></include>
		</where>
	</select>
	
	<select id="gets" resultType="com.bittrade.pojo.model.WWalletAccountRecord">
		SELECT 
			<include refid="Base_Column_List"></include>
		FROM w_wallet_account_record
	</select>
	
	<select id="getCntBy" resultType="int">
		SELECT COUNT(1)
		FROM w_wallet_account_record
		<where>
		<if test="wWalletAccountRecord != null">
			<if test="wWalletAccountRecord.userId != null">
			AND `user_id` = #{wWalletAccountRecord.userId,jdbcType=BIGINT}
			</if>
			<if test="wWalletAccountRecord.currencyId != null">
			AND `currency_id` = #{wWalletAccountRecord.currencyId,jdbcType=INTEGER}
			</if>
			<if test="wWalletAccountRecord.beforeAmount != null">
			AND `before_amount` = #{wWalletAccountRecord.beforeAmount,jdbcType=DECIMAL}
			</if>
			<if test="wWalletAccountRecord.afterAmount != null">
			AND `after_amount` = #{wWalletAccountRecord.afterAmount,jdbcType=DECIMAL}
			</if>
			<if test="wWalletAccountRecord.changeAmount != null">
			AND `change_amount` = #{wWalletAccountRecord.changeAmount,jdbcType=DECIMAL}
			</if>
			<if test="wWalletAccountRecord.type != null">
			AND `type` = #{wWalletAccountRecord.type,jdbcType=INTEGER}
			</if>
			<if test="wWalletAccountRecord.orderId != null">
			AND `order_id` = #{wWalletAccountRecord.orderId,jdbcType=BIGINT}
			</if>
			<if test="wWalletAccountRecord.createTime != null">
			AND `create_time` = #{wWalletAccountRecord.createTime,jdbcType=TIMESTAMP}
			</if>
			<include refid="sql_WHERE_forObject"></include>
		</if>
		</where>
	</select>
	
	<select id="getsByPage" resultType="com.bittrade.pojo.model.WWalletAccountRecord">
		SELECT 
			`id`, 
			`user_id`, 
			`currency_id`, 
			`before_amount`, 
			`after_amount`, 
			`change_amount`, 
			`type`, 
			`order_id`, 
			`create_time`
		FROM w_wallet_account_record
		<where>
		<if test="wWalletAccountRecord != null">
			<if test="wWalletAccountRecord.userId != null">
			AND `user_id` = #{wWalletAccountRecord.userId,jdbcType=BIGINT}
			</if>
			<if test="wWalletAccountRecord.currencyId != null">
			AND `currency_id` = #{wWalletAccountRecord.currencyId,jdbcType=INTEGER}
			</if>
			<if test="wWalletAccountRecord.beforeAmount != null">
			AND `before_amount` = #{wWalletAccountRecord.beforeAmount,jdbcType=DECIMAL}
			</if>
			<if test="wWalletAccountRecord.afterAmount != null">
			AND `after_amount` = #{wWalletAccountRecord.afterAmount,jdbcType=DECIMAL}
			</if>
			<if test="wWalletAccountRecord.changeAmount != null">
			AND `change_amount` = #{wWalletAccountRecord.changeAmount,jdbcType=DECIMAL}
			</if>
			<if test="wWalletAccountRecord.type != null">
			AND `type` = #{wWalletAccountRecord.type,jdbcType=INTEGER}
			</if>
			<if test="wWalletAccountRecord.orderId != null">
			AND `order_id` = #{wWalletAccountRecord.orderId,jdbcType=BIGINT}
			</if>
			<if test="wWalletAccountRecord.createTime != null">
			AND `create_time` = #{wWalletAccountRecord.createTime,jdbcType=TIMESTAMP}
			</if>
			<include refid="sql_WHERE_forObject"></include>
		</if>
		</where>
		LIMIT #{page}, #{size}
	</select>

</mapper>