<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
	This code is generated automatically. Please do not edit it.
	现在字段也可以要彻底动态？
-->
<mapper namespace="com.bittrade.__default.DAO.IDefaultTParamConfigDAO">

	<!-- 通用查询映射结果 -->
	<resultMap id="BaseResultMap" type="com.bittrade.pojo.model.TParamConfig">
		<id javaType="Integer" property="id" jdbcType="INTEGER" column="id" />
		<result javaType="String" property="paramKey" jdbcType="VARCHAR" column="param_key" />
		<result javaType="String" property="paramValue" jdbcType="VARCHAR" column="param_value" />
		<result javaType="Integer" property="paramStatus" jdbcType="INTEGER" column="param_status" />
		<result javaType="String" property="paramRemark" jdbcType="VARCHAR" column="param_remark" />
		<result javaType="java.time.LocalDateTime" property="createTime" jdbcType="TIMESTAMP" column="create_time" />
		<result javaType="String" property="creater" jdbcType="VARCHAR" column="creater" />
		<result javaType="java.time.LocalDateTime" property="updateTime" jdbcType="TIMESTAMP" column="update_time" />
		<result javaType="String" property="updater" jdbcType="VARCHAR" column="updater" />
	</resultMap>

	<!-- 通用查询结果列 -->
	<sql id="Base_Column_List">
		`id` AS id, 
		`param_key` AS paramKey, 
		`param_value` AS paramValue, 
		`param_status` AS paramStatus, 
		`param_remark` AS paramRemark, 
		`create_time` AS createTime, 
		`creater` AS creater, 
		`update_time` AS updateTime, 
		`updater` AS updater
	</sql>
	
	<!-- 其他的也可以类似的加， yes， 类似蕾丝的。 -->
	<sql id="sql_WHERE">
		<if test="tParamConfig.map_in != null">
		<foreach collection="tParamConfig.map_in.entrySet()" index="map_index" item="map_item">
		AND `${map_index}` IN 
		<foreach collection="map_item" index="arr_index" item="arr_item" open="(" separator="," close=")">
			#{arr_item}
		</foreach>
		</foreach>
		</if>
	</sql>
	
	
	<insert id="add" parameterType="com.bittrade.pojo.model.TParamConfig">
		INSERT INTO t_param_config(`param_key`, `param_value`, `param_status`, `param_remark`, `create_time`, `creater`, `update_time`, `updater`)
		VALUES(#{paramKey,jdbcType=VARCHAR}, #{paramValue,jdbcType=VARCHAR}, #{paramStatus,jdbcType=INTEGER}, #{paramRemark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{creater,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{updater,jdbcType=VARCHAR})
	</insert>
	
	<insert id="addWithSelective" parameterType="com.bittrade.pojo.model.TParamConfig">
		INSERT INTO t_param_config(
			<if test="paramKey != null">
			`param_key`, 
			</if>
			<if test="paramValue != null">
			`param_value`, 
			</if>
			<if test="paramStatus != null">
			`param_status`, 
			</if>
			<if test="paramRemark != null">
			`param_remark`, 
			</if>
			<if test="createTime != null">
			`create_time`, 
			</if>
			<if test="creater != null">
			`creater`, 
			</if>
			<if test="updateTime != null">
			`update_time`, 
			</if>
			<if test="updater != null">
			`updater`
			</if>
		)
		VALUES(
			<if test="paramKey != null">
			#{paramKey,jdbcType=VARCHAR}, 
			</if>
			<if test="paramValue != null">
			#{paramValue,jdbcType=VARCHAR}, 
			</if>
			<if test="paramStatus != null">
			#{paramStatus,jdbcType=INTEGER}, 
			</if>
			<if test="paramRemark != null">
			#{paramRemark,jdbcType=VARCHAR}, 
			</if>
			<if test="createTime != null">
			#{createTime,jdbcType=TIMESTAMP}, 
			</if>
			<if test="creater != null">
			#{creater,jdbcType=VARCHAR}, 
			</if>
			<if test="updateTime != null">
			#{updateTime,jdbcType=TIMESTAMP}, 
			</if>
			<if test="updater != null">
			#{updater,jdbcType=VARCHAR}
			</if>
		)
	</insert>
	
	<delete id="removeByPK">
		DELETE FROM t_param_config
		<where>
			AND `id` = #{id,jdbcType=INTEGER}
		</where>
	</delete>
	
	<delete id="removeBy" parameterType="com.bittrade.pojo.model.TParamConfig">
		DELETE FROM t_param_config
		<where>
			<if test="paramKey != null">
			AND `param_key` = #{paramKey,jdbcType=VARCHAR}
			</if>
			<if test="paramValue != null">
			AND `param_value` = #{paramValue,jdbcType=VARCHAR}
			</if>
			<if test="paramStatus != null">
			AND `param_status` = #{paramStatus,jdbcType=INTEGER}
			</if>
			<if test="paramRemark != null">
			AND `param_remark` = #{paramRemark,jdbcType=VARCHAR}
			</if>
			<if test="createTime != null">
			AND `create_time` = #{createTime,jdbcType=TIMESTAMP}
			</if>
			<if test="creater != null">
			AND `creater` = #{creater,jdbcType=VARCHAR}
			</if>
			<if test="updateTime != null">
			AND `update_time` = #{updateTime,jdbcType=TIMESTAMP}
			</if>
			<if test="updater != null">
			AND `updater` = #{updater,jdbcType=VARCHAR}
			</if>
		</where>
	</delete>
	
	<update id="modifyByPK" parameterType="com.bittrade.pojo.model.TParamConfig">
		UPDATE t_param_config
		<set>
			`param_key` = #{paramKey,jdbcType=VARCHAR}, 
			`param_value` = #{paramValue,jdbcType=VARCHAR}, 
			`param_status` = #{paramStatus,jdbcType=INTEGER}, 
			`param_remark` = #{paramRemark,jdbcType=VARCHAR}, 
			`create_time` = #{createTime,jdbcType=TIMESTAMP}, 
			`creater` = #{creater,jdbcType=VARCHAR}, 
			`update_time` = #{updateTime,jdbcType=TIMESTAMP}, 
			`updater` = #{updater,jdbcType=VARCHAR}, 
		</set>
		<where>
			AND `id` = #{id,jdbcType=INTEGER}
		</where>
	</update>
	
	<update id="modifyWithSelectiveByPK" parameterType="com.bittrade.pojo.model.TParamConfig">
		UPDATE t_param_config
		<set>
			<if test="paramKey != null">
			`param_key` = #{paramKey,jdbcType=VARCHAR}, 
			</if>
			<if test="paramValue != null">
			`param_value` = #{paramValue,jdbcType=VARCHAR}, 
			</if>
			<if test="paramStatus != null">
			`param_status` = #{paramStatus,jdbcType=INTEGER}, 
			</if>
			<if test="paramRemark != null">
			`param_remark` = #{paramRemark,jdbcType=VARCHAR}, 
			</if>
			<if test="createTime != null">
			`create_time` = #{createTime,jdbcType=TIMESTAMP}, 
			</if>
			<if test="creater != null">
			`creater` = #{creater,jdbcType=VARCHAR}, 
			</if>
			<if test="updateTime != null">
			`update_time` = #{updateTime,jdbcType=TIMESTAMP}, 
			</if>
			<if test="updater != null">
			`updater` = #{updater,jdbcType=VARCHAR}, 
			</if>
		</set>
		<where>
			AND `id` = #{id,jdbcType=INTEGER}
		</where>
	</update>
	
	<update id="modifyBy">
		UPDATE t_param_config
		<set>
			`param_key` = #{tParamConfig.paramKey,jdbcType=VARCHAR}, 
			`param_value` = #{tParamConfig.paramValue,jdbcType=VARCHAR}, 
			`param_status` = #{tParamConfig.paramStatus,jdbcType=INTEGER}, 
			`param_remark` = #{tParamConfig.paramRemark,jdbcType=VARCHAR}, 
			`create_time` = #{tParamConfig.createTime,jdbcType=TIMESTAMP}, 
			`creater` = #{tParamConfig.creater,jdbcType=VARCHAR}, 
			`update_time` = #{tParamConfig.updateTime,jdbcType=TIMESTAMP}, 
			`updater` = #{tParamConfig.updater,jdbcType=VARCHAR}, 
		</set>
		<where>
		<if test="condiTParamConfig != null">
			<if test="condiTParamConfig.id != null">
			AND `id` = #{condiTParamConfig.id,jdbcType=INTEGER}
			</if>
			<if test="condiTParamConfig.paramKey != null">
			AND `param_key` = #{condiTParamConfig.paramKey,jdbcType=VARCHAR}
			</if>
			<if test="condiTParamConfig.paramValue != null">
			AND `param_value` = #{condiTParamConfig.paramValue,jdbcType=VARCHAR}
			</if>
			<if test="condiTParamConfig.paramStatus != null">
			AND `param_status` = #{condiTParamConfig.paramStatus,jdbcType=INTEGER}
			</if>
			<if test="condiTParamConfig.paramRemark != null">
			AND `param_remark` = #{condiTParamConfig.paramRemark,jdbcType=VARCHAR}
			</if>
			<if test="condiTParamConfig.createTime != null">
			AND `create_time` = #{condiTParamConfig.createTime,jdbcType=TIMESTAMP}
			</if>
			<if test="condiTParamConfig.creater != null">
			AND `creater` = #{condiTParamConfig.creater,jdbcType=VARCHAR}
			</if>
			<if test="condiTParamConfig.updateTime != null">
			AND `update_time` = #{condiTParamConfig.updateTime,jdbcType=TIMESTAMP}
			</if>
			<if test="condiTParamConfig.updater != null">
			AND `updater` = #{condiTParamConfig.updater,jdbcType=VARCHAR}
			</if>
		</if>
		</where>
	</update>
	
	<update id="modifyWithSelectiveBy">
		UPDATE t_param_config
		<set>
		<if test="tParamConfig != null">
			<if test="tParamConfig.paramKey != null">
			`param_key` = #{tParamConfig.paramKey,jdbcType=VARCHAR}, 
			</if>
			<if test="tParamConfig.paramValue != null">
			`param_value` = #{tParamConfig.paramValue,jdbcType=VARCHAR}, 
			</if>
			<if test="tParamConfig.paramStatus != null">
			`param_status` = #{tParamConfig.paramStatus,jdbcType=INTEGER}, 
			</if>
			<if test="tParamConfig.paramRemark != null">
			`param_remark` = #{tParamConfig.paramRemark,jdbcType=VARCHAR}, 
			</if>
			<if test="tParamConfig.createTime != null">
			`create_time` = #{tParamConfig.createTime,jdbcType=TIMESTAMP}, 
			</if>
			<if test="tParamConfig.creater != null">
			`creater` = #{tParamConfig.creater,jdbcType=VARCHAR}, 
			</if>
			<if test="tParamConfig.updateTime != null">
			`update_time` = #{tParamConfig.updateTime,jdbcType=TIMESTAMP}, 
			</if>
			<if test="tParamConfig.updater != null">
			`updater` = #{tParamConfig.updater,jdbcType=VARCHAR}, 
			</if>
		</if>
		</set>
		<where>
		<if test="condiTParamConfig != null">
			<if test="condiTParamConfig.id != null">
			AND `id` = #{condiTParamConfig.id,jdbcType=INTEGER}
			</if>
			<if test="condiTParamConfig.paramKey != null">
			AND `param_key` = #{condiTParamConfig.paramKey,jdbcType=VARCHAR}
			</if>
			<if test="condiTParamConfig.paramValue != null">
			AND `param_value` = #{condiTParamConfig.paramValue,jdbcType=VARCHAR}
			</if>
			<if test="condiTParamConfig.paramStatus != null">
			AND `param_status` = #{condiTParamConfig.paramStatus,jdbcType=INTEGER}
			</if>
			<if test="condiTParamConfig.paramRemark != null">
			AND `param_remark` = #{condiTParamConfig.paramRemark,jdbcType=VARCHAR}
			</if>
			<if test="condiTParamConfig.createTime != null">
			AND `create_time` = #{condiTParamConfig.createTime,jdbcType=TIMESTAMP}
			</if>
			<if test="condiTParamConfig.creater != null">
			AND `creater` = #{condiTParamConfig.creater,jdbcType=VARCHAR}
			</if>
			<if test="condiTParamConfig.updateTime != null">
			AND `update_time` = #{condiTParamConfig.updateTime,jdbcType=TIMESTAMP}
			</if>
			<if test="condiTParamConfig.updater != null">
			AND `updater` = #{condiTParamConfig.updater,jdbcType=VARCHAR}
			</if>
		</if>
		</where>
	</update>
	
	<select id="getByPK" resultType="com.bittrade.pojo.model.TParamConfig">
		SELECT 
			`id`, 
			`param_key`, 
			`param_value`, 
			`param_status`, 
			`param_remark`, 
			`create_time`, 
			`creater`, 
			`update_time`, 
			`updater`
		FROM t_param_config
		<where>
			AND `id` = #{id,jdbcType=INTEGER}
		</where>
	</select>
	
	<select id="getBy" resultType="com.bittrade.pojo.model.TParamConfig">
		SELECT 
			`id`, 
			`param_key`, 
			`param_value`, 
			`param_status`, 
			`param_remark`, 
			`create_time`, 
			`creater`, 
			`update_time`, 
			`updater`
		FROM t_param_config
		<where>
			<if test="paramKey != null">
			AND `param_key` = #{paramKey,jdbcType=VARCHAR}
			</if>
			<if test="paramValue != null">
			AND `param_value` = #{paramValue,jdbcType=VARCHAR}
			</if>
			<if test="paramStatus != null">
			AND `param_status` = #{paramStatus,jdbcType=INTEGER}
			</if>
			<if test="paramRemark != null">
			AND `param_remark` = #{paramRemark,jdbcType=VARCHAR}
			</if>
			<if test="createTime != null">
			AND `create_time` = #{createTime,jdbcType=TIMESTAMP}
			</if>
			<if test="creater != null">
			AND `creater` = #{creater,jdbcType=VARCHAR}
			</if>
			<if test="updateTime != null">
			AND `update_time` = #{updateTime,jdbcType=TIMESTAMP}
			</if>
			<if test="updater != null">
			AND `updater` = #{updater,jdbcType=VARCHAR}
			</if>
		</where>
		LIMIT 1
	</select>
	
	<select id="get" resultType="com.bittrade.pojo.model.TParamConfig">
		SELECT 
			`id`, 
			`param_key`, 
			`param_value`, 
			`param_status`, 
			`param_remark`, 
			`create_time`, 
			`creater`, 
			`update_time`, 
			`updater`
		FROM t_param_config
		LIMIT 1
	</select>
	
	<select id="getsBy" resultType="com.bittrade.pojo.model.TParamConfig">
		SELECT 
			`id`, 
			`param_key`, 
			`param_value`, 
			`param_status`, 
			`param_remark`, 
			`create_time`, 
			`creater`, 
			`update_time`, 
			`updater`
		FROM t_param_config
		<where>
			<if test="paramKey != null">
			AND `param_key` = #{paramKey,jdbcType=VARCHAR}
			</if>
			<if test="paramValue != null">
			AND `param_value` = #{paramValue,jdbcType=VARCHAR}
			</if>
			<if test="paramStatus != null">
			AND `param_status` = #{paramStatus,jdbcType=INTEGER}
			</if>
			<if test="paramRemark != null">
			AND `param_remark` = #{paramRemark,jdbcType=VARCHAR}
			</if>
			<if test="createTime != null">
			AND `create_time` = #{createTime,jdbcType=TIMESTAMP}
			</if>
			<if test="creater != null">
			AND `creater` = #{creater,jdbcType=VARCHAR}
			</if>
			<if test="updateTime != null">
			AND `update_time` = #{updateTime,jdbcType=TIMESTAMP}
			</if>
			<if test="updater != null">
			AND `updater` = #{updater,jdbcType=VARCHAR}
			</if>
		</where>
	</select>
	
	<select id="gets" resultType="com.bittrade.pojo.model.TParamConfig">
		SELECT 
			`id`, 
			`param_key`, 
			`param_value`, 
			`param_status`, 
			`param_remark`, 
			`create_time`, 
			`creater`, 
			`update_time`, 
			`updater`
		FROM t_param_config
	</select>
	
	<select id="getCntBy" resultType="int">
		SELECT COUNT(1)
		FROM t_param_config
		<where>
		<if test="tParamConfig != null">
			<if test="tParamConfig.paramKey != null">
			AND `param_key` = #{tParamConfig.paramKey,jdbcType=VARCHAR}
			</if>
			<if test="tParamConfig.paramValue != null">
			AND `param_value` = #{tParamConfig.paramValue,jdbcType=VARCHAR}
			</if>
			<if test="tParamConfig.paramStatus != null">
			AND `param_status` = #{tParamConfig.paramStatus,jdbcType=INTEGER}
			</if>
			<if test="tParamConfig.paramRemark != null">
			AND `param_remark` = #{tParamConfig.paramRemark,jdbcType=VARCHAR}
			</if>
			<if test="tParamConfig.createTime != null">
			AND `create_time` = #{tParamConfig.createTime,jdbcType=TIMESTAMP}
			</if>
			<if test="tParamConfig.creater != null">
			AND `creater` = #{tParamConfig.creater,jdbcType=VARCHAR}
			</if>
			<if test="tParamConfig.updateTime != null">
			AND `update_time` = #{tParamConfig.updateTime,jdbcType=TIMESTAMP}
			</if>
			<if test="tParamConfig.updater != null">
			AND `updater` = #{tParamConfig.updater,jdbcType=VARCHAR}
			</if>
			<include refid="sql_WHERE"></include>
		</if>
		</where>
	</select>
	
	<select id="getsByPage" resultType="com.bittrade.pojo.model.TParamConfig">
		SELECT 
			`id`, 
			`param_key`, 
			`param_value`, 
			`param_status`, 
			`param_remark`, 
			`create_time`, 
			`creater`, 
			`update_time`, 
			`updater`
		FROM t_param_config
		<where>
		<if test="tParamConfig != null">
			<if test="tParamConfig.paramKey != null">
			AND `param_key` = #{tParamConfig.paramKey,jdbcType=VARCHAR}
			</if>
			<if test="tParamConfig.paramValue != null">
			AND `param_value` = #{tParamConfig.paramValue,jdbcType=VARCHAR}
			</if>
			<if test="tParamConfig.paramStatus != null">
			AND `param_status` = #{tParamConfig.paramStatus,jdbcType=INTEGER}
			</if>
			<if test="tParamConfig.paramRemark != null">
			AND `param_remark` = #{tParamConfig.paramRemark,jdbcType=VARCHAR}
			</if>
			<if test="tParamConfig.createTime != null">
			AND `create_time` = #{tParamConfig.createTime,jdbcType=TIMESTAMP}
			</if>
			<if test="tParamConfig.creater != null">
			AND `creater` = #{tParamConfig.creater,jdbcType=VARCHAR}
			</if>
			<if test="tParamConfig.updateTime != null">
			AND `update_time` = #{tParamConfig.updateTime,jdbcType=TIMESTAMP}
			</if>
			<if test="tParamConfig.updater != null">
			AND `updater` = #{tParamConfig.updater,jdbcType=VARCHAR}
			</if>
			<include refid="sql_WHERE"></include>
		</if>
		</where>
		LIMIT #{page}, #{size}
	</select>

</mapper>