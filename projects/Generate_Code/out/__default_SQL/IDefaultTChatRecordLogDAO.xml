<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
	This code is generated automatically. Please do not edit it.
	现在字段也可以要彻底动态？
-->
<mapper namespace="com.bittrade.__default.DAO.IDefaultTChatRecordLogDAO">

	<!-- 通用查询映射结果 -->
	<resultMap id="BaseResultMap" type="com.bittrade.pojo.model.TChatRecordLog">
		<id javaType="Long" property="id" jdbcType="BIGINT" column="id" />
		<result javaType="Long" property="senderId" jdbcType="BIGINT" column="sender_id" />
		<result javaType="Long" property="receiverId" jdbcType="BIGINT" column="receiver_id" />
		<result javaType="Byte[]" property="content" jdbcType="CLOB" column="content" />
		<result javaType="Byte" property="messageType" jdbcType="INTEGER" column="message_type" />
		<result javaType="java.time.LocalDateTime" property="createTime" jdbcType="TIMESTAMP" column="create_time" />
		<result javaType="java.time.LocalDateTime" property="updateTime" jdbcType="TIMESTAMP" column="update_time" />
	</resultMap>

	<!--
		通用查询结果列
		其他类似的类似，也可以公用（共用）引用。
	-->
	<sql id="Base_Column_List">
		<choose>
			<when test="strArr_field != null">
		<foreach collection="strArr_field" index="index" item="item" open="" separator="," close="">
			`${item}`
		</foreach>
			</when>
			<otherwise>
		`id` AS `id`, 
		`sender_id` AS `senderId`, 
		`receiver_id` AS `receiverId`, 
		`content` AS `content`, 
		`message_type` AS `messageType`, 
		`create_time` AS `createTime`, 
		`update_time` AS `updateTime`
			</otherwise>
		</choose>
	</sql>
	
	<!-- 其他的也可以类似的加， yes， 类似蕾丝的。 -->
	<sql id="sql_WHERE_forProperty">
		<choose>
			<when test="map_in != null">
			
		<foreach collection="map_in.entrySet()" index="map_index" item="map_item">
		AND `${map_index}` IN 
		<foreach collection="map_item" index="arr_index" item="arr_item" open="(" separator="," close=")">
			#{arr_item}
		</foreach>
		</foreach>
			
			</when>
			<!--
			<when test="_parameter != null and _parameter.TChatRecordLog != null and TChatRecordLog.map_in != null">
			</when>
			<otherwise>
			</otherwise>
			-->
		</choose>
	</sql>
	<sql id="sql_WHERE_forObject">
		<choose>
			<when test="tChatRecordLog.map_in != null">
			
		<foreach collection="tChatRecordLog.map_in.entrySet()" index="map_index" item="map_item">
		AND `${map_index}` IN 
		<foreach collection="map_item" index="arr_index" item="arr_item" open="(" separator="," close=")">
			#{arr_item}
		</foreach>
		</foreach>
			
			</when>
		</choose>
	</sql>
	
	
	<insert id="add" parameterType="com.bittrade.pojo.model.TChatRecordLog" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO t_chat_record_log(`sender_id`, `receiver_id`, `content`, `message_type`, `create_time`, `update_time`)
		VALUES(#{senderId,jdbcType=BIGINT}, #{receiverId,jdbcType=BIGINT}, #{content,jdbcType=CLOB}, #{messageType,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
	</insert>
	
	<insert id="addWithSelective" parameterType="com.bittrade.pojo.model.TChatRecordLog" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO t_chat_record_log(
			<if test="senderId != null">
			`sender_id`, 
			</if>
			<if test="receiverId != null">
			`receiver_id`, 
			</if>
			<if test="content != null">
			`content`, 
			</if>
			<if test="messageType != null">
			`message_type`, 
			</if>
			<if test="createTime != null">
			`create_time`, 
			</if>
			<if test="updateTime != null">
			`update_time`
			</if>
		)
		VALUES(
			<if test="senderId != null">
			#{senderId,jdbcType=BIGINT}, 
			</if>
			<if test="receiverId != null">
			#{receiverId,jdbcType=BIGINT}, 
			</if>
			<if test="content != null">
			#{content,jdbcType=CLOB}, 
			</if>
			<if test="messageType != null">
			#{messageType,jdbcType=INTEGER}, 
			</if>
			<if test="createTime != null">
			#{createTime,jdbcType=TIMESTAMP}, 
			</if>
			<if test="updateTime != null">
			#{updateTime,jdbcType=TIMESTAMP}
			</if>
		)
	</insert>
	
	<delete id="removeByPK">
		DELETE FROM t_chat_record_log
		<where>
			AND `id` = #{id,jdbcType=BIGINT}
		</where>
	</delete>
	
	<delete id="removeBy" parameterType="com.bittrade.pojo.model.TChatRecordLog">
		DELETE FROM t_chat_record_log
		<where>
			<if test="senderId != null">
			AND `sender_id` = #{senderId,jdbcType=BIGINT}
			</if>
			<if test="receiverId != null">
			AND `receiver_id` = #{receiverId,jdbcType=BIGINT}
			</if>
			<if test="content != null">
			AND `content` = #{content,jdbcType=CLOB}
			</if>
			<if test="messageType != null">
			AND `message_type` = #{messageType,jdbcType=INTEGER}
			</if>
			<if test="createTime != null">
			AND `create_time` = #{createTime,jdbcType=TIMESTAMP}
			</if>
			<if test="updateTime != null">
			AND `update_time` = #{updateTime,jdbcType=TIMESTAMP}
			</if>
		</where>
	</delete>
	
	<update id="modifyByPK" parameterType="com.bittrade.pojo.model.TChatRecordLog">
		UPDATE t_chat_record_log
		<set>
			`sender_id` = #{senderId,jdbcType=BIGINT}, 
			`receiver_id` = #{receiverId,jdbcType=BIGINT}, 
			`content` = #{content,jdbcType=CLOB}, 
			`message_type` = #{messageType,jdbcType=INTEGER}, 
			`create_time` = #{createTime,jdbcType=TIMESTAMP}, 
			`update_time` = #{updateTime,jdbcType=TIMESTAMP}, 
		</set>
		<where>
			AND `id` = #{id,jdbcType=BIGINT}
		</where>
	</update>
	
	<update id="modifyWithSelectiveByPK" parameterType="com.bittrade.pojo.model.TChatRecordLog">
		UPDATE t_chat_record_log
		<set>
			<if test="senderId != null">
			`sender_id` = #{senderId,jdbcType=BIGINT}, 
			</if>
			<if test="receiverId != null">
			`receiver_id` = #{receiverId,jdbcType=BIGINT}, 
			</if>
			<if test="content != null">
			`content` = #{content,jdbcType=CLOB}, 
			</if>
			<if test="messageType != null">
			`message_type` = #{messageType,jdbcType=INTEGER}, 
			</if>
			<if test="createTime != null">
			`create_time` = #{createTime,jdbcType=TIMESTAMP}, 
			</if>
			<if test="updateTime != null">
			`update_time` = #{updateTime,jdbcType=TIMESTAMP}, 
			</if>
		</set>
		<where>
			AND `id` = #{id,jdbcType=BIGINT}
		</where>
	</update>
	
	<update id="modifyBy">
		UPDATE t_chat_record_log
		<set>
			`sender_id` = #{tChatRecordLog.senderId,jdbcType=BIGINT}, 
			`receiver_id` = #{tChatRecordLog.receiverId,jdbcType=BIGINT}, 
			`content` = #{tChatRecordLog.content,jdbcType=CLOB}, 
			`message_type` = #{tChatRecordLog.messageType,jdbcType=INTEGER}, 
			`create_time` = #{tChatRecordLog.createTime,jdbcType=TIMESTAMP}, 
			`update_time` = #{tChatRecordLog.updateTime,jdbcType=TIMESTAMP}, 
		</set>
		<where>
		<if test="condiTChatRecordLog != null">
			<if test="condiTChatRecordLog.id != null">
			AND `id` = #{condiTChatRecordLog.id,jdbcType=BIGINT}
			</if>
			<if test="condiTChatRecordLog.senderId != null">
			AND `sender_id` = #{condiTChatRecordLog.senderId,jdbcType=BIGINT}
			</if>
			<if test="condiTChatRecordLog.receiverId != null">
			AND `receiver_id` = #{condiTChatRecordLog.receiverId,jdbcType=BIGINT}
			</if>
			<if test="condiTChatRecordLog.content != null">
			AND `content` = #{condiTChatRecordLog.content,jdbcType=CLOB}
			</if>
			<if test="condiTChatRecordLog.messageType != null">
			AND `message_type` = #{condiTChatRecordLog.messageType,jdbcType=INTEGER}
			</if>
			<if test="condiTChatRecordLog.createTime != null">
			AND `create_time` = #{condiTChatRecordLog.createTime,jdbcType=TIMESTAMP}
			</if>
			<if test="condiTChatRecordLog.updateTime != null">
			AND `update_time` = #{condiTChatRecordLog.updateTime,jdbcType=TIMESTAMP}
			</if>
		</if>
		</where>
	</update>
	
	<update id="modifyWithSelectiveBy">
		UPDATE t_chat_record_log
		<set>
		<if test="tChatRecordLog != null">
			<if test="tChatRecordLog.senderId != null">
			`sender_id` = #{tChatRecordLog.senderId,jdbcType=BIGINT}, 
			</if>
			<if test="tChatRecordLog.receiverId != null">
			`receiver_id` = #{tChatRecordLog.receiverId,jdbcType=BIGINT}, 
			</if>
			<if test="tChatRecordLog.content != null">
			`content` = #{tChatRecordLog.content,jdbcType=CLOB}, 
			</if>
			<if test="tChatRecordLog.messageType != null">
			`message_type` = #{tChatRecordLog.messageType,jdbcType=INTEGER}, 
			</if>
			<if test="tChatRecordLog.createTime != null">
			`create_time` = #{tChatRecordLog.createTime,jdbcType=TIMESTAMP}, 
			</if>
			<if test="tChatRecordLog.updateTime != null">
			`update_time` = #{tChatRecordLog.updateTime,jdbcType=TIMESTAMP}, 
			</if>
		</if>
		</set>
		<where>
		<if test="condiTChatRecordLog != null">
			<if test="condiTChatRecordLog.id != null">
			AND `id` = #{condiTChatRecordLog.id,jdbcType=BIGINT}
			</if>
			<if test="condiTChatRecordLog.senderId != null">
			AND `sender_id` = #{condiTChatRecordLog.senderId,jdbcType=BIGINT}
			</if>
			<if test="condiTChatRecordLog.receiverId != null">
			AND `receiver_id` = #{condiTChatRecordLog.receiverId,jdbcType=BIGINT}
			</if>
			<if test="condiTChatRecordLog.content != null">
			AND `content` = #{condiTChatRecordLog.content,jdbcType=CLOB}
			</if>
			<if test="condiTChatRecordLog.messageType != null">
			AND `message_type` = #{condiTChatRecordLog.messageType,jdbcType=INTEGER}
			</if>
			<if test="condiTChatRecordLog.createTime != null">
			AND `create_time` = #{condiTChatRecordLog.createTime,jdbcType=TIMESTAMP}
			</if>
			<if test="condiTChatRecordLog.updateTime != null">
			AND `update_time` = #{condiTChatRecordLog.updateTime,jdbcType=TIMESTAMP}
			</if>
		</if>
		</where>
	</update>
	
	<select id="getByPK" resultType="com.bittrade.pojo.model.TChatRecordLog">
		SELECT 
			`id`, 
			`sender_id`, 
			`receiver_id`, 
			`content`, 
			`message_type`, 
			`create_time`, 
			`update_time`
		FROM t_chat_record_log
		<where>
			AND `id` = #{id,jdbcType=BIGINT}
		</where>
	</select>
	
	<select id="getBy" resultType="com.bittrade.pojo.model.TChatRecordLog">
		SELECT 
			`id`, 
			`sender_id`, 
			`receiver_id`, 
			`content`, 
			`message_type`, 
			`create_time`, 
			`update_time`
		FROM t_chat_record_log
		<where>
			<if test="senderId != null">
			AND `sender_id` = #{senderId,jdbcType=BIGINT}
			</if>
			<if test="receiverId != null">
			AND `receiver_id` = #{receiverId,jdbcType=BIGINT}
			</if>
			<if test="content != null">
			AND `content` = #{content,jdbcType=CLOB}
			</if>
			<if test="messageType != null">
			AND `message_type` = #{messageType,jdbcType=INTEGER}
			</if>
			<if test="createTime != null">
			AND `create_time` = #{createTime,jdbcType=TIMESTAMP}
			</if>
			<if test="updateTime != null">
			AND `update_time` = #{updateTime,jdbcType=TIMESTAMP}
			</if>
		</where>
		LIMIT 1
	</select>
	
	<select id="get" resultType="com.bittrade.pojo.model.TChatRecordLog">
		SELECT 
			`id`, 
			`sender_id`, 
			`receiver_id`, 
			`content`, 
			`message_type`, 
			`create_time`, 
			`update_time`
		FROM t_chat_record_log
		LIMIT 1
	</select>
	
	<select id="getsBy" resultType="com.bittrade.pojo.model.TChatRecordLog">
		SELECT 
			<include refid="Base_Column_List"></include>
		FROM t_chat_record_log
		<where>
			<if test="senderId != null">
			AND `sender_id` = #{senderId,jdbcType=BIGINT}
			</if>
			<if test="receiverId != null">
			AND `receiver_id` = #{receiverId,jdbcType=BIGINT}
			</if>
			<if test="content != null">
			AND `content` = #{content,jdbcType=CLOB}
			</if>
			<if test="messageType != null">
			AND `message_type` = #{messageType,jdbcType=INTEGER}
			</if>
			<if test="createTime != null">
			AND `create_time` = #{createTime,jdbcType=TIMESTAMP}
			</if>
			<if test="updateTime != null">
			AND `update_time` = #{updateTime,jdbcType=TIMESTAMP}
			</if>
			<include refid="sql_WHERE_forProperty"></include>
		</where>
	</select>
	
	<select id="gets" resultType="com.bittrade.pojo.model.TChatRecordLog">
		SELECT 
			<include refid="Base_Column_List"></include>
		FROM t_chat_record_log
	</select>
	
	<select id="getCntBy" resultType="int">
		SELECT COUNT(1)
		FROM t_chat_record_log
		<where>
		<if test="tChatRecordLog != null">
			<if test="tChatRecordLog.senderId != null">
			AND `sender_id` = #{tChatRecordLog.senderId,jdbcType=BIGINT}
			</if>
			<if test="tChatRecordLog.receiverId != null">
			AND `receiver_id` = #{tChatRecordLog.receiverId,jdbcType=BIGINT}
			</if>
			<if test="tChatRecordLog.content != null">
			AND `content` = #{tChatRecordLog.content,jdbcType=CLOB}
			</if>
			<if test="tChatRecordLog.messageType != null">
			AND `message_type` = #{tChatRecordLog.messageType,jdbcType=INTEGER}
			</if>
			<if test="tChatRecordLog.createTime != null">
			AND `create_time` = #{tChatRecordLog.createTime,jdbcType=TIMESTAMP}
			</if>
			<if test="tChatRecordLog.updateTime != null">
			AND `update_time` = #{tChatRecordLog.updateTime,jdbcType=TIMESTAMP}
			</if>
			<include refid="sql_WHERE_forObject"></include>
		</if>
		</where>
	</select>
	
	<select id="getsByPage" resultType="com.bittrade.pojo.model.TChatRecordLog">
		SELECT 
			`id`, 
			`sender_id`, 
			`receiver_id`, 
			`content`, 
			`message_type`, 
			`create_time`, 
			`update_time`
		FROM t_chat_record_log
		<where>
		<if test="tChatRecordLog != null">
			<if test="tChatRecordLog.senderId != null">
			AND `sender_id` = #{tChatRecordLog.senderId,jdbcType=BIGINT}
			</if>
			<if test="tChatRecordLog.receiverId != null">
			AND `receiver_id` = #{tChatRecordLog.receiverId,jdbcType=BIGINT}
			</if>
			<if test="tChatRecordLog.content != null">
			AND `content` = #{tChatRecordLog.content,jdbcType=CLOB}
			</if>
			<if test="tChatRecordLog.messageType != null">
			AND `message_type` = #{tChatRecordLog.messageType,jdbcType=INTEGER}
			</if>
			<if test="tChatRecordLog.createTime != null">
			AND `create_time` = #{tChatRecordLog.createTime,jdbcType=TIMESTAMP}
			</if>
			<if test="tChatRecordLog.updateTime != null">
			AND `update_time` = #{tChatRecordLog.updateTime,jdbcType=TIMESTAMP}
			</if>
			<include refid="sql_WHERE_forObject"></include>
		</if>
		</where>
		LIMIT #{page}, #{size}
	</select>
	
	<select id="getDTOBy" resultType="com.bittrade.pojo.dto.TChatRecordLogDTO">
		SELECT 
			`id`, 
			`sender_id`, 
			`receiver_id`, 
			`content`, 
			`message_type`, 
			`create_time`, 
			`update_time`
		FROM t_chat_record_log
		<where>
			<if test="senderId != null">
			AND `sender_id` = #{senderId,jdbcType=BIGINT}
			</if>
			<if test="receiverId != null">
			AND `receiver_id` = #{receiverId,jdbcType=BIGINT}
			</if>
			<if test="content != null">
			AND `content` = #{content,jdbcType=CLOB}
			</if>
			<if test="messageType != null">
			AND `message_type` = #{messageType,jdbcType=INTEGER}
			</if>
			<if test="createTime != null">
			AND `create_time` = #{createTime,jdbcType=TIMESTAMP}
			</if>
			<if test="updateTime != null">
			AND `update_time` = #{updateTime,jdbcType=TIMESTAMP}
			</if>
		</where>
		LIMIT 1
	</select>
	
	<select id="getsDTOBy" resultType="com.bittrade.pojo.dto.TChatRecordLogDTO">
		SELECT 
			<include refid="Base_Column_List"></include>
		FROM t_chat_record_log
		<where>
			<if test="senderId != null">
			AND `sender_id` = #{senderId,jdbcType=BIGINT}
			</if>
			<if test="receiverId != null">
			AND `receiver_id` = #{receiverId,jdbcType=BIGINT}
			</if>
			<if test="content != null">
			AND `content` = #{content,jdbcType=CLOB}
			</if>
			<if test="messageType != null">
			AND `message_type` = #{messageType,jdbcType=INTEGER}
			</if>
			<if test="createTime != null">
			AND `create_time` = #{createTime,jdbcType=TIMESTAMP}
			</if>
			<if test="updateTime != null">
			AND `update_time` = #{updateTime,jdbcType=TIMESTAMP}
			</if>
			<include refid="sql_WHERE_forProperty"></include>
		</where>
	</select>

</mapper>