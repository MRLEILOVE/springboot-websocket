<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
	This code is generated automatically. Please do not edit it.
	现在字段也可以要彻底动态？
-->
<mapper namespace="com.bittrade.__default.DAO.IDefaultTWalletRecordDAO">

	<!-- 通用查询映射结果 -->
	<resultMap id="BaseResultMap" type="com.bittrade.pojo.model.TWalletRecord">
		<id javaType="Long" property="id" jdbcType="BIGINT" column="id" />
		<result javaType="Long" property="userId" jdbcType="BIGINT" column="user_id" />
		<result javaType="Integer" property="currencyId" jdbcType="INTEGER" column="currency_id" />
		<result javaType="java.math.BigDecimal" property="beforeAmount" jdbcType="DECIMAL" column="before_amount" />
		<result javaType="java.math.BigDecimal" property="afterAmount" jdbcType="DECIMAL" column="after_amount" />
		<result javaType="java.math.BigDecimal" property="changeAmount" jdbcType="DECIMAL" column="change_amount" />
		<result javaType="Byte" property="type" jdbcType="INTEGER" column="type" />
		<result javaType="Long" property="entrustRecordId" jdbcType="BIGINT" column="entrust_record_id" />
		<result javaType="java.util.Date" property="createTime" jdbcType="TIMESTAMP" column="create_time" />
	</resultMap>

	<!-- 通用查询结果列 -->
	<sql id="Base_Column_List">
		`id` AS id, 
		`user_id` AS userId, 
		`currency_id` AS currencyId, 
		`before_amount` AS beforeAmount, 
		`after_amount` AS afterAmount, 
		`change_amount` AS changeAmount, 
		`type` AS type, 
		`entrust_record_id` AS entrustRecordId, 
		`create_time` AS createTime
	</sql>
	
	<!-- 其他的也可以类似的加， yes， 类似蕾丝的。 -->
	<sql id="sql_WHERE">
		<if test="tWalletRecord.map_in != null">
		<foreach collection="tWalletRecord.map_in.entrySet()" index="map_index" item="map_item">
		AND `${map_index}` IN 
		<foreach collection="map_item" index="arr_index" item="arr_item" open="(" separator="," close=")">
			#{arr_item}
		</foreach>
		</foreach>
		</if>
	</sql>
	
	
	<insert id="add" parameterType="com.bittrade.pojo.model.TWalletRecord">
		INSERT INTO t_wallet_record(`user_id`, `currency_id`, `before_amount`, `after_amount`, `change_amount`, `type`, `entrust_record_id`, `create_time`)
		VALUES(#{userId,jdbcType=BIGINT}, #{currencyId,jdbcType=INTEGER}, #{beforeAmount,jdbcType=DECIMAL}, #{afterAmount,jdbcType=DECIMAL}, #{changeAmount,jdbcType=DECIMAL}, #{type,jdbcType=INTEGER}, #{entrustRecordId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP})
	</insert>
	
	<insert id="addWithSelective" parameterType="com.bittrade.pojo.model.TWalletRecord">
		INSERT INTO t_wallet_record(
			<if test="userId != null">
			`user_id`, 
			</if>
			<if test="currencyId != null">
			`currency_id`, 
			</if>
			<if test="beforeAmount != null">
			`before_amount`, 
			</if>
			<if test="afterAmount != null">
			`after_amount`, 
			</if>
			<if test="changeAmount != null">
			`change_amount`, 
			</if>
			<if test="type != null">
			`type`, 
			</if>
			<if test="entrustRecordId != null">
			`entrust_record_id`, 
			</if>
			<if test="createTime != null">
			`create_time`
			</if>
		)
		VALUES(
			<if test="userId != null">
			#{userId,jdbcType=BIGINT}, 
			</if>
			<if test="currencyId != null">
			#{currencyId,jdbcType=INTEGER}, 
			</if>
			<if test="beforeAmount != null">
			#{beforeAmount,jdbcType=DECIMAL}, 
			</if>
			<if test="afterAmount != null">
			#{afterAmount,jdbcType=DECIMAL}, 
			</if>
			<if test="changeAmount != null">
			#{changeAmount,jdbcType=DECIMAL}, 
			</if>
			<if test="type != null">
			#{type,jdbcType=INTEGER}, 
			</if>
			<if test="entrustRecordId != null">
			#{entrustRecordId,jdbcType=BIGINT}, 
			</if>
			<if test="createTime != null">
			#{createTime,jdbcType=TIMESTAMP}
			</if>
		)
	</insert>
	
	<delete id="removeByPK">
		DELETE FROM t_wallet_record
		<where>
			AND `id` = #{id,jdbcType=BIGINT}
		</where>
	</delete>
	
	<delete id="removeBy" parameterType="com.bittrade.pojo.model.TWalletRecord">
		DELETE FROM t_wallet_record
		<where>
			<if test="userId != null">
			AND `user_id` = #{userId,jdbcType=BIGINT}
			</if>
			<if test="currencyId != null">
			AND `currency_id` = #{currencyId,jdbcType=INTEGER}
			</if>
			<if test="beforeAmount != null">
			AND `before_amount` = #{beforeAmount,jdbcType=DECIMAL}
			</if>
			<if test="afterAmount != null">
			AND `after_amount` = #{afterAmount,jdbcType=DECIMAL}
			</if>
			<if test="changeAmount != null">
			AND `change_amount` = #{changeAmount,jdbcType=DECIMAL}
			</if>
			<if test="type != null">
			AND `type` = #{type,jdbcType=INTEGER}
			</if>
			<if test="entrustRecordId != null">
			AND `entrust_record_id` = #{entrustRecordId,jdbcType=BIGINT}
			</if>
			<if test="createTime != null">
			AND `create_time` = #{createTime,jdbcType=TIMESTAMP}
			</if>
		</where>
	</delete>
	
	<update id="modifyByPK" parameterType="com.bittrade.pojo.model.TWalletRecord">
		UPDATE t_wallet_record
		<set>
			`user_id` = #{userId,jdbcType=BIGINT}, 
			`currency_id` = #{currencyId,jdbcType=INTEGER}, 
			`before_amount` = #{beforeAmount,jdbcType=DECIMAL}, 
			`after_amount` = #{afterAmount,jdbcType=DECIMAL}, 
			`change_amount` = #{changeAmount,jdbcType=DECIMAL}, 
			`type` = #{type,jdbcType=INTEGER}, 
			`entrust_record_id` = #{entrustRecordId,jdbcType=BIGINT}, 
			`create_time` = #{createTime,jdbcType=TIMESTAMP}, 
		</set>
		<where>
			AND `id` = #{id,jdbcType=BIGINT}
		</where>
	</update>
	
	<update id="modifyWithSelectiveByPK" parameterType="com.bittrade.pojo.model.TWalletRecord">
		UPDATE t_wallet_record
		<set>
			<if test="userId != null">
			`user_id` = #{userId,jdbcType=BIGINT}, 
			</if>
			<if test="currencyId != null">
			`currency_id` = #{currencyId,jdbcType=INTEGER}, 
			</if>
			<if test="beforeAmount != null">
			`before_amount` = #{beforeAmount,jdbcType=DECIMAL}, 
			</if>
			<if test="afterAmount != null">
			`after_amount` = #{afterAmount,jdbcType=DECIMAL}, 
			</if>
			<if test="changeAmount != null">
			`change_amount` = #{changeAmount,jdbcType=DECIMAL}, 
			</if>
			<if test="type != null">
			`type` = #{type,jdbcType=INTEGER}, 
			</if>
			<if test="entrustRecordId != null">
			`entrust_record_id` = #{entrustRecordId,jdbcType=BIGINT}, 
			</if>
			<if test="createTime != null">
			`create_time` = #{createTime,jdbcType=TIMESTAMP}, 
			</if>
		</set>
		<where>
			AND `id` = #{id,jdbcType=BIGINT}
		</where>
	</update>
	
	<update id="modifyBy">
		UPDATE t_wallet_record
		<set>
			`user_id` = #{tWalletRecord.userId,jdbcType=BIGINT}, 
			`currency_id` = #{tWalletRecord.currencyId,jdbcType=INTEGER}, 
			`before_amount` = #{tWalletRecord.beforeAmount,jdbcType=DECIMAL}, 
			`after_amount` = #{tWalletRecord.afterAmount,jdbcType=DECIMAL}, 
			`change_amount` = #{tWalletRecord.changeAmount,jdbcType=DECIMAL}, 
			`type` = #{tWalletRecord.type,jdbcType=INTEGER}, 
			`entrust_record_id` = #{tWalletRecord.entrustRecordId,jdbcType=BIGINT}, 
			`create_time` = #{tWalletRecord.createTime,jdbcType=TIMESTAMP}, 
		</set>
		<where>
		<if test="condiTWalletRecord != null">
			<if test="condiTWalletRecord.id != null">
			AND `id` = #{condiTWalletRecord.id,jdbcType=BIGINT}
			</if>
			<if test="condiTWalletRecord.userId != null">
			AND `user_id` = #{condiTWalletRecord.userId,jdbcType=BIGINT}
			</if>
			<if test="condiTWalletRecord.currencyId != null">
			AND `currency_id` = #{condiTWalletRecord.currencyId,jdbcType=INTEGER}
			</if>
			<if test="condiTWalletRecord.beforeAmount != null">
			AND `before_amount` = #{condiTWalletRecord.beforeAmount,jdbcType=DECIMAL}
			</if>
			<if test="condiTWalletRecord.afterAmount != null">
			AND `after_amount` = #{condiTWalletRecord.afterAmount,jdbcType=DECIMAL}
			</if>
			<if test="condiTWalletRecord.changeAmount != null">
			AND `change_amount` = #{condiTWalletRecord.changeAmount,jdbcType=DECIMAL}
			</if>
			<if test="condiTWalletRecord.type != null">
			AND `type` = #{condiTWalletRecord.type,jdbcType=INTEGER}
			</if>
			<if test="condiTWalletRecord.entrustRecordId != null">
			AND `entrust_record_id` = #{condiTWalletRecord.entrustRecordId,jdbcType=BIGINT}
			</if>
			<if test="condiTWalletRecord.createTime != null">
			AND `create_time` = #{condiTWalletRecord.createTime,jdbcType=TIMESTAMP}
			</if>
		</if>
		</where>
	</update>
	
	<update id="modifyWithSelectiveBy">
		UPDATE t_wallet_record
		<set>
		<if test="tWalletRecord != null">
			<if test="tWalletRecord.userId != null">
			`user_id` = #{tWalletRecord.userId,jdbcType=BIGINT}, 
			</if>
			<if test="tWalletRecord.currencyId != null">
			`currency_id` = #{tWalletRecord.currencyId,jdbcType=INTEGER}, 
			</if>
			<if test="tWalletRecord.beforeAmount != null">
			`before_amount` = #{tWalletRecord.beforeAmount,jdbcType=DECIMAL}, 
			</if>
			<if test="tWalletRecord.afterAmount != null">
			`after_amount` = #{tWalletRecord.afterAmount,jdbcType=DECIMAL}, 
			</if>
			<if test="tWalletRecord.changeAmount != null">
			`change_amount` = #{tWalletRecord.changeAmount,jdbcType=DECIMAL}, 
			</if>
			<if test="tWalletRecord.type != null">
			`type` = #{tWalletRecord.type,jdbcType=INTEGER}, 
			</if>
			<if test="tWalletRecord.entrustRecordId != null">
			`entrust_record_id` = #{tWalletRecord.entrustRecordId,jdbcType=BIGINT}, 
			</if>
			<if test="tWalletRecord.createTime != null">
			`create_time` = #{tWalletRecord.createTime,jdbcType=TIMESTAMP}, 
			</if>
		</if>
		</set>
		<where>
		<if test="condiTWalletRecord != null">
			<if test="condiTWalletRecord.id != null">
			AND `id` = #{condiTWalletRecord.id,jdbcType=BIGINT}
			</if>
			<if test="condiTWalletRecord.userId != null">
			AND `user_id` = #{condiTWalletRecord.userId,jdbcType=BIGINT}
			</if>
			<if test="condiTWalletRecord.currencyId != null">
			AND `currency_id` = #{condiTWalletRecord.currencyId,jdbcType=INTEGER}
			</if>
			<if test="condiTWalletRecord.beforeAmount != null">
			AND `before_amount` = #{condiTWalletRecord.beforeAmount,jdbcType=DECIMAL}
			</if>
			<if test="condiTWalletRecord.afterAmount != null">
			AND `after_amount` = #{condiTWalletRecord.afterAmount,jdbcType=DECIMAL}
			</if>
			<if test="condiTWalletRecord.changeAmount != null">
			AND `change_amount` = #{condiTWalletRecord.changeAmount,jdbcType=DECIMAL}
			</if>
			<if test="condiTWalletRecord.type != null">
			AND `type` = #{condiTWalletRecord.type,jdbcType=INTEGER}
			</if>
			<if test="condiTWalletRecord.entrustRecordId != null">
			AND `entrust_record_id` = #{condiTWalletRecord.entrustRecordId,jdbcType=BIGINT}
			</if>
			<if test="condiTWalletRecord.createTime != null">
			AND `create_time` = #{condiTWalletRecord.createTime,jdbcType=TIMESTAMP}
			</if>
		</if>
		</where>
	</update>
	
	<select id="getByPK" resultType="com.bittrade.pojo.model.TWalletRecord">
		SELECT 
			`id`, 
			`user_id`, 
			`currency_id`, 
			`before_amount`, 
			`after_amount`, 
			`change_amount`, 
			`type`, 
			`entrust_record_id`, 
			`create_time`
		FROM t_wallet_record
		<where>
			AND `id` = #{id,jdbcType=BIGINT}
		</where>
	</select>
	
	<select id="getBy" resultType="com.bittrade.pojo.model.TWalletRecord">
		SELECT 
			`id`, 
			`user_id`, 
			`currency_id`, 
			`before_amount`, 
			`after_amount`, 
			`change_amount`, 
			`type`, 
			`entrust_record_id`, 
			`create_time`
		FROM t_wallet_record
		<where>
			<if test="userId != null">
			AND `user_id` = #{userId,jdbcType=BIGINT}
			</if>
			<if test="currencyId != null">
			AND `currency_id` = #{currencyId,jdbcType=INTEGER}
			</if>
			<if test="beforeAmount != null">
			AND `before_amount` = #{beforeAmount,jdbcType=DECIMAL}
			</if>
			<if test="afterAmount != null">
			AND `after_amount` = #{afterAmount,jdbcType=DECIMAL}
			</if>
			<if test="changeAmount != null">
			AND `change_amount` = #{changeAmount,jdbcType=DECIMAL}
			</if>
			<if test="type != null">
			AND `type` = #{type,jdbcType=INTEGER}
			</if>
			<if test="entrustRecordId != null">
			AND `entrust_record_id` = #{entrustRecordId,jdbcType=BIGINT}
			</if>
			<if test="createTime != null">
			AND `create_time` = #{createTime,jdbcType=TIMESTAMP}
			</if>
		</where>
		LIMIT 1
	</select>
	
	<select id="get" resultType="com.bittrade.pojo.model.TWalletRecord">
		SELECT 
			`id`, 
			`user_id`, 
			`currency_id`, 
			`before_amount`, 
			`after_amount`, 
			`change_amount`, 
			`type`, 
			`entrust_record_id`, 
			`create_time`
		FROM t_wallet_record
		LIMIT 1
	</select>
	
	<select id="getsBy" resultType="com.bittrade.pojo.model.TWalletRecord">
		SELECT 
			`id`, 
			`user_id`, 
			`currency_id`, 
			`before_amount`, 
			`after_amount`, 
			`change_amount`, 
			`type`, 
			`entrust_record_id`, 
			`create_time`
		FROM t_wallet_record
		<where>
			<if test="userId != null">
			AND `user_id` = #{userId,jdbcType=BIGINT}
			</if>
			<if test="currencyId != null">
			AND `currency_id` = #{currencyId,jdbcType=INTEGER}
			</if>
			<if test="beforeAmount != null">
			AND `before_amount` = #{beforeAmount,jdbcType=DECIMAL}
			</if>
			<if test="afterAmount != null">
			AND `after_amount` = #{afterAmount,jdbcType=DECIMAL}
			</if>
			<if test="changeAmount != null">
			AND `change_amount` = #{changeAmount,jdbcType=DECIMAL}
			</if>
			<if test="type != null">
			AND `type` = #{type,jdbcType=INTEGER}
			</if>
			<if test="entrustRecordId != null">
			AND `entrust_record_id` = #{entrustRecordId,jdbcType=BIGINT}
			</if>
			<if test="createTime != null">
			AND `create_time` = #{createTime,jdbcType=TIMESTAMP}
			</if>
		</where>
	</select>
	
	<select id="gets" resultType="com.bittrade.pojo.model.TWalletRecord">
		SELECT 
			`id`, 
			`user_id`, 
			`currency_id`, 
			`before_amount`, 
			`after_amount`, 
			`change_amount`, 
			`type`, 
			`entrust_record_id`, 
			`create_time`
		FROM t_wallet_record
	</select>
	
	<select id="getCntBy" resultType="int">
		SELECT COUNT(1)
		FROM t_wallet_record
		<where>
		<if test="tWalletRecord != null">
			<if test="tWalletRecord.userId != null">
			AND `user_id` = #{tWalletRecord.userId,jdbcType=BIGINT}
			</if>
			<if test="tWalletRecord.currencyId != null">
			AND `currency_id` = #{tWalletRecord.currencyId,jdbcType=INTEGER}
			</if>
			<if test="tWalletRecord.beforeAmount != null">
			AND `before_amount` = #{tWalletRecord.beforeAmount,jdbcType=DECIMAL}
			</if>
			<if test="tWalletRecord.afterAmount != null">
			AND `after_amount` = #{tWalletRecord.afterAmount,jdbcType=DECIMAL}
			</if>
			<if test="tWalletRecord.changeAmount != null">
			AND `change_amount` = #{tWalletRecord.changeAmount,jdbcType=DECIMAL}
			</if>
			<if test="tWalletRecord.type != null">
			AND `type` = #{tWalletRecord.type,jdbcType=INTEGER}
			</if>
			<if test="tWalletRecord.entrustRecordId != null">
			AND `entrust_record_id` = #{tWalletRecord.entrustRecordId,jdbcType=BIGINT}
			</if>
			<if test="tWalletRecord.createTime != null">
			AND `create_time` = #{tWalletRecord.createTime,jdbcType=TIMESTAMP}
			</if>
			<include refid="sql_WHERE"></include>
		</if>
		</where>
	</select>
	
	<select id="getsByPage" resultType="com.bittrade.pojo.model.TWalletRecord">
		SELECT 
			`id`, 
			`user_id`, 
			`currency_id`, 
			`before_amount`, 
			`after_amount`, 
			`change_amount`, 
			`type`, 
			`entrust_record_id`, 
			`create_time`
		FROM t_wallet_record
		<where>
		<if test="tWalletRecord != null">
			<if test="tWalletRecord.userId != null">
			AND `user_id` = #{tWalletRecord.userId,jdbcType=BIGINT}
			</if>
			<if test="tWalletRecord.currencyId != null">
			AND `currency_id` = #{tWalletRecord.currencyId,jdbcType=INTEGER}
			</if>
			<if test="tWalletRecord.beforeAmount != null">
			AND `before_amount` = #{tWalletRecord.beforeAmount,jdbcType=DECIMAL}
			</if>
			<if test="tWalletRecord.afterAmount != null">
			AND `after_amount` = #{tWalletRecord.afterAmount,jdbcType=DECIMAL}
			</if>
			<if test="tWalletRecord.changeAmount != null">
			AND `change_amount` = #{tWalletRecord.changeAmount,jdbcType=DECIMAL}
			</if>
			<if test="tWalletRecord.type != null">
			AND `type` = #{tWalletRecord.type,jdbcType=INTEGER}
			</if>
			<if test="tWalletRecord.entrustRecordId != null">
			AND `entrust_record_id` = #{tWalletRecord.entrustRecordId,jdbcType=BIGINT}
			</if>
			<if test="tWalletRecord.createTime != null">
			AND `create_time` = #{tWalletRecord.createTime,jdbcType=TIMESTAMP}
			</if>
			<include refid="sql_WHERE"></include>
		</if>
		</where>
		LIMIT #{page}, #{size}
	</select>

</mapper>