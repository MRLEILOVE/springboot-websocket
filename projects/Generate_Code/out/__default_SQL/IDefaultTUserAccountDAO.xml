<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
	This code is generated automatically. Please do not edit it.
	现在字段也可以要彻底动态？
-->
<mapper namespace="com.bittrade.__default.DAO.IDefaultTUserAccountDAO">

	<!-- 通用查询映射结果 -->
	<resultMap id="BaseResultMap" type="com.bittrade.pojo.model.TUserAccount">
		<id javaType="Long" property="id" jdbcType="BIGINT" column="id" />
		<result javaType="Long" property="userId" jdbcType="BIGINT" column="user_id" />
		<result javaType="String" property="loginName" jdbcType="VARCHAR" column="login_name" />
		<result javaType="String" property="realName" jdbcType="VARCHAR" column="real_name" />
		<result javaType="Byte" property="fhasRealValidate" jdbcType="INTEGER" column="fhas_real_Validate" />
		<result javaType="java.math.BigDecimal" property="balance" jdbcType="DECIMAL" column="balance" />
		<result javaType="java.math.BigDecimal" property="balanceToken" jdbcType="DECIMAL" column="balance_token" />
		<result javaType="java.math.BigDecimal" property="frozenAmount" jdbcType="DECIMAL" column="frozen_amount" />
		<result javaType="java.math.BigDecimal" property="totalDeposits" jdbcType="DECIMAL" column="total_deposits" />
		<result javaType="java.math.BigDecimal" property="totalRechargeToken" jdbcType="DECIMAL" column="total_recharge_token" />
		<result javaType="java.math.BigDecimal" property="totalWithdrawals" jdbcType="DECIMAL" column="total_withdrawals" />
		<result javaType="java.math.BigDecimal" property="usedMargin" jdbcType="DECIMAL" column="used_margin" />
		<result javaType="java.math.BigDecimal" property="usedToken" jdbcType="DECIMAL" column="used_token" />
		<result javaType="Integer" property="tokenNumber" jdbcType="INTEGER" column="token_number" />
		<result javaType="Byte" property="internalAccount" jdbcType="INTEGER" column="internal_account" />
		<result javaType="Integer" property="version" jdbcType="INTEGER" column="version" />
		<result javaType="java.time.LocalDateTime" property="createTime" jdbcType="TIMESTAMP" column="create_time" />
		<result javaType="java.time.LocalDateTime" property="updateTime" jdbcType="TIMESTAMP" column="update_time" />
	</resultMap>

	<!--
		通用查询结果列
		其他类似的类似，也可以公用（共用）引用。
	-->
	<sql id="Base_Column_List">
		`id` AS `id`, 
		`user_id` AS `userId`, 
		`login_name` AS `loginName`, 
		`real_name` AS `realName`, 
		`fhas_real_Validate` AS `fhasRealValidate`, 
		`balance` AS `balance`, 
		`balance_token` AS `balanceToken`, 
		`frozen_amount` AS `frozenAmount`, 
		`total_deposits` AS `totalDeposits`, 
		`total_recharge_token` AS `totalRechargeToken`, 
		`total_withdrawals` AS `totalWithdrawals`, 
		`used_margin` AS `usedMargin`, 
		`used_token` AS `usedToken`, 
		`token_number` AS `tokenNumber`, 
		`internal_account` AS `internalAccount`, 
		`version` AS `version`, 
		`create_time` AS `createTime`, 
		`update_time` AS `updateTime`
	</sql>
	
	<!-- 其他的也可以类似的加， yes， 类似蕾丝的。 -->
	<sql id="sql_Column_forObject">
		<choose>
			<when test="tUserAccount != null and tUserAccount.strArr_field != null">
		<foreach collection="tUserAccount.strArr_field" index="index" item="item" open="" separator="," close="">
			`${item}`
		</foreach>
			</when>
			<otherwise>
		<include refid="Base_Column_List"></include>
			</otherwise>
		</choose>
	</sql>
	
	<!-- 其他的也可以类似的加， yes， 类似蕾丝的。 -->
	<sql id="sql_WHERE_forProperty">
		<choose>
			<when test="map_in != null">
			
		<foreach collection="map_in.entrySet()" index="map_index" item="map_item">
		AND `${map_index}` IN 
		<foreach collection="map_item" index="arr_index" item="arr_item" open="(" separator="," close=")">
			#{arr_item}
		</foreach>
		</foreach>
			
			</when>
			<!--
			<when test="_parameter != null and _parameter.TUserAccount != null and TUserAccount.map_in != null">
			</when>
			<otherwise>
			</otherwise>
			-->
		</choose>
	</sql>
	<sql id="sql_WHERE_forObject">
		<if test="tUserAccount != null and tUserAccount.map_in != null">
		<foreach collection="tUserAccount.map_in.entrySet()" index="map_index" item="map_item">
		AND `${map_index}` IN 
		<foreach collection="map_item" index="arr_index" item="arr_item" open="(" separator="," close=")">
			#{arr_item}
		</foreach>
		</foreach>
		</if>
		<if test="tUserAccount != null and tUserAccount.map_eq != null">
		<foreach collection="tUserAccount.map_eq.entrySet()" index="map_index" item="map_item">
		AND `${map_index}` = #{map_item}
		</foreach>
		</if>
		<if test="tUserAccount != null and tUserAccount.map_le != null">
		<foreach collection="tUserAccount.map_le.entrySet()" index="map_index" item="map_item">
		AND `${map_index}` &lt;= #{map_item}
		</foreach>
		</if>
		<if test="tUserAccount != null and tUserAccount.map_ge != null">
		<foreach collection="tUserAccount.map_ge.entrySet()" index="map_index" item="map_item">
		AND `${map_index}` &gt;= #{map_item}
		</foreach>
		</if>
	</sql>
	
	
	<insert id="add" parameterType="com.bittrade.pojo.model.TUserAccount" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO t_user_account(`user_id`, `login_name`, `real_name`, `fhas_real_Validate`, `balance`, `balance_token`, `frozen_amount`, `total_deposits`, `total_recharge_token`, `total_withdrawals`, `used_margin`, `used_token`, `token_number`, `internal_account`, `version`, `create_time`, `update_time`)
		VALUES(#{userId,jdbcType=BIGINT}, #{loginName,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, #{fhasRealValidate,jdbcType=INTEGER}, #{balance,jdbcType=DECIMAL}, #{balanceToken,jdbcType=DECIMAL}, #{frozenAmount,jdbcType=DECIMAL}, #{totalDeposits,jdbcType=DECIMAL}, #{totalRechargeToken,jdbcType=DECIMAL}, #{totalWithdrawals,jdbcType=DECIMAL}, #{usedMargin,jdbcType=DECIMAL}, #{usedToken,jdbcType=DECIMAL}, #{tokenNumber,jdbcType=INTEGER}, #{internalAccount,jdbcType=INTEGER}, #{version,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
	</insert>
	
	<insert id="addWithSelective" parameterType="com.bittrade.pojo.model.TUserAccount" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO t_user_account(
			<if test="userId != null">
			`user_id`, 
			</if>
			<if test="loginName != null">
			`login_name`, 
			</if>
			<if test="realName != null">
			`real_name`, 
			</if>
			<if test="fhasRealValidate != null">
			`fhas_real_Validate`, 
			</if>
			<if test="balance != null">
			`balance`, 
			</if>
			<if test="balanceToken != null">
			`balance_token`, 
			</if>
			<if test="frozenAmount != null">
			`frozen_amount`, 
			</if>
			<if test="totalDeposits != null">
			`total_deposits`, 
			</if>
			<if test="totalRechargeToken != null">
			`total_recharge_token`, 
			</if>
			<if test="totalWithdrawals != null">
			`total_withdrawals`, 
			</if>
			<if test="usedMargin != null">
			`used_margin`, 
			</if>
			<if test="usedToken != null">
			`used_token`, 
			</if>
			<if test="tokenNumber != null">
			`token_number`, 
			</if>
			<if test="internalAccount != null">
			`internal_account`, 
			</if>
			<if test="version != null">
			`version`, 
			</if>
			<if test="createTime != null">
			`create_time`, 
			</if>
			<if test="updateTime != null">
			`update_time`
			</if>
		)
		VALUES(
			<if test="userId != null">
			#{userId,jdbcType=BIGINT}, 
			</if>
			<if test="loginName != null">
			#{loginName,jdbcType=VARCHAR}, 
			</if>
			<if test="realName != null">
			#{realName,jdbcType=VARCHAR}, 
			</if>
			<if test="fhasRealValidate != null">
			#{fhasRealValidate,jdbcType=INTEGER}, 
			</if>
			<if test="balance != null">
			#{balance,jdbcType=DECIMAL}, 
			</if>
			<if test="balanceToken != null">
			#{balanceToken,jdbcType=DECIMAL}, 
			</if>
			<if test="frozenAmount != null">
			#{frozenAmount,jdbcType=DECIMAL}, 
			</if>
			<if test="totalDeposits != null">
			#{totalDeposits,jdbcType=DECIMAL}, 
			</if>
			<if test="totalRechargeToken != null">
			#{totalRechargeToken,jdbcType=DECIMAL}, 
			</if>
			<if test="totalWithdrawals != null">
			#{totalWithdrawals,jdbcType=DECIMAL}, 
			</if>
			<if test="usedMargin != null">
			#{usedMargin,jdbcType=DECIMAL}, 
			</if>
			<if test="usedToken != null">
			#{usedToken,jdbcType=DECIMAL}, 
			</if>
			<if test="tokenNumber != null">
			#{tokenNumber,jdbcType=INTEGER}, 
			</if>
			<if test="internalAccount != null">
			#{internalAccount,jdbcType=INTEGER}, 
			</if>
			<if test="version != null">
			#{version,jdbcType=INTEGER}, 
			</if>
			<if test="createTime != null">
			#{createTime,jdbcType=TIMESTAMP}, 
			</if>
			<if test="updateTime != null">
			#{updateTime,jdbcType=TIMESTAMP}
			</if>
		)
	</insert>
	
	<delete id="removeByPK">
		DELETE FROM t_user_account
		<where>
			AND `id` = #{id,jdbcType=BIGINT}
		</where>
	</delete>
	
	<delete id="removeBy" parameterType="com.bittrade.pojo.model.TUserAccount">
		DELETE FROM t_user_account
		<where>
			<if test="userId != null">
			AND `user_id` = #{userId,jdbcType=BIGINT}
			</if>
			<if test="loginName != null">
			AND `login_name` = #{loginName,jdbcType=VARCHAR}
			</if>
			<if test="realName != null">
			AND `real_name` = #{realName,jdbcType=VARCHAR}
			</if>
			<if test="fhasRealValidate != null">
			AND `fhas_real_Validate` = #{fhasRealValidate,jdbcType=INTEGER}
			</if>
			<if test="balance != null">
			AND `balance` = #{balance,jdbcType=DECIMAL}
			</if>
			<if test="balanceToken != null">
			AND `balance_token` = #{balanceToken,jdbcType=DECIMAL}
			</if>
			<if test="frozenAmount != null">
			AND `frozen_amount` = #{frozenAmount,jdbcType=DECIMAL}
			</if>
			<if test="totalDeposits != null">
			AND `total_deposits` = #{totalDeposits,jdbcType=DECIMAL}
			</if>
			<if test="totalRechargeToken != null">
			AND `total_recharge_token` = #{totalRechargeToken,jdbcType=DECIMAL}
			</if>
			<if test="totalWithdrawals != null">
			AND `total_withdrawals` = #{totalWithdrawals,jdbcType=DECIMAL}
			</if>
			<if test="usedMargin != null">
			AND `used_margin` = #{usedMargin,jdbcType=DECIMAL}
			</if>
			<if test="usedToken != null">
			AND `used_token` = #{usedToken,jdbcType=DECIMAL}
			</if>
			<if test="tokenNumber != null">
			AND `token_number` = #{tokenNumber,jdbcType=INTEGER}
			</if>
			<if test="internalAccount != null">
			AND `internal_account` = #{internalAccount,jdbcType=INTEGER}
			</if>
			<if test="version != null">
			AND `version` = #{version,jdbcType=INTEGER}
			</if>
			<if test="createTime != null">
			AND `create_time` = #{createTime,jdbcType=TIMESTAMP}
			</if>
			<if test="updateTime != null">
			AND `update_time` = #{updateTime,jdbcType=TIMESTAMP}
			</if>
		</where>
	</delete>
	
	<update id="modifyByPK" parameterType="com.bittrade.pojo.model.TUserAccount">
		UPDATE t_user_account
		<set>
			`user_id` = #{userId,jdbcType=BIGINT}, 
			`login_name` = #{loginName,jdbcType=VARCHAR}, 
			`real_name` = #{realName,jdbcType=VARCHAR}, 
			`fhas_real_Validate` = #{fhasRealValidate,jdbcType=INTEGER}, 
			`balance` = #{balance,jdbcType=DECIMAL}, 
			`balance_token` = #{balanceToken,jdbcType=DECIMAL}, 
			`frozen_amount` = #{frozenAmount,jdbcType=DECIMAL}, 
			`total_deposits` = #{totalDeposits,jdbcType=DECIMAL}, 
			`total_recharge_token` = #{totalRechargeToken,jdbcType=DECIMAL}, 
			`total_withdrawals` = #{totalWithdrawals,jdbcType=DECIMAL}, 
			`used_margin` = #{usedMargin,jdbcType=DECIMAL}, 
			`used_token` = #{usedToken,jdbcType=DECIMAL}, 
			`token_number` = #{tokenNumber,jdbcType=INTEGER}, 
			`internal_account` = #{internalAccount,jdbcType=INTEGER}, 
			`version` = #{version,jdbcType=INTEGER}, 
			`create_time` = #{createTime,jdbcType=TIMESTAMP}, 
			`update_time` = #{updateTime,jdbcType=TIMESTAMP}, 
		</set>
		<where>
			AND `id` = #{id,jdbcType=BIGINT}
		</where>
	</update>
	
	<update id="modifyWithSelectiveByPK" parameterType="com.bittrade.pojo.model.TUserAccount">
		UPDATE t_user_account
		<set>
			<if test="userId != null">
			`user_id` = #{userId,jdbcType=BIGINT}, 
			</if>
			<if test="loginName != null">
			`login_name` = #{loginName,jdbcType=VARCHAR}, 
			</if>
			<if test="realName != null">
			`real_name` = #{realName,jdbcType=VARCHAR}, 
			</if>
			<if test="fhasRealValidate != null">
			`fhas_real_Validate` = #{fhasRealValidate,jdbcType=INTEGER}, 
			</if>
			<if test="balance != null">
			`balance` = #{balance,jdbcType=DECIMAL}, 
			</if>
			<if test="balanceToken != null">
			`balance_token` = #{balanceToken,jdbcType=DECIMAL}, 
			</if>
			<if test="frozenAmount != null">
			`frozen_amount` = #{frozenAmount,jdbcType=DECIMAL}, 
			</if>
			<if test="totalDeposits != null">
			`total_deposits` = #{totalDeposits,jdbcType=DECIMAL}, 
			</if>
			<if test="totalRechargeToken != null">
			`total_recharge_token` = #{totalRechargeToken,jdbcType=DECIMAL}, 
			</if>
			<if test="totalWithdrawals != null">
			`total_withdrawals` = #{totalWithdrawals,jdbcType=DECIMAL}, 
			</if>
			<if test="usedMargin != null">
			`used_margin` = #{usedMargin,jdbcType=DECIMAL}, 
			</if>
			<if test="usedToken != null">
			`used_token` = #{usedToken,jdbcType=DECIMAL}, 
			</if>
			<if test="tokenNumber != null">
			`token_number` = #{tokenNumber,jdbcType=INTEGER}, 
			</if>
			<if test="internalAccount != null">
			`internal_account` = #{internalAccount,jdbcType=INTEGER}, 
			</if>
			<if test="version != null">
			`version` = #{version,jdbcType=INTEGER}, 
			</if>
			<if test="createTime != null">
			`create_time` = #{createTime,jdbcType=TIMESTAMP}, 
			</if>
			<if test="updateTime != null">
			`update_time` = #{updateTime,jdbcType=TIMESTAMP}, 
			</if>
		</set>
		<where>
			AND `id` = #{id,jdbcType=BIGINT}
		</where>
	</update>
	
	<update id="modifyBy">
		UPDATE t_user_account
		<set>
			`user_id` = #{tUserAccount.userId,jdbcType=BIGINT}, 
			`login_name` = #{tUserAccount.loginName,jdbcType=VARCHAR}, 
			`real_name` = #{tUserAccount.realName,jdbcType=VARCHAR}, 
			`fhas_real_Validate` = #{tUserAccount.fhasRealValidate,jdbcType=INTEGER}, 
			`balance` = #{tUserAccount.balance,jdbcType=DECIMAL}, 
			`balance_token` = #{tUserAccount.balanceToken,jdbcType=DECIMAL}, 
			`frozen_amount` = #{tUserAccount.frozenAmount,jdbcType=DECIMAL}, 
			`total_deposits` = #{tUserAccount.totalDeposits,jdbcType=DECIMAL}, 
			`total_recharge_token` = #{tUserAccount.totalRechargeToken,jdbcType=DECIMAL}, 
			`total_withdrawals` = #{tUserAccount.totalWithdrawals,jdbcType=DECIMAL}, 
			`used_margin` = #{tUserAccount.usedMargin,jdbcType=DECIMAL}, 
			`used_token` = #{tUserAccount.usedToken,jdbcType=DECIMAL}, 
			`token_number` = #{tUserAccount.tokenNumber,jdbcType=INTEGER}, 
			`internal_account` = #{tUserAccount.internalAccount,jdbcType=INTEGER}, 
			`version` = #{tUserAccount.version,jdbcType=INTEGER}, 
			`create_time` = #{tUserAccount.createTime,jdbcType=TIMESTAMP}, 
			`update_time` = #{tUserAccount.updateTime,jdbcType=TIMESTAMP}, 
		</set>
		<where>
		<if test="condiTUserAccount != null">
			<if test="condiTUserAccount.id != null">
			AND `id` = #{condiTUserAccount.id,jdbcType=BIGINT}
			</if>
			<if test="condiTUserAccount.userId != null">
			AND `user_id` = #{condiTUserAccount.userId,jdbcType=BIGINT}
			</if>
			<if test="condiTUserAccount.loginName != null">
			AND `login_name` = #{condiTUserAccount.loginName,jdbcType=VARCHAR}
			</if>
			<if test="condiTUserAccount.realName != null">
			AND `real_name` = #{condiTUserAccount.realName,jdbcType=VARCHAR}
			</if>
			<if test="condiTUserAccount.fhasRealValidate != null">
			AND `fhas_real_Validate` = #{condiTUserAccount.fhasRealValidate,jdbcType=INTEGER}
			</if>
			<if test="condiTUserAccount.balance != null">
			AND `balance` = #{condiTUserAccount.balance,jdbcType=DECIMAL}
			</if>
			<if test="condiTUserAccount.balanceToken != null">
			AND `balance_token` = #{condiTUserAccount.balanceToken,jdbcType=DECIMAL}
			</if>
			<if test="condiTUserAccount.frozenAmount != null">
			AND `frozen_amount` = #{condiTUserAccount.frozenAmount,jdbcType=DECIMAL}
			</if>
			<if test="condiTUserAccount.totalDeposits != null">
			AND `total_deposits` = #{condiTUserAccount.totalDeposits,jdbcType=DECIMAL}
			</if>
			<if test="condiTUserAccount.totalRechargeToken != null">
			AND `total_recharge_token` = #{condiTUserAccount.totalRechargeToken,jdbcType=DECIMAL}
			</if>
			<if test="condiTUserAccount.totalWithdrawals != null">
			AND `total_withdrawals` = #{condiTUserAccount.totalWithdrawals,jdbcType=DECIMAL}
			</if>
			<if test="condiTUserAccount.usedMargin != null">
			AND `used_margin` = #{condiTUserAccount.usedMargin,jdbcType=DECIMAL}
			</if>
			<if test="condiTUserAccount.usedToken != null">
			AND `used_token` = #{condiTUserAccount.usedToken,jdbcType=DECIMAL}
			</if>
			<if test="condiTUserAccount.tokenNumber != null">
			AND `token_number` = #{condiTUserAccount.tokenNumber,jdbcType=INTEGER}
			</if>
			<if test="condiTUserAccount.internalAccount != null">
			AND `internal_account` = #{condiTUserAccount.internalAccount,jdbcType=INTEGER}
			</if>
			<if test="condiTUserAccount.version != null">
			AND `version` = #{condiTUserAccount.version,jdbcType=INTEGER}
			</if>
			<if test="condiTUserAccount.createTime != null">
			AND `create_time` = #{condiTUserAccount.createTime,jdbcType=TIMESTAMP}
			</if>
			<if test="condiTUserAccount.updateTime != null">
			AND `update_time` = #{condiTUserAccount.updateTime,jdbcType=TIMESTAMP}
			</if>
		</if>
		</where>
	</update>
	
	<update id="modifyWithSelectiveBy">
		UPDATE t_user_account
		<set>
		<if test="tUserAccount != null">
			<if test="tUserAccount.userId != null">
			`user_id` = #{tUserAccount.userId,jdbcType=BIGINT}, 
			</if>
			<if test="tUserAccount.loginName != null">
			`login_name` = #{tUserAccount.loginName,jdbcType=VARCHAR}, 
			</if>
			<if test="tUserAccount.realName != null">
			`real_name` = #{tUserAccount.realName,jdbcType=VARCHAR}, 
			</if>
			<if test="tUserAccount.fhasRealValidate != null">
			`fhas_real_Validate` = #{tUserAccount.fhasRealValidate,jdbcType=INTEGER}, 
			</if>
			<if test="tUserAccount.balance != null">
			`balance` = #{tUserAccount.balance,jdbcType=DECIMAL}, 
			</if>
			<if test="tUserAccount.balanceToken != null">
			`balance_token` = #{tUserAccount.balanceToken,jdbcType=DECIMAL}, 
			</if>
			<if test="tUserAccount.frozenAmount != null">
			`frozen_amount` = #{tUserAccount.frozenAmount,jdbcType=DECIMAL}, 
			</if>
			<if test="tUserAccount.totalDeposits != null">
			`total_deposits` = #{tUserAccount.totalDeposits,jdbcType=DECIMAL}, 
			</if>
			<if test="tUserAccount.totalRechargeToken != null">
			`total_recharge_token` = #{tUserAccount.totalRechargeToken,jdbcType=DECIMAL}, 
			</if>
			<if test="tUserAccount.totalWithdrawals != null">
			`total_withdrawals` = #{tUserAccount.totalWithdrawals,jdbcType=DECIMAL}, 
			</if>
			<if test="tUserAccount.usedMargin != null">
			`used_margin` = #{tUserAccount.usedMargin,jdbcType=DECIMAL}, 
			</if>
			<if test="tUserAccount.usedToken != null">
			`used_token` = #{tUserAccount.usedToken,jdbcType=DECIMAL}, 
			</if>
			<if test="tUserAccount.tokenNumber != null">
			`token_number` = #{tUserAccount.tokenNumber,jdbcType=INTEGER}, 
			</if>
			<if test="tUserAccount.internalAccount != null">
			`internal_account` = #{tUserAccount.internalAccount,jdbcType=INTEGER}, 
			</if>
			<if test="tUserAccount.version != null">
			`version` = #{tUserAccount.version,jdbcType=INTEGER}, 
			</if>
			<if test="tUserAccount.createTime != null">
			`create_time` = #{tUserAccount.createTime,jdbcType=TIMESTAMP}, 
			</if>
			<if test="tUserAccount.updateTime != null">
			`update_time` = #{tUserAccount.updateTime,jdbcType=TIMESTAMP}, 
			</if>
		</if>
		</set>
		<where>
		<if test="condiTUserAccount != null">
			<if test="condiTUserAccount.id != null">
			AND `id` = #{condiTUserAccount.id,jdbcType=BIGINT}
			</if>
			<if test="condiTUserAccount.userId != null">
			AND `user_id` = #{condiTUserAccount.userId,jdbcType=BIGINT}
			</if>
			<if test="condiTUserAccount.loginName != null">
			AND `login_name` = #{condiTUserAccount.loginName,jdbcType=VARCHAR}
			</if>
			<if test="condiTUserAccount.realName != null">
			AND `real_name` = #{condiTUserAccount.realName,jdbcType=VARCHAR}
			</if>
			<if test="condiTUserAccount.fhasRealValidate != null">
			AND `fhas_real_Validate` = #{condiTUserAccount.fhasRealValidate,jdbcType=INTEGER}
			</if>
			<if test="condiTUserAccount.balance != null">
			AND `balance` = #{condiTUserAccount.balance,jdbcType=DECIMAL}
			</if>
			<if test="condiTUserAccount.balanceToken != null">
			AND `balance_token` = #{condiTUserAccount.balanceToken,jdbcType=DECIMAL}
			</if>
			<if test="condiTUserAccount.frozenAmount != null">
			AND `frozen_amount` = #{condiTUserAccount.frozenAmount,jdbcType=DECIMAL}
			</if>
			<if test="condiTUserAccount.totalDeposits != null">
			AND `total_deposits` = #{condiTUserAccount.totalDeposits,jdbcType=DECIMAL}
			</if>
			<if test="condiTUserAccount.totalRechargeToken != null">
			AND `total_recharge_token` = #{condiTUserAccount.totalRechargeToken,jdbcType=DECIMAL}
			</if>
			<if test="condiTUserAccount.totalWithdrawals != null">
			AND `total_withdrawals` = #{condiTUserAccount.totalWithdrawals,jdbcType=DECIMAL}
			</if>
			<if test="condiTUserAccount.usedMargin != null">
			AND `used_margin` = #{condiTUserAccount.usedMargin,jdbcType=DECIMAL}
			</if>
			<if test="condiTUserAccount.usedToken != null">
			AND `used_token` = #{condiTUserAccount.usedToken,jdbcType=DECIMAL}
			</if>
			<if test="condiTUserAccount.tokenNumber != null">
			AND `token_number` = #{condiTUserAccount.tokenNumber,jdbcType=INTEGER}
			</if>
			<if test="condiTUserAccount.internalAccount != null">
			AND `internal_account` = #{condiTUserAccount.internalAccount,jdbcType=INTEGER}
			</if>
			<if test="condiTUserAccount.version != null">
			AND `version` = #{condiTUserAccount.version,jdbcType=INTEGER}
			</if>
			<if test="condiTUserAccount.createTime != null">
			AND `create_time` = #{condiTUserAccount.createTime,jdbcType=TIMESTAMP}
			</if>
			<if test="condiTUserAccount.updateTime != null">
			AND `update_time` = #{condiTUserAccount.updateTime,jdbcType=TIMESTAMP}
			</if>
		</if>
		</where>
	</update>
	
	<select id="getByPK" resultType="com.bittrade.pojo.model.TUserAccount">
		SELECT 
			`id`, 
			`user_id`, 
			`login_name`, 
			`real_name`, 
			`fhas_real_Validate`, 
			`balance`, 
			`balance_token`, 
			`frozen_amount`, 
			`total_deposits`, 
			`total_recharge_token`, 
			`total_withdrawals`, 
			`used_margin`, 
			`used_token`, 
			`token_number`, 
			`internal_account`, 
			`version`, 
			`create_time`, 
			`update_time`
		FROM t_user_account
		<where>
			AND `id` = #{id,jdbcType=BIGINT}
		</where>
	</select>
	
	<select id="getBy" resultType="com.bittrade.pojo.model.TUserAccount">
		SELECT 
			`id`, 
			`user_id`, 
			`login_name`, 
			`real_name`, 
			`fhas_real_Validate`, 
			`balance`, 
			`balance_token`, 
			`frozen_amount`, 
			`total_deposits`, 
			`total_recharge_token`, 
			`total_withdrawals`, 
			`used_margin`, 
			`used_token`, 
			`token_number`, 
			`internal_account`, 
			`version`, 
			`create_time`, 
			`update_time`
		FROM t_user_account
		<where>
			<if test="userId != null">
			AND `user_id` = #{userId,jdbcType=BIGINT}
			</if>
			<if test="loginName != null">
			AND `login_name` = #{loginName,jdbcType=VARCHAR}
			</if>
			<if test="realName != null">
			AND `real_name` = #{realName,jdbcType=VARCHAR}
			</if>
			<if test="fhasRealValidate != null">
			AND `fhas_real_Validate` = #{fhasRealValidate,jdbcType=INTEGER}
			</if>
			<if test="balance != null">
			AND `balance` = #{balance,jdbcType=DECIMAL}
			</if>
			<if test="balanceToken != null">
			AND `balance_token` = #{balanceToken,jdbcType=DECIMAL}
			</if>
			<if test="frozenAmount != null">
			AND `frozen_amount` = #{frozenAmount,jdbcType=DECIMAL}
			</if>
			<if test="totalDeposits != null">
			AND `total_deposits` = #{totalDeposits,jdbcType=DECIMAL}
			</if>
			<if test="totalRechargeToken != null">
			AND `total_recharge_token` = #{totalRechargeToken,jdbcType=DECIMAL}
			</if>
			<if test="totalWithdrawals != null">
			AND `total_withdrawals` = #{totalWithdrawals,jdbcType=DECIMAL}
			</if>
			<if test="usedMargin != null">
			AND `used_margin` = #{usedMargin,jdbcType=DECIMAL}
			</if>
			<if test="usedToken != null">
			AND `used_token` = #{usedToken,jdbcType=DECIMAL}
			</if>
			<if test="tokenNumber != null">
			AND `token_number` = #{tokenNumber,jdbcType=INTEGER}
			</if>
			<if test="internalAccount != null">
			AND `internal_account` = #{internalAccount,jdbcType=INTEGER}
			</if>
			<if test="version != null">
			AND `version` = #{version,jdbcType=INTEGER}
			</if>
			<if test="createTime != null">
			AND `create_time` = #{createTime,jdbcType=TIMESTAMP}
			</if>
			<if test="updateTime != null">
			AND `update_time` = #{updateTime,jdbcType=TIMESTAMP}
			</if>
		</where>
		LIMIT 1
	</select>
	
	<select id="get" resultType="com.bittrade.pojo.model.TUserAccount">
		SELECT 
			`id`, 
			`user_id`, 
			`login_name`, 
			`real_name`, 
			`fhas_real_Validate`, 
			`balance`, 
			`balance_token`, 
			`frozen_amount`, 
			`total_deposits`, 
			`total_recharge_token`, 
			`total_withdrawals`, 
			`used_margin`, 
			`used_token`, 
			`token_number`, 
			`internal_account`, 
			`version`, 
			`create_time`, 
			`update_time`
		FROM t_user_account
		LIMIT 1
	</select>
	
	<select id="getsBy" resultType="com.bittrade.pojo.model.TUserAccount">
		SELECT 
			<include refid="Base_Column_List"></include>
		FROM t_user_account
		<where>
			<if test="userId != null">
			AND `user_id` = #{userId,jdbcType=BIGINT}
			</if>
			<if test="loginName != null">
			AND `login_name` = #{loginName,jdbcType=VARCHAR}
			</if>
			<if test="realName != null">
			AND `real_name` = #{realName,jdbcType=VARCHAR}
			</if>
			<if test="fhasRealValidate != null">
			AND `fhas_real_Validate` = #{fhasRealValidate,jdbcType=INTEGER}
			</if>
			<if test="balance != null">
			AND `balance` = #{balance,jdbcType=DECIMAL}
			</if>
			<if test="balanceToken != null">
			AND `balance_token` = #{balanceToken,jdbcType=DECIMAL}
			</if>
			<if test="frozenAmount != null">
			AND `frozen_amount` = #{frozenAmount,jdbcType=DECIMAL}
			</if>
			<if test="totalDeposits != null">
			AND `total_deposits` = #{totalDeposits,jdbcType=DECIMAL}
			</if>
			<if test="totalRechargeToken != null">
			AND `total_recharge_token` = #{totalRechargeToken,jdbcType=DECIMAL}
			</if>
			<if test="totalWithdrawals != null">
			AND `total_withdrawals` = #{totalWithdrawals,jdbcType=DECIMAL}
			</if>
			<if test="usedMargin != null">
			AND `used_margin` = #{usedMargin,jdbcType=DECIMAL}
			</if>
			<if test="usedToken != null">
			AND `used_token` = #{usedToken,jdbcType=DECIMAL}
			</if>
			<if test="tokenNumber != null">
			AND `token_number` = #{tokenNumber,jdbcType=INTEGER}
			</if>
			<if test="internalAccount != null">
			AND `internal_account` = #{internalAccount,jdbcType=INTEGER}
			</if>
			<if test="version != null">
			AND `version` = #{version,jdbcType=INTEGER}
			</if>
			<if test="createTime != null">
			AND `create_time` = #{createTime,jdbcType=TIMESTAMP}
			</if>
			<if test="updateTime != null">
			AND `update_time` = #{updateTime,jdbcType=TIMESTAMP}
			</if>
			<include refid="sql_WHERE_forProperty"></include>
		</where>
	</select>
	
	<select id="gets" resultType="com.bittrade.pojo.model.TUserAccount">
		SELECT 
			<include refid="Base_Column_List"></include>
		FROM t_user_account
	</select>
	
	<select id="getCntBy" resultType="int">
		SELECT COUNT(1)
		FROM t_user_account
		<where>
		<if test="tUserAccount != null">
			<if test="tUserAccount.userId != null">
			AND `user_id` = #{tUserAccount.userId,jdbcType=BIGINT}
			</if>
			<if test="tUserAccount.loginName != null">
			AND `login_name` = #{tUserAccount.loginName,jdbcType=VARCHAR}
			</if>
			<if test="tUserAccount.realName != null">
			AND `real_name` = #{tUserAccount.realName,jdbcType=VARCHAR}
			</if>
			<if test="tUserAccount.fhasRealValidate != null">
			AND `fhas_real_Validate` = #{tUserAccount.fhasRealValidate,jdbcType=INTEGER}
			</if>
			<if test="tUserAccount.balance != null">
			AND `balance` = #{tUserAccount.balance,jdbcType=DECIMAL}
			</if>
			<if test="tUserAccount.balanceToken != null">
			AND `balance_token` = #{tUserAccount.balanceToken,jdbcType=DECIMAL}
			</if>
			<if test="tUserAccount.frozenAmount != null">
			AND `frozen_amount` = #{tUserAccount.frozenAmount,jdbcType=DECIMAL}
			</if>
			<if test="tUserAccount.totalDeposits != null">
			AND `total_deposits` = #{tUserAccount.totalDeposits,jdbcType=DECIMAL}
			</if>
			<if test="tUserAccount.totalRechargeToken != null">
			AND `total_recharge_token` = #{tUserAccount.totalRechargeToken,jdbcType=DECIMAL}
			</if>
			<if test="tUserAccount.totalWithdrawals != null">
			AND `total_withdrawals` = #{tUserAccount.totalWithdrawals,jdbcType=DECIMAL}
			</if>
			<if test="tUserAccount.usedMargin != null">
			AND `used_margin` = #{tUserAccount.usedMargin,jdbcType=DECIMAL}
			</if>
			<if test="tUserAccount.usedToken != null">
			AND `used_token` = #{tUserAccount.usedToken,jdbcType=DECIMAL}
			</if>
			<if test="tUserAccount.tokenNumber != null">
			AND `token_number` = #{tUserAccount.tokenNumber,jdbcType=INTEGER}
			</if>
			<if test="tUserAccount.internalAccount != null">
			AND `internal_account` = #{tUserAccount.internalAccount,jdbcType=INTEGER}
			</if>
			<if test="tUserAccount.version != null">
			AND `version` = #{tUserAccount.version,jdbcType=INTEGER}
			</if>
			<if test="tUserAccount.createTime != null">
			AND `create_time` = #{tUserAccount.createTime,jdbcType=TIMESTAMP}
			</if>
			<if test="tUserAccount.updateTime != null">
			AND `update_time` = #{tUserAccount.updateTime,jdbcType=TIMESTAMP}
			</if>
			<include refid="sql_WHERE_forObject"></include>
		</if>
		</where>
	</select>
	
	<select id="getsByPage" resultType="com.bittrade.pojo.model.TUserAccount">
		SELECT 
			`id`, 
			`user_id`, 
			`login_name`, 
			`real_name`, 
			`fhas_real_Validate`, 
			`balance`, 
			`balance_token`, 
			`frozen_amount`, 
			`total_deposits`, 
			`total_recharge_token`, 
			`total_withdrawals`, 
			`used_margin`, 
			`used_token`, 
			`token_number`, 
			`internal_account`, 
			`version`, 
			`create_time`, 
			`update_time`
		FROM t_user_account
		<where>
		<if test="tUserAccount != null">
			<if test="tUserAccount.userId != null">
			AND `user_id` = #{tUserAccount.userId,jdbcType=BIGINT}
			</if>
			<if test="tUserAccount.loginName != null">
			AND `login_name` = #{tUserAccount.loginName,jdbcType=VARCHAR}
			</if>
			<if test="tUserAccount.realName != null">
			AND `real_name` = #{tUserAccount.realName,jdbcType=VARCHAR}
			</if>
			<if test="tUserAccount.fhasRealValidate != null">
			AND `fhas_real_Validate` = #{tUserAccount.fhasRealValidate,jdbcType=INTEGER}
			</if>
			<if test="tUserAccount.balance != null">
			AND `balance` = #{tUserAccount.balance,jdbcType=DECIMAL}
			</if>
			<if test="tUserAccount.balanceToken != null">
			AND `balance_token` = #{tUserAccount.balanceToken,jdbcType=DECIMAL}
			</if>
			<if test="tUserAccount.frozenAmount != null">
			AND `frozen_amount` = #{tUserAccount.frozenAmount,jdbcType=DECIMAL}
			</if>
			<if test="tUserAccount.totalDeposits != null">
			AND `total_deposits` = #{tUserAccount.totalDeposits,jdbcType=DECIMAL}
			</if>
			<if test="tUserAccount.totalRechargeToken != null">
			AND `total_recharge_token` = #{tUserAccount.totalRechargeToken,jdbcType=DECIMAL}
			</if>
			<if test="tUserAccount.totalWithdrawals != null">
			AND `total_withdrawals` = #{tUserAccount.totalWithdrawals,jdbcType=DECIMAL}
			</if>
			<if test="tUserAccount.usedMargin != null">
			AND `used_margin` = #{tUserAccount.usedMargin,jdbcType=DECIMAL}
			</if>
			<if test="tUserAccount.usedToken != null">
			AND `used_token` = #{tUserAccount.usedToken,jdbcType=DECIMAL}
			</if>
			<if test="tUserAccount.tokenNumber != null">
			AND `token_number` = #{tUserAccount.tokenNumber,jdbcType=INTEGER}
			</if>
			<if test="tUserAccount.internalAccount != null">
			AND `internal_account` = #{tUserAccount.internalAccount,jdbcType=INTEGER}
			</if>
			<if test="tUserAccount.version != null">
			AND `version` = #{tUserAccount.version,jdbcType=INTEGER}
			</if>
			<if test="tUserAccount.createTime != null">
			AND `create_time` = #{tUserAccount.createTime,jdbcType=TIMESTAMP}
			</if>
			<if test="tUserAccount.updateTime != null">
			AND `update_time` = #{tUserAccount.updateTime,jdbcType=TIMESTAMP}
			</if>
			<include refid="sql_WHERE_forObject"></include>
		</if>
		</where>
		LIMIT #{page}, #{size}
	</select>
	
	<select id="getDTOBy" resultType="com.bittrade.pojo.dto.TUserAccountDTO">
		SELECT 
			`id`, 
			`user_id`, 
			`login_name`, 
			`real_name`, 
			`fhas_real_Validate`, 
			`balance`, 
			`balance_token`, 
			`frozen_amount`, 
			`total_deposits`, 
			`total_recharge_token`, 
			`total_withdrawals`, 
			`used_margin`, 
			`used_token`, 
			`token_number`, 
			`internal_account`, 
			`version`, 
			`create_time`, 
			`update_time`
		FROM t_user_account
		<where>
			<if test="userId != null">
			AND `user_id` = #{userId,jdbcType=BIGINT}
			</if>
			<if test="loginName != null">
			AND `login_name` = #{loginName,jdbcType=VARCHAR}
			</if>
			<if test="realName != null">
			AND `real_name` = #{realName,jdbcType=VARCHAR}
			</if>
			<if test="fhasRealValidate != null">
			AND `fhas_real_Validate` = #{fhasRealValidate,jdbcType=INTEGER}
			</if>
			<if test="balance != null">
			AND `balance` = #{balance,jdbcType=DECIMAL}
			</if>
			<if test="balanceToken != null">
			AND `balance_token` = #{balanceToken,jdbcType=DECIMAL}
			</if>
			<if test="frozenAmount != null">
			AND `frozen_amount` = #{frozenAmount,jdbcType=DECIMAL}
			</if>
			<if test="totalDeposits != null">
			AND `total_deposits` = #{totalDeposits,jdbcType=DECIMAL}
			</if>
			<if test="totalRechargeToken != null">
			AND `total_recharge_token` = #{totalRechargeToken,jdbcType=DECIMAL}
			</if>
			<if test="totalWithdrawals != null">
			AND `total_withdrawals` = #{totalWithdrawals,jdbcType=DECIMAL}
			</if>
			<if test="usedMargin != null">
			AND `used_margin` = #{usedMargin,jdbcType=DECIMAL}
			</if>
			<if test="usedToken != null">
			AND `used_token` = #{usedToken,jdbcType=DECIMAL}
			</if>
			<if test="tokenNumber != null">
			AND `token_number` = #{tokenNumber,jdbcType=INTEGER}
			</if>
			<if test="internalAccount != null">
			AND `internal_account` = #{internalAccount,jdbcType=INTEGER}
			</if>
			<if test="version != null">
			AND `version` = #{version,jdbcType=INTEGER}
			</if>
			<if test="createTime != null">
			AND `create_time` = #{createTime,jdbcType=TIMESTAMP}
			</if>
			<if test="updateTime != null">
			AND `update_time` = #{updateTime,jdbcType=TIMESTAMP}
			</if>
		</where>
		LIMIT 1
	</select>
	
	<select id="getsDTOBy" resultType="com.bittrade.pojo.dto.TUserAccountDTO">
		SELECT 
			<include refid="sql_Column_forObject"></include>
		FROM t_user_account
		<where>
			<include refid="sql_WHERE_forObject"></include>
		</where>
	</select>

</mapper>