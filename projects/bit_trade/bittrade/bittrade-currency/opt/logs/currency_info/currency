[2019-08-27 09:44:06.333] [INFO ] - [main][?#?:?] : using logger: com.alibaba.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[2019-08-27 09:44:06.341] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-27 09:44:06.346] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {}
[2019-08-27 09:44:06.611] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@25fb8912: startup date [Tue Aug 27 09:44:06 CST 2019]; root of context hierarchy
[2019-08-27 09:44:07.027] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-27 09:44:07.094] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e929f2f7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:44:07.269] [INFO ] - [pool-1-thread-1][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$1.run(AwaitingNonWebApplicationListener.java:61)] :  [Dubbo] Current Spring Boot Application is await...
[2019-08-27 09:44:07.602] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-27 09:44:07.603] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {dubbo.application.id=service-consumer, dubbo.application.name=service-consumer, dubbo.consumer.check=false, dubbo.consumer.timeout=5000, dubbo.monitor=, dubbo.protocol.id=dubbo, dubbo.protocol.name=dubbo, dubbo.protocol.port=20881, dubbo.provider.timeout=5000, dubbo.registry.address=N/A, dubbo.registry.check=false, dubbo.registry.id=my-registry, dubbo.registry.protocol=zookeeper, dubbo.scan=}
[2019-08-27 09:44:07.643] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : The following profiles are active: common,data,eureka,dubbo_provider,dubbo_consumer
[2019-08-27 09:44:07.685] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5e8ac0e1: startup date [Tue Aug 27 09:44:07 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@25fb8912
[2019-08-27 09:44:09.186] [WARN ] - [main][ org.mybatis.logging.Logger.warn(Logger.java:44)] : No MyBatis mapper was found in '[com.baomidou.cloud.service.*.mapper*]' package. Please check your configuration.
[2019-08-27 09:44:09.893] [INFO ] - [main][ org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:172)] : Multiple Spring Data modules found, entering strict repository configuration mode!
[2019-08-27 09:44:10.883] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : BeanFactory id=e8f2fddb-58e9-30e9-b1e2-7f4caf085d89
[2019-08-27 09:44:10.921] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-27 09:44:11.187] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:44:11.200] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'transactionProperties' of type [com.core.framework.props.TransactionProperties$$EnhancerBySpringCGLIB$$de58b2a0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:44:11.214] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$e6bbe56c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:44:11.218] [INFO ] - [main][ com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource(DruidDataSourceAutoConfigure.java:56)] : Init DruidDataSource
[2019-08-27 09:44:11.328] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:44:11.453] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003)] : {dataSource-1} inited
[2019-08-27 09:44:11.454] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:44:11.482] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:44:11.492] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$$EnhancerBySpringCGLIB$$6183eb04] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:44:11.509] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:44:11.515] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:44:11.523] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration$$EnhancerBySpringCGLIB$$7a108869] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:44:11.560] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:44:11.561] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'transactionConfig' of type [com.core.framework.config.TransactionConfig$$EnhancerBySpringCGLIB$$d3146d45] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:44:11.590] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'defaultPointcutAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:44:11.609] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$cd0feffa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:44:11.912] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' of type [com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration$$EnhancerBySpringCGLIB$$dc11956c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:44:11.926] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:44:11.935] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:44:11.938] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:44:11.942] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:44:11.946] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:44:11.995] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e929f2f7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:44:12.543] [INFO ] - [main][ org.xnio.Xnio.<clinit>(Xnio.java:104)] : XNIO version 3.3.8.Final
[2019-08-27 09:44:12.571] [INFO ] - [main][ org.xnio.nio.NioXnio.<clinit>(NioXnio.java:55)] : XNIO NIO Implementation Version 3.3.8.Final
[2019-08-27 09:44:12.645] [WARN ] - [main][ io.undertow.websockets.jsr.Bootstrap.handleDeployment(Bootstrap.java:67)] : UT026009: XNIO worker was not set on WebSocketDeploymentInfo, the default worker will be used
[2019-08-27 09:44:12.646] [WARN ] - [main][ io.undertow.websockets.jsr.Bootstrap.handleDeployment(Bootstrap.java:76)] : UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
[2019-08-27 09:44:12.691] [INFO ] - [main][ io.undertow.servlet.spec.ServletContextImpl.log(ServletContextImpl.java:360)] : Initializing Spring embedded WebApplicationContext
[2019-08-27 09:44:12.692] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Root WebApplicationContext: initialization completed in 5006 ms
[2019-08-27 09:44:12.990] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-27 09:44:12.990] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-27 09:44:13.018] [INFO ] - [main][ com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281)] : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@6d31f106
[2019-08-27 09:44:13.680] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Initializing ExecutorService
[2019-08-27 09:44:14.879] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'characterEncodingFilter' to: [/*]
[2019-08-27 09:44:14.880] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'webMvcMetricsFilter' to: [/*]
[2019-08-27 09:44:14.881] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'springSecurityFilterChain' to: [/*]
[2019-08-27 09:44:14.882] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'httpTraceFilter' to: [/*]
[2019-08-27 09:44:14.882] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Servlet dispatcherServlet mapped to [/]
[2019-08-27 09:44:17.990] [INFO ] - [main][ com.core.framework.config.redis.JedisClusterConfig.getJedisCluster(JedisClusterConfig.java:35)] : 进入redis集群初始化方法：访问集群地址为：[154.222.138.5:7000, 154.222.138.5:7001, 154.222.138.5:7002, 154.222.138.5:7003, 154.222.138.5:7004, 154.222.138.5:7005]
[2019-08-27 09:44:18.672] [WARN ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'fundsController': Unsatisfied dependency expressed through field 'walletService'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'TWalletServiceImpl': Injection of @Reference dependencies failed; nested exception is java.lang.IllegalStateException: No such any registry to reference com.bittrade.c2c.service.ITLegalCurrencyAccountService on the consumer 192.168.1.12 use dubbo version 2.6.2, please config <dubbo:registry address="..." /> to your spring config.
[2019-08-27 09:44:18.676] [WARN ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Destroy method 'close' on bean with name 'eurekaRegistration' threw an exception: org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
[2019-08-27 09:44:18.678] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Shutting down ExecutorService
[2019-08-27 09:44:18.679] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:1948)] : {dataSource-1} closing ...
[2019-08-27 09:44:18.945] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:2020)] : {dataSource-1} closed
[2019-08-27 09:46:53.613] [INFO ] - [main][?#?:?] : using logger: com.alibaba.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[2019-08-27 09:46:53.621] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-27 09:46:53.625] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {}
[2019-08-27 09:46:53.890] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7bd4937b: startup date [Tue Aug 27 09:46:53 CST 2019]; root of context hierarchy
[2019-08-27 09:46:54.314] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-27 09:46:54.382] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$39f88a49] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:46:54.557] [INFO ] - [pool-1-thread-1][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$1.run(AwaitingNonWebApplicationListener.java:61)] :  [Dubbo] Current Spring Boot Application is await...
[2019-08-27 09:46:54.894] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-27 09:46:54.896] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {dubbo.application.id=service-consumer, dubbo.application.name=service-consumer, dubbo.consumer.check=false, dubbo.consumer.timeout=5000, dubbo.monitor=, dubbo.protocol.id=dubbo, dubbo.protocol.name=dubbo, dubbo.protocol.port=20881, dubbo.provider.timeout=5000, dubbo.registry.address=N/A, dubbo.registry.check=false, dubbo.registry.id=my-registry, dubbo.registry.protocol=zookeeper, dubbo.scan=}
[2019-08-27 09:46:54.939] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : The following profiles are active: common,data,eureka,dubbo_provider,dubbo_consumer
[2019-08-27 09:46:54.978] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@235a0c16: startup date [Tue Aug 27 09:46:54 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7bd4937b
[2019-08-27 09:46:56.449] [WARN ] - [main][ org.mybatis.logging.Logger.warn(Logger.java:44)] : No MyBatis mapper was found in '[com.baomidou.cloud.service.*.mapper*]' package. Please check your configuration.
[2019-08-27 09:46:57.154] [INFO ] - [main][ org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:172)] : Multiple Spring Data modules found, entering strict repository configuration mode!
[2019-08-27 09:46:58.147] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : BeanFactory id=e8f2fddb-58e9-30e9-b1e2-7f4caf085d89
[2019-08-27 09:46:58.191] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-27 09:46:58.463] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:46:58.475] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'transactionProperties' of type [com.core.framework.props.TransactionProperties$$EnhancerBySpringCGLIB$$2f2749f2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:46:58.490] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$378a7cbe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:46:58.494] [INFO ] - [main][ com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource(DruidDataSourceAutoConfigure.java:56)] : Init DruidDataSource
[2019-08-27 09:46:58.617] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:46:58.748] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003)] : {dataSource-1} inited
[2019-08-27 09:46:58.749] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:46:58.779] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:46:58.791] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$$EnhancerBySpringCGLIB$$b2528256] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:46:58.811] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:46:58.822] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:46:58.831] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration$$EnhancerBySpringCGLIB$$cadf1fbb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:46:58.870] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:46:58.871] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'transactionConfig' of type [com.core.framework.config.TransactionConfig$$EnhancerBySpringCGLIB$$23e30497] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:46:58.898] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'defaultPointcutAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:46:58.916] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1dde874c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:46:59.218] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' of type [com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration$$EnhancerBySpringCGLIB$$2ce02cbe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:46:59.232] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:46:59.242] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:46:59.246] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:46:59.249] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:46:59.253] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:46:59.307] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$39f88a49] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:46:59.896] [INFO ] - [main][ org.xnio.Xnio.<clinit>(Xnio.java:104)] : XNIO version 3.3.8.Final
[2019-08-27 09:46:59.925] [INFO ] - [main][ org.xnio.nio.NioXnio.<clinit>(NioXnio.java:55)] : XNIO NIO Implementation Version 3.3.8.Final
[2019-08-27 09:46:59.997] [WARN ] - [main][ io.undertow.websockets.jsr.Bootstrap.handleDeployment(Bootstrap.java:67)] : UT026009: XNIO worker was not set on WebSocketDeploymentInfo, the default worker will be used
[2019-08-27 09:46:59.998] [WARN ] - [main][ io.undertow.websockets.jsr.Bootstrap.handleDeployment(Bootstrap.java:76)] : UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
[2019-08-27 09:47:00.045] [INFO ] - [main][ io.undertow.servlet.spec.ServletContextImpl.log(ServletContextImpl.java:360)] : Initializing Spring embedded WebApplicationContext
[2019-08-27 09:47:00.046] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Root WebApplicationContext: initialization completed in 5068 ms
[2019-08-27 09:47:00.347] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-27 09:47:00.348] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-27 09:47:00.375] [INFO ] - [main][ com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281)] : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@6fb0261e
[2019-08-27 09:47:00.980] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Initializing ExecutorService
[2019-08-27 09:47:02.125] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'characterEncodingFilter' to: [/*]
[2019-08-27 09:47:02.126] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'webMvcMetricsFilter' to: [/*]
[2019-08-27 09:47:02.127] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'springSecurityFilterChain' to: [/*]
[2019-08-27 09:47:02.128] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'httpTraceFilter' to: [/*]
[2019-08-27 09:47:02.128] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Servlet dispatcherServlet mapped to [/]
[2019-08-27 09:47:05.257] [INFO ] - [main][ com.core.framework.config.redis.JedisClusterConfig.getJedisCluster(JedisClusterConfig.java:35)] : 进入redis集群初始化方法：访问集群地址为：[154.222.138.5:7000, 154.222.138.5:7001, 154.222.138.5:7002, 154.222.138.5:7003, 154.222.138.5:7004, 154.222.138.5:7005]
[2019-08-27 09:47:05.826] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.c2c.service.ITLegalCurrencyAccountServicedubbo://localhost:20884 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-27 09:47:07.368] [WARN ] - [main][ com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:98)] :  [DUBBO] Failed to start NettyClient HAHE/192.168.1.12 connect to the server localhost/127.0.0.1:20884 (check == false, ignore and retry later!), cause: client(url: dubbo://localhost:20884/com.bittrade.c2c.service.ITLegalCurrencyAccountService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.c2c.service.ITLegalCurrencyAccountService&methods=getByUserIdAndCoinId,removeById,lambdaQuery,removeByMap,getC2CAccount,listByIds,freezeAmount,removeBy,getBy,updateBatchById,getsBy,saveOrUpdate,add,totalConversion,modifyWithSelectiveBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,detail,page,modifyByPK,c2cOut,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,availableBalance,getBaseMapper,c2cIn,removeByIds,get,lambdaUpdate,unFreezeAmount,getAssets,modifyBy,getsByPagination,getCoinByName,listMaps,saveBatch,modifyWithSelectiveByPK,gets,updateById,pageMaps,listByMap,getByPK&pid=3232&register.ip=192.168.1.12&side=consumer&timestamp=1566870425827) failed to connect to server localhost/127.0.0.1:20884, error message is:Connection refused: no further information, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20884/com.bittrade.c2c.service.ITLegalCurrencyAccountService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.c2c.service.ITLegalCurrencyAccountService&methods=getByUserIdAndCoinId,removeById,lambdaQuery,removeByMap,getC2CAccount,listByIds,freezeAmount,removeBy,getBy,updateBatchById,getsBy,saveOrUpdate,add,totalConversion,modifyWithSelectiveBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,detail,page,modifyByPK,c2cOut,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,availableBalance,getBaseMapper,c2cIn,removeByIds,get,lambdaUpdate,unFreezeAmount,getAssets,modifyBy,getsByPagination,getCoinByName,listMaps,saveBatch,modifyWithSelectiveByPK,gets,updateById,pageMaps,listByMap,getByPK&pid=3232&register.ip=192.168.1.12&side=consumer&timestamp=1566870425827) failed to connect to server localhost/127.0.0.1:20884, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:89)
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.<init>(NettyClient.java:59)
	at com.alibaba.dubbo.remoting.transport.netty.NettyTransporter.connect(NettyTransporter.java:37)
	at com.alibaba.dubbo.remoting.Transporter$Adaptive.connect(Transporter$Adaptive.java)
	at com.alibaba.dubbo.remoting.Transporters.connect(Transporters.java:75)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchanger.connect(HeaderExchanger.java:39)
	at com.alibaba.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:109)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.initClient(DubboProtocol.java:409)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getSharedClient(DubboProtocol.java:377)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getClients(DubboProtocol.java:354)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.refer(DubboProtocol.java:336)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:67)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:65)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:108)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:394)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:333)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:163)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:66)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceFieldElement.inject(ReferenceAnnotationBeanPostProcessor.java:367)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.postProcessPropertyValues(ReferenceAnnotationBeanPostProcessor.java:92)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1135)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1062)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:581)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:370)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:759)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:548)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:386)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at com.core.framework.BaseApplication.run(BaseApplication.java:64)
	at com.core.framework.BaseApplication.run(BaseApplication.java:74)
	at com.bittrade.currency.CurrencyApplication.main(CurrencyApplication.java:18)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-08-27 09:47:07.554] [WARN ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'fundsController': Unsatisfied dependency expressed through field 'walletService'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'TWalletServiceImpl': Injection of @Reference dependencies failed; nested exception is java.lang.IllegalStateException: No such any registry to reference com.wallet.biz.api.service.IWWalletAccountService on the consumer 192.168.1.12 use dubbo version 2.6.2, please config <dubbo:registry address="..." /> to your spring config.
[2019-08-27 09:47:07.559] [WARN ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Destroy method 'close' on bean with name 'eurekaRegistration' threw an exception: org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
[2019-08-27 09:47:07.562] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Shutting down ExecutorService
[2019-08-27 09:47:07.564] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:1948)] : {dataSource-1} closing ...
[2019-08-27 09:47:07.569] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:2020)] : {dataSource-1} closed
[2019-08-27 09:47:09.329] [WARN ] - [DubboClientReconnectTimer-thread-1][ com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:171)] :  [DUBBO] client reconnect to localhost:20884 find error . url: dubbo://localhost:20884/com.bittrade.c2c.service.ITLegalCurrencyAccountService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.c2c.service.ITLegalCurrencyAccountService&methods=getByUserIdAndCoinId,removeById,lambdaQuery,removeByMap,getC2CAccount,listByIds,freezeAmount,removeBy,getBy,updateBatchById,getsBy,saveOrUpdate,add,totalConversion,modifyWithSelectiveBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,detail,page,modifyByPK,c2cOut,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,availableBalance,getBaseMapper,c2cIn,removeByIds,get,lambdaUpdate,unFreezeAmount,getAssets,modifyBy,getsByPagination,getCoinByName,listMaps,saveBatch,modifyWithSelectiveByPK,gets,updateById,pageMaps,listByMap,getByPK&pid=3232&register.ip=192.168.1.12&side=consumer&timestamp=1566870425827, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20884/com.bittrade.c2c.service.ITLegalCurrencyAccountService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.c2c.service.ITLegalCurrencyAccountService&methods=getByUserIdAndCoinId,removeById,lambdaQuery,removeByMap,getC2CAccount,listByIds,freezeAmount,removeBy,getBy,updateBatchById,getsBy,saveOrUpdate,add,totalConversion,modifyWithSelectiveBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,detail,page,modifyByPK,c2cOut,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,availableBalance,getBaseMapper,c2cIn,removeByIds,get,lambdaUpdate,unFreezeAmount,getAssets,modifyBy,getsByPagination,getCoinByName,listMaps,saveBatch,modifyWithSelectiveByPK,gets,updateById,pageMaps,listByMap,getByPK&pid=3232&register.ip=192.168.1.12&side=consumer&timestamp=1566870425827) failed to connect to server localhost/127.0.0.1:20884, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:156)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	... 3 common frames omitted
[2019-08-27 10:02:07.096] [ERROR] - [DubboClientReconnectTimer-thread-2][ com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:166)] :  [DUBBO] client reconnect to localhost:20884 find error . url: dubbo://localhost:20884/com.bittrade.c2c.service.ITLegalCurrencyAccountService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.c2c.service.ITLegalCurrencyAccountService&methods=getByUserIdAndCoinId,removeById,lambdaQuery,removeByMap,getC2CAccount,listByIds,freezeAmount,removeBy,getBy,updateBatchById,getsBy,saveOrUpdate,add,totalConversion,modifyWithSelectiveBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,detail,page,modifyByPK,c2cOut,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,availableBalance,getBaseMapper,c2cIn,removeByIds,get,lambdaUpdate,unFreezeAmount,getAssets,modifyBy,getsByPagination,getCoinByName,listMaps,saveBatch,modifyWithSelectiveByPK,gets,updateById,pageMaps,listByMap,getByPK&pid=3232&register.ip=192.168.1.12&side=consumer&timestamp=1566870425827, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20884/com.bittrade.c2c.service.ITLegalCurrencyAccountService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.c2c.service.ITLegalCurrencyAccountService&methods=getByUserIdAndCoinId,removeById,lambdaQuery,removeByMap,getC2CAccount,listByIds,freezeAmount,removeBy,getBy,updateBatchById,getsBy,saveOrUpdate,add,totalConversion,modifyWithSelectiveBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,detail,page,modifyByPK,c2cOut,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,availableBalance,getBaseMapper,c2cIn,removeByIds,get,lambdaUpdate,unFreezeAmount,getAssets,modifyBy,getsByPagination,getCoinByName,listMaps,saveBatch,modifyWithSelectiveByPK,gets,updateById,pageMaps,listByMap,getByPK&pid=3232&register.ip=192.168.1.12&side=consumer&timestamp=1566870425827) failed to connect to server localhost/127.0.0.1:20884, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:156)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	... 3 common frames omitted
[2019-08-27 10:06:46.126] [INFO ] - [main][?#?:?] : using logger: com.alibaba.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[2019-08-27 10:06:46.134] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-27 10:06:46.138] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {}
[2019-08-27 10:06:46.403] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@35aea049: startup date [Tue Aug 27 10:06:46 CST 2019]; root of context hierarchy
[2019-08-27 10:06:46.820] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-27 10:06:46.885] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$965bf9e0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:06:47.059] [INFO ] - [pool-1-thread-1][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$1.run(AwaitingNonWebApplicationListener.java:61)] :  [Dubbo] Current Spring Boot Application is await...
[2019-08-27 10:06:47.386] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-27 10:06:47.387] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {dubbo.application.id=service-consumer, dubbo.application.name=service-consumer, dubbo.consumer.check=false, dubbo.consumer.timeout=5000, dubbo.monitor=, dubbo.protocol.id=dubbo, dubbo.protocol.name=dubbo, dubbo.protocol.port=20881, dubbo.provider.timeout=5000, dubbo.registry.address=N/A, dubbo.registry.check=false, dubbo.registry.id=my-registry, dubbo.registry.protocol=zookeeper, dubbo.scan=}
[2019-08-27 10:06:47.427] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : The following profiles are active: common,data,eureka,dubbo_provider,dubbo_consumer
[2019-08-27 10:06:47.467] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4c5474f5: startup date [Tue Aug 27 10:06:47 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@35aea049
[2019-08-27 10:06:48.972] [WARN ] - [main][ org.mybatis.logging.Logger.warn(Logger.java:44)] : No MyBatis mapper was found in '[com.baomidou.cloud.service.*.mapper*]' package. Please check your configuration.
[2019-08-27 10:06:49.699] [INFO ] - [main][ org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:172)] : Multiple Spring Data modules found, entering strict repository configuration mode!
[2019-08-27 10:06:50.725] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : BeanFactory id=e8f2fddb-58e9-30e9-b1e2-7f4caf085d89
[2019-08-27 10:06:50.769] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-27 10:06:51.074] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:06:51.090] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'transactionProperties' of type [com.core.framework.props.TransactionProperties$$EnhancerBySpringCGLIB$$8b8ab989] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:06:51.105] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$93edec55] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:06:51.109] [INFO ] - [main][ com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource(DruidDataSourceAutoConfigure.java:56)] : Init DruidDataSource
[2019-08-27 10:06:51.218] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:06:51.345] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003)] : {dataSource-1} inited
[2019-08-27 10:06:51.346] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:06:51.373] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:06:51.383] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$$EnhancerBySpringCGLIB$$eb5f1ed] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:06:51.399] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:06:51.405] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:06:51.412] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration$$EnhancerBySpringCGLIB$$27428f52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:06:51.451] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:06:51.452] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'transactionConfig' of type [com.core.framework.config.TransactionConfig$$EnhancerBySpringCGLIB$$8046742e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:06:51.478] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'defaultPointcutAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:06:51.496] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7a41f6e3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:06:51.792] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' of type [com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration$$EnhancerBySpringCGLIB$$89439c55] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:06:51.806] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:06:51.815] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:06:51.819] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:06:51.823] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:06:51.826] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:06:51.878] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$965bf9e0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:06:52.428] [INFO ] - [main][ org.xnio.Xnio.<clinit>(Xnio.java:104)] : XNIO version 3.3.8.Final
[2019-08-27 10:06:52.457] [INFO ] - [main][ org.xnio.nio.NioXnio.<clinit>(NioXnio.java:55)] : XNIO NIO Implementation Version 3.3.8.Final
[2019-08-27 10:06:52.543] [WARN ] - [main][ io.undertow.websockets.jsr.Bootstrap.handleDeployment(Bootstrap.java:67)] : UT026009: XNIO worker was not set on WebSocketDeploymentInfo, the default worker will be used
[2019-08-27 10:06:52.543] [WARN ] - [main][ io.undertow.websockets.jsr.Bootstrap.handleDeployment(Bootstrap.java:76)] : UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
[2019-08-27 10:06:52.590] [INFO ] - [main][ io.undertow.servlet.spec.ServletContextImpl.log(ServletContextImpl.java:360)] : Initializing Spring embedded WebApplicationContext
[2019-08-27 10:06:52.590] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Root WebApplicationContext: initialization completed in 5123 ms
[2019-08-27 10:06:52.919] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-27 10:06:52.920] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-27 10:06:52.947] [INFO ] - [main][ com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281)] : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@147e0734
[2019-08-27 10:06:53.567] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Initializing ExecutorService
[2019-08-27 10:06:54.696] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'characterEncodingFilter' to: [/*]
[2019-08-27 10:06:54.698] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'webMvcMetricsFilter' to: [/*]
[2019-08-27 10:06:54.699] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'springSecurityFilterChain' to: [/*]
[2019-08-27 10:06:54.699] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'httpTraceFilter' to: [/*]
[2019-08-27 10:06:54.700] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Servlet dispatcherServlet mapped to [/]
[2019-08-27 10:06:57.901] [INFO ] - [main][ com.core.framework.config.redis.JedisClusterConfig.getJedisCluster(JedisClusterConfig.java:35)] : 进入redis集群初始化方法：访问集群地址为：[154.222.138.5:7000, 154.222.138.5:7001, 154.222.138.5:7002, 154.222.138.5:7003, 154.222.138.5:7004, 154.222.138.5:7005]
[2019-08-27 10:06:58.487] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.c2c.service.ITLegalCurrencyAccountServicedubbo://localhost:20884 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-27 10:07:00.047] [WARN ] - [main][ com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:98)] :  [DUBBO] Failed to start NettyClient HAHE/192.168.1.12 connect to the server localhost/127.0.0.1:20884 (check == false, ignore and retry later!), cause: client(url: dubbo://localhost:20884/com.bittrade.c2c.service.ITLegalCurrencyAccountService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.c2c.service.ITLegalCurrencyAccountService&methods=getByUserIdAndCoinId,removeById,lambdaQuery,removeByMap,getC2CAccount,listByIds,freezeAmount,removeBy,getBy,updateBatchById,getsBy,saveOrUpdate,add,totalConversion,modifyWithSelectiveBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,detail,page,modifyByPK,c2cOut,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,availableBalance,getBaseMapper,c2cIn,removeByIds,get,lambdaUpdate,unFreezeAmount,getAssets,modifyBy,getsByPagination,getCoinByName,listMaps,saveBatch,modifyWithSelectiveByPK,gets,updateById,pageMaps,listByMap,getByPK&pid=4800&register.ip=192.168.1.12&side=consumer&timestamp=1566871618488) failed to connect to server localhost/127.0.0.1:20884, error message is:Connection refused: no further information, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20884/com.bittrade.c2c.service.ITLegalCurrencyAccountService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.c2c.service.ITLegalCurrencyAccountService&methods=getByUserIdAndCoinId,removeById,lambdaQuery,removeByMap,getC2CAccount,listByIds,freezeAmount,removeBy,getBy,updateBatchById,getsBy,saveOrUpdate,add,totalConversion,modifyWithSelectiveBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,detail,page,modifyByPK,c2cOut,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,availableBalance,getBaseMapper,c2cIn,removeByIds,get,lambdaUpdate,unFreezeAmount,getAssets,modifyBy,getsByPagination,getCoinByName,listMaps,saveBatch,modifyWithSelectiveByPK,gets,updateById,pageMaps,listByMap,getByPK&pid=4800&register.ip=192.168.1.12&side=consumer&timestamp=1566871618488) failed to connect to server localhost/127.0.0.1:20884, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:89)
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.<init>(NettyClient.java:59)
	at com.alibaba.dubbo.remoting.transport.netty.NettyTransporter.connect(NettyTransporter.java:37)
	at com.alibaba.dubbo.remoting.Transporter$Adaptive.connect(Transporter$Adaptive.java)
	at com.alibaba.dubbo.remoting.Transporters.connect(Transporters.java:75)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchanger.connect(HeaderExchanger.java:39)
	at com.alibaba.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:109)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.initClient(DubboProtocol.java:409)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getSharedClient(DubboProtocol.java:377)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getClients(DubboProtocol.java:354)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.refer(DubboProtocol.java:336)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:67)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:108)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:65)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:394)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:333)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:163)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:66)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceFieldElement.inject(ReferenceAnnotationBeanPostProcessor.java:367)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.postProcessPropertyValues(ReferenceAnnotationBeanPostProcessor.java:92)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1135)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1062)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:581)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:370)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:759)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:548)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:386)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at com.core.framework.BaseApplication.run(BaseApplication.java:64)
	at com.core.framework.BaseApplication.run(BaseApplication.java:74)
	at com.bittrade.currency.CurrencyApplication.main(CurrencyApplication.java:18)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-08-27 10:07:00.256] [WARN ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'fundsController': Unsatisfied dependency expressed through field 'walletService'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'TWalletServiceImpl': Injection of @Reference dependencies failed; nested exception is java.lang.IllegalStateException: No such any registry to reference com.wallet.biz.api.service.IWWalletAccountService on the consumer 192.168.1.12 use dubbo version 2.6.2, please config <dubbo:registry address="..." /> to your spring config.
[2019-08-27 10:07:00.263] [WARN ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Destroy method 'close' on bean with name 'eurekaRegistration' threw an exception: org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
[2019-08-27 10:07:00.266] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Shutting down ExecutorService
[2019-08-27 10:07:00.268] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:1948)] : {dataSource-1} closing ...
[2019-08-27 10:07:00.273] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:2020)] : {dataSource-1} closed
[2019-08-27 10:07:02.009] [WARN ] - [DubboClientReconnectTimer-thread-1][ com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:171)] :  [DUBBO] client reconnect to localhost:20884 find error . url: dubbo://localhost:20884/com.bittrade.c2c.service.ITLegalCurrencyAccountService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.c2c.service.ITLegalCurrencyAccountService&methods=getByUserIdAndCoinId,removeById,lambdaQuery,removeByMap,getC2CAccount,listByIds,freezeAmount,removeBy,getBy,updateBatchById,getsBy,saveOrUpdate,add,totalConversion,modifyWithSelectiveBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,detail,page,modifyByPK,c2cOut,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,availableBalance,getBaseMapper,c2cIn,removeByIds,get,lambdaUpdate,unFreezeAmount,getAssets,modifyBy,getsByPagination,getCoinByName,listMaps,saveBatch,modifyWithSelectiveByPK,gets,updateById,pageMaps,listByMap,getByPK&pid=4800&register.ip=192.168.1.12&side=consumer&timestamp=1566871618488, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20884/com.bittrade.c2c.service.ITLegalCurrencyAccountService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.c2c.service.ITLegalCurrencyAccountService&methods=getByUserIdAndCoinId,removeById,lambdaQuery,removeByMap,getC2CAccount,listByIds,freezeAmount,removeBy,getBy,updateBatchById,getsBy,saveOrUpdate,add,totalConversion,modifyWithSelectiveBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,detail,page,modifyByPK,c2cOut,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,availableBalance,getBaseMapper,c2cIn,removeByIds,get,lambdaUpdate,unFreezeAmount,getAssets,modifyBy,getsByPagination,getCoinByName,listMaps,saveBatch,modifyWithSelectiveByPK,gets,updateById,pageMaps,listByMap,getByPK&pid=4800&register.ip=192.168.1.12&side=consumer&timestamp=1566871618488) failed to connect to server localhost/127.0.0.1:20884, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:156)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	... 3 common frames omitted
[2019-08-27 10:07:41.755] [INFO ] - [main][?#?:?] : using logger: com.alibaba.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[2019-08-27 10:07:41.762] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-27 10:07:41.767] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {}
[2019-08-27 10:07:42.037] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@66f57048: startup date [Tue Aug 27 10:07:42 CST 2019]; root of context hierarchy
[2019-08-27 10:07:42.472] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-27 10:07:42.543] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1bfb0f34] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:07:42.720] [INFO ] - [pool-1-thread-1][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$1.run(AwaitingNonWebApplicationListener.java:61)] :  [Dubbo] Current Spring Boot Application is await...
[2019-08-27 10:07:43.054] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-27 10:07:43.056] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {dubbo.application.id=service-consumer, dubbo.application.name=service-consumer, dubbo.consumer.check=false, dubbo.consumer.timeout=5000, dubbo.monitor=, dubbo.protocol.id=dubbo, dubbo.protocol.name=dubbo, dubbo.protocol.port=20881, dubbo.provider.timeout=5000, dubbo.registry.address=N/A, dubbo.registry.check=false, dubbo.registry.id=my-registry, dubbo.registry.protocol=zookeeper, dubbo.scan=}
[2019-08-27 10:07:43.097] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : The following profiles are active: common,data,eureka,dubbo_provider,dubbo_consumer
[2019-08-27 10:07:43.141] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@c5ee75e: startup date [Tue Aug 27 10:07:43 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@66f57048
[2019-08-27 10:07:44.634] [WARN ] - [main][ org.mybatis.logging.Logger.warn(Logger.java:44)] : No MyBatis mapper was found in '[com.baomidou.cloud.service.*.mapper*]' package. Please check your configuration.
[2019-08-27 10:07:45.333] [INFO ] - [main][ org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:172)] : Multiple Spring Data modules found, entering strict repository configuration mode!
[2019-08-27 10:07:46.362] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : BeanFactory id=e8f2fddb-58e9-30e9-b1e2-7f4caf085d89
[2019-08-27 10:07:46.405] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-27 10:07:46.687] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:07:46.700] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'transactionProperties' of type [com.core.framework.props.TransactionProperties$$EnhancerBySpringCGLIB$$1129cedd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:07:46.715] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$198d01a9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:07:46.720] [INFO ] - [main][ com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource(DruidDataSourceAutoConfigure.java:56)] : Init DruidDataSource
[2019-08-27 10:07:46.842] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:07:46.973] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003)] : {dataSource-1} inited
[2019-08-27 10:07:46.974] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:07:47.000] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:07:47.010] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$$EnhancerBySpringCGLIB$$94550741] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:07:47.027] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:07:47.033] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:07:47.044] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration$$EnhancerBySpringCGLIB$$ace1a4a6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:07:47.083] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:07:47.084] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'transactionConfig' of type [com.core.framework.config.TransactionConfig$$EnhancerBySpringCGLIB$$5e58982] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:07:47.111] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'defaultPointcutAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:07:47.131] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ffe10c37] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:07:47.438] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' of type [com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration$$EnhancerBySpringCGLIB$$ee2b1a9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:07:47.452] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:07:47.461] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:07:47.465] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:07:47.469] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:07:47.472] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:07:47.524] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1bfb0f34] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:07:48.107] [INFO ] - [main][ org.xnio.Xnio.<clinit>(Xnio.java:104)] : XNIO version 3.3.8.Final
[2019-08-27 10:07:48.143] [INFO ] - [main][ org.xnio.nio.NioXnio.<clinit>(NioXnio.java:55)] : XNIO NIO Implementation Version 3.3.8.Final
[2019-08-27 10:07:48.232] [WARN ] - [main][ io.undertow.websockets.jsr.Bootstrap.handleDeployment(Bootstrap.java:67)] : UT026009: XNIO worker was not set on WebSocketDeploymentInfo, the default worker will be used
[2019-08-27 10:07:48.232] [WARN ] - [main][ io.undertow.websockets.jsr.Bootstrap.handleDeployment(Bootstrap.java:76)] : UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
[2019-08-27 10:07:48.276] [INFO ] - [main][ io.undertow.servlet.spec.ServletContextImpl.log(ServletContextImpl.java:360)] : Initializing Spring embedded WebApplicationContext
[2019-08-27 10:07:48.276] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Root WebApplicationContext: initialization completed in 5136 ms
[2019-08-27 10:07:48.576] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-27 10:07:48.577] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-27 10:07:48.604] [INFO ] - [main][ com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281)] : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@9281d19
[2019-08-27 10:07:49.217] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Initializing ExecutorService
[2019-08-27 10:07:50.290] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'characterEncodingFilter' to: [/*]
[2019-08-27 10:07:50.291] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'webMvcMetricsFilter' to: [/*]
[2019-08-27 10:07:50.292] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'springSecurityFilterChain' to: [/*]
[2019-08-27 10:07:50.293] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'httpTraceFilter' to: [/*]
[2019-08-27 10:07:50.293] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Servlet dispatcherServlet mapped to [/]
[2019-08-27 10:07:53.123] [WARN ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'fundsController': Unsatisfied dependency expressed through field 'walletService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'TWalletServiceImpl': Unsatisfied dependency expressed through field 'baseMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'ITWalletDAO' defined in file [D:\work\git\git\projects\bit_trade\bittrade\bittrade-currency\target\classes\com\bittrade\currency\dao\ITWalletDAO.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\work\git\git\projects\bit_trade\bittrade\bittrade-currency\target\classes\SQL\ITAccountManageDAO.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 27; columnNumber: 10; The content of element type "mapper" must match "(cache-ref|cache|resultMap*|parameterMap*|sql*|insert*|update*|delete*|select*)+".
[2019-08-27 10:07:53.126] [WARN ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Destroy method 'close' on bean with name 'eurekaRegistration' threw an exception: org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
[2019-08-27 10:07:53.129] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Shutting down ExecutorService
[2019-08-27 10:07:53.131] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:1948)] : {dataSource-1} closing ...
[2019-08-27 10:07:53.141] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:2020)] : {dataSource-1} closed
[2019-08-27 10:08:21.672] [INFO ] - [main][?#?:?] : using logger: com.alibaba.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[2019-08-27 10:08:21.679] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-27 10:08:21.684] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {}
[2019-08-27 10:08:21.952] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7c24b813: startup date [Tue Aug 27 10:08:21 CST 2019]; root of context hierarchy
[2019-08-27 10:08:22.350] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-27 10:08:22.419] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$12769a82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:08:22.597] [INFO ] - [pool-1-thread-1][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$1.run(AwaitingNonWebApplicationListener.java:61)] :  [Dubbo] Current Spring Boot Application is await...
[2019-08-27 10:08:22.931] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-27 10:08:22.932] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {dubbo.application.id=service-consumer, dubbo.application.name=service-consumer, dubbo.consumer.check=false, dubbo.consumer.timeout=5000, dubbo.monitor=, dubbo.protocol.id=dubbo, dubbo.protocol.name=dubbo, dubbo.protocol.port=20881, dubbo.provider.timeout=5000, dubbo.registry.address=N/A, dubbo.registry.check=false, dubbo.registry.id=my-registry, dubbo.registry.protocol=zookeeper, dubbo.scan=}
[2019-08-27 10:08:22.973] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : The following profiles are active: common,data,eureka,dubbo_provider,dubbo_consumer
[2019-08-27 10:08:23.013] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@aafcffa: startup date [Tue Aug 27 10:08:23 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7c24b813
[2019-08-27 10:08:24.523] [WARN ] - [main][ org.mybatis.logging.Logger.warn(Logger.java:44)] : No MyBatis mapper was found in '[com.baomidou.cloud.service.*.mapper*]' package. Please check your configuration.
[2019-08-27 10:08:25.222] [INFO ] - [main][ org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:172)] : Multiple Spring Data modules found, entering strict repository configuration mode!
[2019-08-27 10:08:26.250] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : BeanFactory id=e8f2fddb-58e9-30e9-b1e2-7f4caf085d89
[2019-08-27 10:08:26.293] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-27 10:08:26.572] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:08:26.585] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'transactionProperties' of type [com.core.framework.props.TransactionProperties$$EnhancerBySpringCGLIB$$7a55a2b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:08:26.598] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$10088cf7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:08:26.602] [INFO ] - [main][ com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource(DruidDataSourceAutoConfigure.java:56)] : Init DruidDataSource
[2019-08-27 10:08:26.709] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:08:26.837] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003)] : {dataSource-1} inited
[2019-08-27 10:08:26.838] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:08:26.870] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:08:26.882] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$$EnhancerBySpringCGLIB$$8ad0928f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:08:26.899] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:08:26.905] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:08:26.913] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration$$EnhancerBySpringCGLIB$$a35d2ff4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:08:26.949] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:08:26.950] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'transactionConfig' of type [com.core.framework.config.TransactionConfig$$EnhancerBySpringCGLIB$$fc6114d0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:08:26.976] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'defaultPointcutAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:08:26.994] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f65c9785] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:08:27.300] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' of type [com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration$$EnhancerBySpringCGLIB$$55e3cf7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:08:27.317] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:08:27.326] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:08:27.330] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:08:27.334] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:08:27.338] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:08:27.395] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$12769a82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:08:27.973] [INFO ] - [main][ org.xnio.Xnio.<clinit>(Xnio.java:104)] : XNIO version 3.3.8.Final
[2019-08-27 10:08:28.002] [INFO ] - [main][ org.xnio.nio.NioXnio.<clinit>(NioXnio.java:55)] : XNIO NIO Implementation Version 3.3.8.Final
[2019-08-27 10:08:28.076] [WARN ] - [main][ io.undertow.websockets.jsr.Bootstrap.handleDeployment(Bootstrap.java:67)] : UT026009: XNIO worker was not set on WebSocketDeploymentInfo, the default worker will be used
[2019-08-27 10:08:28.077] [WARN ] - [main][ io.undertow.websockets.jsr.Bootstrap.handleDeployment(Bootstrap.java:76)] : UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
[2019-08-27 10:08:28.127] [INFO ] - [main][ io.undertow.servlet.spec.ServletContextImpl.log(ServletContextImpl.java:360)] : Initializing Spring embedded WebApplicationContext
[2019-08-27 10:08:28.127] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Root WebApplicationContext: initialization completed in 5114 ms
[2019-08-27 10:08:28.462] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-27 10:08:28.463] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-27 10:08:28.490] [INFO ] - [main][ com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281)] : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@587f4f63
[2019-08-27 10:08:29.088] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Initializing ExecutorService
[2019-08-27 10:08:30.281] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'characterEncodingFilter' to: [/*]
[2019-08-27 10:08:30.283] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'webMvcMetricsFilter' to: [/*]
[2019-08-27 10:08:30.284] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'springSecurityFilterChain' to: [/*]
[2019-08-27 10:08:30.285] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'httpTraceFilter' to: [/*]
[2019-08-27 10:08:30.285] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Servlet dispatcherServlet mapped to [/]
[2019-08-27 10:08:33.247] [WARN ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'fundsController': Unsatisfied dependency expressed through field 'walletService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'TWalletServiceImpl': Unsatisfied dependency expressed through field 'baseMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'ITWalletDAO' defined in file [D:\work\git\git\projects\bit_trade\bittrade\bittrade-currency\target\classes\com\bittrade\currency\dao\ITWalletDAO.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\work\git\git\projects\bit_trade\bittrade\bittrade-currency\target\classes\SQL\ITAccountManageDAO.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 27; columnNumber: 10; The content of element type "mapper" must match "(cache-ref|cache|resultMap*|parameterMap*|sql*|insert*|update*|delete*|select*)+".
[2019-08-27 10:08:33.250] [WARN ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Destroy method 'close' on bean with name 'eurekaRegistration' threw an exception: org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
[2019-08-27 10:08:33.252] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Shutting down ExecutorService
[2019-08-27 10:08:33.254] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:1948)] : {dataSource-1} closing ...
[2019-08-27 10:08:33.259] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:2020)] : {dataSource-1} closed
[2019-08-27 10:09:12.366] [INFO ] - [main][?#?:?] : using logger: com.alibaba.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[2019-08-27 10:09:12.374] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-27 10:09:12.379] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {}
[2019-08-27 10:09:12.638] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4f2b503c: startup date [Tue Aug 27 10:09:12 CST 2019]; root of context hierarchy
[2019-08-27 10:09:13.027] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-27 10:09:13.092] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$34688f11] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:09:13.263] [INFO ] - [pool-1-thread-1][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$1.run(AwaitingNonWebApplicationListener.java:61)] :  [Dubbo] Current Spring Boot Application is await...
[2019-08-27 10:09:13.599] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-27 10:09:13.600] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {dubbo.application.id=service-consumer, dubbo.application.name=service-consumer, dubbo.consumer.check=false, dubbo.consumer.timeout=5000, dubbo.monitor=, dubbo.protocol.id=dubbo, dubbo.protocol.name=dubbo, dubbo.protocol.port=20881, dubbo.provider.timeout=5000, dubbo.registry.address=N/A, dubbo.registry.check=false, dubbo.registry.id=my-registry, dubbo.registry.protocol=zookeeper, dubbo.scan=}
[2019-08-27 10:09:13.645] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : The following profiles are active: common,data,eureka,dubbo_provider,dubbo_consumer
[2019-08-27 10:09:13.687] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@52d239ba: startup date [Tue Aug 27 10:09:13 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4f2b503c
[2019-08-27 10:09:15.207] [WARN ] - [main][ org.mybatis.logging.Logger.warn(Logger.java:44)] : No MyBatis mapper was found in '[com.baomidou.cloud.service.*.mapper*]' package. Please check your configuration.
[2019-08-27 10:09:15.921] [INFO ] - [main][ org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:172)] : Multiple Spring Data modules found, entering strict repository configuration mode!
[2019-08-27 10:09:16.895] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : BeanFactory id=e8f2fddb-58e9-30e9-b1e2-7f4caf085d89
[2019-08-27 10:09:16.934] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-27 10:09:17.206] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:09:17.218] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'transactionProperties' of type [com.core.framework.props.TransactionProperties$$EnhancerBySpringCGLIB$$29974eba] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:09:17.232] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$31fa8186] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:09:17.236] [INFO ] - [main][ com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource(DruidDataSourceAutoConfigure.java:56)] : Init DruidDataSource
[2019-08-27 10:09:17.340] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:09:17.463] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003)] : {dataSource-1} inited
[2019-08-27 10:09:17.464] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:09:17.492] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:09:17.502] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$$EnhancerBySpringCGLIB$$acc2871e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:09:17.519] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:09:17.526] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:09:17.533] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration$$EnhancerBySpringCGLIB$$c54f2483] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:09:17.570] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:09:17.571] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'transactionConfig' of type [com.core.framework.config.TransactionConfig$$EnhancerBySpringCGLIB$$1e53095f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:09:17.596] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'defaultPointcutAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:09:17.614] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$184e8c14] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:09:17.907] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' of type [com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration$$EnhancerBySpringCGLIB$$27503186] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:09:17.921] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:09:17.930] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:09:17.935] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:09:17.939] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:09:17.943] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:09:17.997] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$34688f11] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:09:18.542] [INFO ] - [main][ org.xnio.Xnio.<clinit>(Xnio.java:104)] : XNIO version 3.3.8.Final
[2019-08-27 10:09:18.571] [INFO ] - [main][ org.xnio.nio.NioXnio.<clinit>(NioXnio.java:55)] : XNIO NIO Implementation Version 3.3.8.Final
[2019-08-27 10:09:18.644] [WARN ] - [main][ io.undertow.websockets.jsr.Bootstrap.handleDeployment(Bootstrap.java:67)] : UT026009: XNIO worker was not set on WebSocketDeploymentInfo, the default worker will be used
[2019-08-27 10:09:18.644] [WARN ] - [main][ io.undertow.websockets.jsr.Bootstrap.handleDeployment(Bootstrap.java:76)] : UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
[2019-08-27 10:09:18.693] [INFO ] - [main][ io.undertow.servlet.spec.ServletContextImpl.log(ServletContextImpl.java:360)] : Initializing Spring embedded WebApplicationContext
[2019-08-27 10:09:18.693] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Root WebApplicationContext: initialization completed in 5007 ms
[2019-08-27 10:09:19.013] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-27 10:09:19.013] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-27 10:09:19.039] [INFO ] - [main][ com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281)] : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@661e279d
[2019-08-27 10:09:19.655] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Initializing ExecutorService
[2019-08-27 10:09:20.751] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'characterEncodingFilter' to: [/*]
[2019-08-27 10:09:20.753] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'webMvcMetricsFilter' to: [/*]
[2019-08-27 10:09:20.753] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'springSecurityFilterChain' to: [/*]
[2019-08-27 10:09:20.754] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'httpTraceFilter' to: [/*]
[2019-08-27 10:09:20.754] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Servlet dispatcherServlet mapped to [/]
[2019-08-27 10:09:23.882] [INFO ] - [main][ com.core.framework.config.redis.JedisClusterConfig.getJedisCluster(JedisClusterConfig.java:35)] : 进入redis集群初始化方法：访问集群地址为：[154.222.138.5:7000, 154.222.138.5:7001, 154.222.138.5:7002, 154.222.138.5:7003, 154.222.138.5:7004, 154.222.138.5:7005]
[2019-08-27 10:09:24.445] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.c2c.service.ITLegalCurrencyAccountServicedubbo://localhost:20884 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-27 10:09:25.993] [WARN ] - [main][ com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:98)] :  [DUBBO] Failed to start NettyClient HAHE/192.168.1.12 connect to the server localhost/127.0.0.1:20884 (check == false, ignore and retry later!), cause: client(url: dubbo://localhost:20884/com.bittrade.c2c.service.ITLegalCurrencyAccountService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.c2c.service.ITLegalCurrencyAccountService&methods=getByUserIdAndCoinId,removeById,lambdaQuery,removeByMap,getC2CAccount,listByIds,freezeAmount,removeBy,getBy,updateBatchById,getsBy,saveOrUpdate,add,totalConversion,modifyWithSelectiveBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,detail,page,modifyByPK,c2cOut,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,availableBalance,getBaseMapper,c2cIn,removeByIds,get,lambdaUpdate,unFreezeAmount,getAssets,modifyBy,getsByPagination,getCoinByName,listMaps,saveBatch,modifyWithSelectiveByPK,gets,updateById,pageMaps,listByMap,getByPK&pid=448&register.ip=192.168.1.12&side=consumer&timestamp=1566871764446) failed to connect to server localhost/127.0.0.1:20884, error message is:Connection refused: no further information, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20884/com.bittrade.c2c.service.ITLegalCurrencyAccountService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.c2c.service.ITLegalCurrencyAccountService&methods=getByUserIdAndCoinId,removeById,lambdaQuery,removeByMap,getC2CAccount,listByIds,freezeAmount,removeBy,getBy,updateBatchById,getsBy,saveOrUpdate,add,totalConversion,modifyWithSelectiveBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,detail,page,modifyByPK,c2cOut,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,availableBalance,getBaseMapper,c2cIn,removeByIds,get,lambdaUpdate,unFreezeAmount,getAssets,modifyBy,getsByPagination,getCoinByName,listMaps,saveBatch,modifyWithSelectiveByPK,gets,updateById,pageMaps,listByMap,getByPK&pid=448&register.ip=192.168.1.12&side=consumer&timestamp=1566871764446) failed to connect to server localhost/127.0.0.1:20884, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:89)
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.<init>(NettyClient.java:59)
	at com.alibaba.dubbo.remoting.transport.netty.NettyTransporter.connect(NettyTransporter.java:37)
	at com.alibaba.dubbo.remoting.Transporter$Adaptive.connect(Transporter$Adaptive.java)
	at com.alibaba.dubbo.remoting.Transporters.connect(Transporters.java:75)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchanger.connect(HeaderExchanger.java:39)
	at com.alibaba.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:109)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.initClient(DubboProtocol.java:409)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getSharedClient(DubboProtocol.java:377)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getClients(DubboProtocol.java:354)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.refer(DubboProtocol.java:336)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:65)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:108)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:67)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:394)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:333)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:163)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:66)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceFieldElement.inject(ReferenceAnnotationBeanPostProcessor.java:367)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.postProcessPropertyValues(ReferenceAnnotationBeanPostProcessor.java:92)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1135)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1062)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:581)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:370)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:759)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:548)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:386)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at com.core.framework.BaseApplication.run(BaseApplication.java:64)
	at com.core.framework.BaseApplication.run(BaseApplication.java:74)
	at com.bittrade.currency.CurrencyApplication.main(CurrencyApplication.java:18)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-08-27 10:09:26.188] [WARN ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'fundsController': Unsatisfied dependency expressed through field 'walletService'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'TWalletServiceImpl': Injection of @Reference dependencies failed; nested exception is java.lang.IllegalStateException: No such any registry to reference com.wallet.biz.api.service.IWWalletAccountService on the consumer 192.168.1.12 use dubbo version 2.6.2, please config <dubbo:registry address="..." /> to your spring config.
[2019-08-27 10:09:26.193] [WARN ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Destroy method 'close' on bean with name 'eurekaRegistration' threw an exception: org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
[2019-08-27 10:09:26.196] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Shutting down ExecutorService
[2019-08-27 10:09:26.198] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:1948)] : {dataSource-1} closing ...
[2019-08-27 10:09:26.203] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:2020)] : {dataSource-1} closed
[2019-08-27 10:09:27.953] [WARN ] - [DubboClientReconnectTimer-thread-1][ com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:171)] :  [DUBBO] client reconnect to localhost:20884 find error . url: dubbo://localhost:20884/com.bittrade.c2c.service.ITLegalCurrencyAccountService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.c2c.service.ITLegalCurrencyAccountService&methods=getByUserIdAndCoinId,removeById,lambdaQuery,removeByMap,getC2CAccount,listByIds,freezeAmount,removeBy,getBy,updateBatchById,getsBy,saveOrUpdate,add,totalConversion,modifyWithSelectiveBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,detail,page,modifyByPK,c2cOut,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,availableBalance,getBaseMapper,c2cIn,removeByIds,get,lambdaUpdate,unFreezeAmount,getAssets,modifyBy,getsByPagination,getCoinByName,listMaps,saveBatch,modifyWithSelectiveByPK,gets,updateById,pageMaps,listByMap,getByPK&pid=448&register.ip=192.168.1.12&side=consumer&timestamp=1566871764446, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20884/com.bittrade.c2c.service.ITLegalCurrencyAccountService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.c2c.service.ITLegalCurrencyAccountService&methods=getByUserIdAndCoinId,removeById,lambdaQuery,removeByMap,getC2CAccount,listByIds,freezeAmount,removeBy,getBy,updateBatchById,getsBy,saveOrUpdate,add,totalConversion,modifyWithSelectiveBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,detail,page,modifyByPK,c2cOut,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,availableBalance,getBaseMapper,c2cIn,removeByIds,get,lambdaUpdate,unFreezeAmount,getAssets,modifyBy,getsByPagination,getCoinByName,listMaps,saveBatch,modifyWithSelectiveByPK,gets,updateById,pageMaps,listByMap,getByPK&pid=448&register.ip=192.168.1.12&side=consumer&timestamp=1566871764446) failed to connect to server localhost/127.0.0.1:20884, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:156)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	... 3 common frames omitted
[2019-08-27 10:11:51.079] [INFO ] - [main][?#?:?] : using logger: com.alibaba.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[2019-08-27 10:11:51.087] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-27 10:11:51.092] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {}
[2019-08-27 10:11:51.367] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4fb3ee4e: startup date [Tue Aug 27 10:11:51 CST 2019]; root of context hierarchy
[2019-08-27 10:11:51.769] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-27 10:11:51.835] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3cdd02a4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:11:52.011] [INFO ] - [pool-1-thread-1][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$1.run(AwaitingNonWebApplicationListener.java:61)] :  [Dubbo] Current Spring Boot Application is await...
[2019-08-27 10:11:52.360] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-27 10:11:52.362] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {dubbo.application.id=service-consumer, dubbo.application.name=service-consumer, dubbo.consumer.check=false, dubbo.consumer.timeout=5000, dubbo.monitor=, dubbo.protocol.id=dubbo, dubbo.protocol.name=dubbo, dubbo.protocol.port=20881, dubbo.provider.timeout=5000, dubbo.registry.address=N/A, dubbo.registry.check=false, dubbo.registry.id=my-registry, dubbo.registry.protocol=zookeeper, dubbo.scan=}
[2019-08-27 10:11:52.408] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : The following profiles are active: common,data,eureka,dubbo_provider,dubbo_consumer
[2019-08-27 10:11:52.455] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@dfddc9a: startup date [Tue Aug 27 10:11:52 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4fb3ee4e
[2019-08-27 10:11:53.959] [WARN ] - [main][ org.mybatis.logging.Logger.warn(Logger.java:44)] : No MyBatis mapper was found in '[com.baomidou.cloud.service.*.mapper*]' package. Please check your configuration.
[2019-08-27 10:11:54.665] [INFO ] - [main][ org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:172)] : Multiple Spring Data modules found, entering strict repository configuration mode!
[2019-08-27 10:11:55.678] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : BeanFactory id=e8f2fddb-58e9-30e9-b1e2-7f4caf085d89
[2019-08-27 10:11:55.717] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-27 10:11:56.000] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:11:56.014] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'transactionProperties' of type [com.core.framework.props.TransactionProperties$$EnhancerBySpringCGLIB$$320bc24d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:11:56.030] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$3a6ef519] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:11:56.035] [INFO ] - [main][ com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource(DruidDataSourceAutoConfigure.java:56)] : Init DruidDataSource
[2019-08-27 10:11:56.151] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:11:56.282] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003)] : {dataSource-1} inited
[2019-08-27 10:11:56.283] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:11:56.312] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:11:56.323] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$$EnhancerBySpringCGLIB$$b536fab1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:11:56.340] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:11:56.346] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:11:56.354] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration$$EnhancerBySpringCGLIB$$cdc39816] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:11:56.389] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:11:56.389] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'transactionConfig' of type [com.core.framework.config.TransactionConfig$$EnhancerBySpringCGLIB$$26c77cf2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:11:56.414] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'defaultPointcutAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:11:56.432] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$20c2ffa7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:11:56.720] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' of type [com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration$$EnhancerBySpringCGLIB$$2fc4a519] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:11:56.735] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:11:56.744] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:11:56.749] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:11:56.753] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:11:56.756] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:11:56.812] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3cdd02a4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:11:57.381] [INFO ] - [main][ org.xnio.Xnio.<clinit>(Xnio.java:104)] : XNIO version 3.3.8.Final
[2019-08-27 10:11:57.413] [INFO ] - [main][ org.xnio.nio.NioXnio.<clinit>(NioXnio.java:55)] : XNIO NIO Implementation Version 3.3.8.Final
[2019-08-27 10:11:57.504] [WARN ] - [main][ io.undertow.websockets.jsr.Bootstrap.handleDeployment(Bootstrap.java:67)] : UT026009: XNIO worker was not set on WebSocketDeploymentInfo, the default worker will be used
[2019-08-27 10:11:57.505] [WARN ] - [main][ io.undertow.websockets.jsr.Bootstrap.handleDeployment(Bootstrap.java:76)] : UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
[2019-08-27 10:11:57.551] [INFO ] - [main][ io.undertow.servlet.spec.ServletContextImpl.log(ServletContextImpl.java:360)] : Initializing Spring embedded WebApplicationContext
[2019-08-27 10:11:57.551] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Root WebApplicationContext: initialization completed in 5096 ms
[2019-08-27 10:11:57.855] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-27 10:11:57.856] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-27 10:11:57.884] [INFO ] - [main][ com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281)] : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@532dacf5
[2019-08-27 10:11:58.523] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Initializing ExecutorService
[2019-08-27 10:11:59.662] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'characterEncodingFilter' to: [/*]
[2019-08-27 10:11:59.664] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'webMvcMetricsFilter' to: [/*]
[2019-08-27 10:11:59.664] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'springSecurityFilterChain' to: [/*]
[2019-08-27 10:11:59.665] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'httpTraceFilter' to: [/*]
[2019-08-27 10:11:59.665] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Servlet dispatcherServlet mapped to [/]
[2019-08-27 10:12:02.767] [INFO ] - [main][ com.core.framework.config.redis.JedisClusterConfig.getJedisCluster(JedisClusterConfig.java:35)] : 进入redis集群初始化方法：访问集群地址为：[154.222.138.5:7000, 154.222.138.5:7001, 154.222.138.5:7002, 154.222.138.5:7003, 154.222.138.5:7004, 154.222.138.5:7005]
[2019-08-27 10:12:03.334] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.c2c.service.ITLegalCurrencyAccountServicedubbo://localhost:20884 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-27 10:12:04.873] [WARN ] - [main][ com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:98)] :  [DUBBO] Failed to start NettyClient HAHE/192.168.1.12 connect to the server localhost/127.0.0.1:20884 (check == false, ignore and retry later!), cause: client(url: dubbo://localhost:20884/com.bittrade.c2c.service.ITLegalCurrencyAccountService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.c2c.service.ITLegalCurrencyAccountService&methods=getByUserIdAndCoinId,removeById,lambdaQuery,removeByMap,getC2CAccount,listByIds,freezeAmount,removeBy,getBy,updateBatchById,getsBy,saveOrUpdate,add,totalConversion,modifyWithSelectiveBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,detail,page,modifyByPK,c2cOut,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,availableBalance,getBaseMapper,c2cIn,removeByIds,get,lambdaUpdate,unFreezeAmount,getAssets,modifyBy,getsByPagination,getCoinByName,listMaps,saveBatch,modifyWithSelectiveByPK,gets,updateById,pageMaps,listByMap,getByPK&pid=3848&register.ip=192.168.1.12&side=consumer&timestamp=1566871923335) failed to connect to server localhost/127.0.0.1:20884, error message is:Connection refused: no further information, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20884/com.bittrade.c2c.service.ITLegalCurrencyAccountService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.c2c.service.ITLegalCurrencyAccountService&methods=getByUserIdAndCoinId,removeById,lambdaQuery,removeByMap,getC2CAccount,listByIds,freezeAmount,removeBy,getBy,updateBatchById,getsBy,saveOrUpdate,add,totalConversion,modifyWithSelectiveBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,detail,page,modifyByPK,c2cOut,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,availableBalance,getBaseMapper,c2cIn,removeByIds,get,lambdaUpdate,unFreezeAmount,getAssets,modifyBy,getsByPagination,getCoinByName,listMaps,saveBatch,modifyWithSelectiveByPK,gets,updateById,pageMaps,listByMap,getByPK&pid=3848&register.ip=192.168.1.12&side=consumer&timestamp=1566871923335) failed to connect to server localhost/127.0.0.1:20884, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:89)
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.<init>(NettyClient.java:59)
	at com.alibaba.dubbo.remoting.transport.netty.NettyTransporter.connect(NettyTransporter.java:37)
	at com.alibaba.dubbo.remoting.Transporter$Adaptive.connect(Transporter$Adaptive.java)
	at com.alibaba.dubbo.remoting.Transporters.connect(Transporters.java:75)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchanger.connect(HeaderExchanger.java:39)
	at com.alibaba.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:109)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.initClient(DubboProtocol.java:409)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getSharedClient(DubboProtocol.java:377)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getClients(DubboProtocol.java:354)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.refer(DubboProtocol.java:336)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:108)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:65)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:67)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:394)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:333)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:163)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:66)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceFieldElement.inject(ReferenceAnnotationBeanPostProcessor.java:367)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.postProcessPropertyValues(ReferenceAnnotationBeanPostProcessor.java:92)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1135)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1062)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:581)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:370)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:759)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:548)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:386)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at com.core.framework.BaseApplication.run(BaseApplication.java:64)
	at com.core.framework.BaseApplication.run(BaseApplication.java:74)
	at com.bittrade.currency.CurrencyApplication.main(CurrencyApplication.java:18)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-08-27 10:12:05.036] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.wallet.biz.api.service.IWWalletAccountServicedubbo://localhost:20883 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-27 10:12:06.081] [WARN ] - [main][ com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:98)] :  [DUBBO] Failed to start NettyClient HAHE/192.168.1.12 connect to the server localhost/127.0.0.1:20883 (check == false, ignore and retry later!), cause: client(url: dubbo://localhost:20883/com.wallet.biz.api.service.IWWalletAccountService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.wallet.biz.api.service.IWWalletAccountService&methods=removeById,lambdaQuery,save,removeByMap,update,getObj,fundAccountIn,saveOrUpdateBatch,remove,listByIds,getBaseMapper,removeByIds,getAccount,updateBatchById,lambdaUpdate,fundAccountOut,saveOrUpdate,totalConversion,listMaps,saveBatch,query,count,listObjs,list,getMap,updateById,pageMaps,listByMap,getById,getOne,detail,page&pid=3848&register.ip=192.168.1.12&side=consumer&timestamp=1566871925037) failed to connect to server localhost/127.0.0.1:20883, error message is:Connection refused: no further information, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20883/com.wallet.biz.api.service.IWWalletAccountService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.wallet.biz.api.service.IWWalletAccountService&methods=removeById,lambdaQuery,save,removeByMap,update,getObj,fundAccountIn,saveOrUpdateBatch,remove,listByIds,getBaseMapper,removeByIds,getAccount,updateBatchById,lambdaUpdate,fundAccountOut,saveOrUpdate,totalConversion,listMaps,saveBatch,query,count,listObjs,list,getMap,updateById,pageMaps,listByMap,getById,getOne,detail,page&pid=3848&register.ip=192.168.1.12&side=consumer&timestamp=1566871925037) failed to connect to server localhost/127.0.0.1:20883, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:89)
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.<init>(NettyClient.java:59)
	at com.alibaba.dubbo.remoting.transport.netty.NettyTransporter.connect(NettyTransporter.java:37)
	at com.alibaba.dubbo.remoting.Transporter$Adaptive.connect(Transporter$Adaptive.java)
	at com.alibaba.dubbo.remoting.Transporters.connect(Transporters.java:75)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchanger.connect(HeaderExchanger.java:39)
	at com.alibaba.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:109)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.initClient(DubboProtocol.java:409)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getSharedClient(DubboProtocol.java:377)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getClients(DubboProtocol.java:354)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.refer(DubboProtocol.java:336)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:108)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:65)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:67)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:394)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:333)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:163)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:66)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceFieldElement.inject(ReferenceAnnotationBeanPostProcessor.java:367)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.postProcessPropertyValues(ReferenceAnnotationBeanPostProcessor.java:92)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1135)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1062)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:581)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:370)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:759)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:548)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:386)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at com.core.framework.BaseApplication.run(BaseApplication.java:64)
	at com.core.framework.BaseApplication.run(BaseApplication.java:74)
	at com.bittrade.currency.CurrencyApplication.main(CurrencyApplication.java:18)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-08-27 10:12:06.837] [WARN ] - [DubboClientReconnectTimer-thread-1][ com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:171)] :  [DUBBO] client reconnect to localhost:20884 find error . url: dubbo://localhost:20884/com.bittrade.c2c.service.ITLegalCurrencyAccountService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.c2c.service.ITLegalCurrencyAccountService&methods=getByUserIdAndCoinId,removeById,lambdaQuery,removeByMap,getC2CAccount,listByIds,freezeAmount,removeBy,getBy,updateBatchById,getsBy,saveOrUpdate,add,totalConversion,modifyWithSelectiveBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,detail,page,modifyByPK,c2cOut,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,availableBalance,getBaseMapper,c2cIn,removeByIds,get,lambdaUpdate,unFreezeAmount,getAssets,modifyBy,getsByPagination,getCoinByName,listMaps,saveBatch,modifyWithSelectiveByPK,gets,updateById,pageMaps,listByMap,getByPK&pid=3848&register.ip=192.168.1.12&side=consumer&timestamp=1566871923335, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20884/com.bittrade.c2c.service.ITLegalCurrencyAccountService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.c2c.service.ITLegalCurrencyAccountService&methods=getByUserIdAndCoinId,removeById,lambdaQuery,removeByMap,getC2CAccount,listByIds,freezeAmount,removeBy,getBy,updateBatchById,getsBy,saveOrUpdate,add,totalConversion,modifyWithSelectiveBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,detail,page,modifyByPK,c2cOut,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,availableBalance,getBaseMapper,c2cIn,removeByIds,get,lambdaUpdate,unFreezeAmount,getAssets,modifyBy,getsByPagination,getCoinByName,listMaps,saveBatch,modifyWithSelectiveByPK,gets,updateById,pageMaps,listByMap,getByPK&pid=3848&register.ip=192.168.1.12&side=consumer&timestamp=1566871923335) failed to connect to server localhost/127.0.0.1:20884, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:156)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	... 3 common frames omitted
[2019-08-27 10:12:07.418] [WARN ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'SSOClientController': Unsatisfied dependency expressed through field 'consumerTokenServices'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jwtTokenServices' defined in class path resource [org/springframework/boot/autoconfigure/security/oauth2/resource/ResourceServerTokenServicesConfiguration$JwtTokenServicesConfiguration.class]: Unsatisfied dependency expressed through method 'jwtTokenServices' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jwtTokenStore' defined in class path resource [org/springframework/boot/autoconfigure/security/oauth2/resource/ResourceServerTokenServicesConfiguration$JwtTokenServicesConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.security.oauth2.provider.token.TokenStore]: Factory method 'jwtTokenStore' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jwtTokenEnhancer' defined in class path resource [org/springframework/boot/autoconfigure/security/oauth2/resource/ResourceServerTokenServicesConfiguration$JwtTokenServicesConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.security.oauth2.provider.token.store.JwtAccessTokenConverter]: Factory method 'jwtTokenEnhancer' threw exception; nested exception is org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8087/oauth/token_key": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
[2019-08-27 10:12:07.422] [WARN ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Destroy method 'close' on bean with name 'eurekaRegistration' threw an exception: org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
[2019-08-27 10:12:07.425] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Shutting down ExecutorService
[2019-08-27 10:12:07.426] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:1948)] : {dataSource-1} closing ...
[2019-08-27 10:12:07.433] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:2020)] : {dataSource-1} closed
[2019-08-27 10:12:08.072] [WARN ] - [DubboClientReconnectTimer-thread-2][ com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:171)] :  [DUBBO] client reconnect to localhost:20883 find error . url: dubbo://localhost:20883/com.wallet.biz.api.service.IWWalletAccountService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.wallet.biz.api.service.IWWalletAccountService&methods=removeById,lambdaQuery,save,removeByMap,update,getObj,fundAccountIn,saveOrUpdateBatch,remove,listByIds,getBaseMapper,removeByIds,getAccount,updateBatchById,lambdaUpdate,fundAccountOut,saveOrUpdate,totalConversion,listMaps,saveBatch,query,count,listObjs,list,getMap,updateById,pageMaps,listByMap,getById,getOne,detail,page&pid=3848&register.ip=192.168.1.12&side=consumer&timestamp=1566871925037, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20883/com.wallet.biz.api.service.IWWalletAccountService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.wallet.biz.api.service.IWWalletAccountService&methods=removeById,lambdaQuery,save,removeByMap,update,getObj,fundAccountIn,saveOrUpdateBatch,remove,listByIds,getBaseMapper,removeByIds,getAccount,updateBatchById,lambdaUpdate,fundAccountOut,saveOrUpdate,totalConversion,listMaps,saveBatch,query,count,listObjs,list,getMap,updateById,pageMaps,listByMap,getById,getOne,detail,page&pid=3848&register.ip=192.168.1.12&side=consumer&timestamp=1566871925037) failed to connect to server localhost/127.0.0.1:20883, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:156)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	... 3 common frames omitted
[2019-08-27 15:57:43.058] [INFO ] - [main][?#?:?] : using logger: com.alibaba.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[2019-08-27 15:57:43.065] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-27 15:57:43.070] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {}
[2019-08-27 15:57:43.346] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@37d4349f: startup date [Tue Aug 27 15:57:43 CST 2019]; root of context hierarchy
[2019-08-27 15:57:43.759] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-27 15:57:43.829] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$6bd10e8d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 15:57:44.007] [INFO ] - [pool-1-thread-1][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$1.run(AwaitingNonWebApplicationListener.java:61)] :  [Dubbo] Current Spring Boot Application is await...
[2019-08-27 15:57:44.330] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-27 15:57:44.332] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {dubbo.application.id=service-consumer, dubbo.application.name=service-consumer, dubbo.consumer.check=false, dubbo.consumer.timeout=5000, dubbo.monitor=, dubbo.protocol.id=dubbo, dubbo.protocol.name=dubbo, dubbo.protocol.port=20881, dubbo.provider.timeout=5000, dubbo.registry.address=N/A, dubbo.registry.check=false, dubbo.registry.id=my-registry, dubbo.registry.protocol=zookeeper, dubbo.scan=}
[2019-08-27 15:57:44.370] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : The following profiles are active: common,data,eureka,dubbo_provider,dubbo_consumer
[2019-08-27 15:57:44.408] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1755e85b: startup date [Tue Aug 27 15:57:44 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@37d4349f
[2019-08-27 15:57:45.968] [WARN ] - [main][ org.mybatis.logging.Logger.warn(Logger.java:44)] : No MyBatis mapper was found in '[com.baomidou.cloud.service.*.mapper*]' package. Please check your configuration.
[2019-08-27 15:57:46.685] [INFO ] - [main][ org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:172)] : Multiple Spring Data modules found, entering strict repository configuration mode!
[2019-08-27 15:57:47.713] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : BeanFactory id=4fea9b08-1d25-343b-88c7-270dc5f50801
[2019-08-27 15:57:47.758] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-27 15:57:48.036] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 15:57:48.049] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'transactionProperties' of type [com.core.framework.props.TransactionProperties$$EnhancerBySpringCGLIB$$60ffce36] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 15:57:48.064] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$69630102] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 15:57:48.068] [INFO ] - [main][ com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource(DruidDataSourceAutoConfigure.java:56)] : Init DruidDataSource
[2019-08-27 15:57:48.185] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 15:57:48.312] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003)] : {dataSource-1} inited
[2019-08-27 15:57:48.313] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 15:57:48.341] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 15:57:48.352] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$$EnhancerBySpringCGLIB$$e42b069a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 15:57:48.369] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 15:57:48.376] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 15:57:48.384] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration$$EnhancerBySpringCGLIB$$fcb7a3ff] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 15:57:48.421] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 15:57:48.422] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'transactionConfig' of type [com.core.framework.config.TransactionConfig$$EnhancerBySpringCGLIB$$55bb88db] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 15:57:48.447] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'defaultPointcutAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 15:57:48.467] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4fb70b90] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 15:57:48.764] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' of type [com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration$$EnhancerBySpringCGLIB$$5eb8b102] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 15:57:48.779] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 15:57:48.788] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 15:57:48.791] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 15:57:48.795] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 15:57:48.799] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 15:57:48.851] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$6bd10e8d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 15:57:49.419] [INFO ] - [main][ org.xnio.Xnio.<clinit>(Xnio.java:104)] : XNIO version 3.3.8.Final
[2019-08-27 15:57:49.448] [INFO ] - [main][ org.xnio.nio.NioXnio.<clinit>(NioXnio.java:55)] : XNIO NIO Implementation Version 3.3.8.Final
[2019-08-27 15:57:49.523] [WARN ] - [main][ io.undertow.websockets.jsr.Bootstrap.handleDeployment(Bootstrap.java:67)] : UT026009: XNIO worker was not set on WebSocketDeploymentInfo, the default worker will be used
[2019-08-27 15:57:49.524] [WARN ] - [main][ io.undertow.websockets.jsr.Bootstrap.handleDeployment(Bootstrap.java:76)] : UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
[2019-08-27 15:57:49.572] [INFO ] - [main][ io.undertow.servlet.spec.ServletContextImpl.log(ServletContextImpl.java:360)] : Initializing Spring embedded WebApplicationContext
[2019-08-27 15:57:49.573] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Root WebApplicationContext: initialization completed in 5165 ms
[2019-08-27 15:57:49.895] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-27 15:57:49.896] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-27 15:57:49.924] [INFO ] - [main][ com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281)] : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@7a55fb81
[2019-08-27 15:57:50.574] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Initializing ExecutorService
[2019-08-27 15:57:51.696] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'characterEncodingFilter' to: [/*]
[2019-08-27 15:57:51.697] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'webMvcMetricsFilter' to: [/*]
[2019-08-27 15:57:51.698] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'springSecurityFilterChain' to: [/*]
[2019-08-27 15:57:51.699] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'httpTraceFilter' to: [/*]
[2019-08-27 15:57:51.699] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Servlet dispatcherServlet mapped to [/]
[2019-08-27 15:57:54.991] [INFO ] - [main][ com.core.framework.config.redis.JedisClusterConfig.getJedisCluster(JedisClusterConfig.java:35)] : 进入redis集群初始化方法：访问集群地址为：[154.222.138.5:7000, 154.222.138.5:7001, 154.222.138.5:7002, 154.222.138.5:7003, 154.222.138.5:7004, 154.222.138.5:7005]
[2019-08-27 15:57:55.507] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyTradeServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-27 15:57:57.046] [WARN ] - [main][ com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:98)] :  [DUBBO] Failed to start NettyClient HAHE/192.168.1.12 connect to the server localhost/127.0.0.1:20881 (check == false, ignore and retry later!), cause: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,add,modifyWithSelectiveBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,gets,updateById,pageMaps,listByMap,getByPK&pid=3816&register.ip=192.168.1.12&side=consumer&timestamp=1566892675508) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,add,modifyWithSelectiveBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,gets,updateById,pageMaps,listByMap,getByPK&pid=3816&register.ip=192.168.1.12&side=consumer&timestamp=1566892675508) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:89)
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.<init>(NettyClient.java:59)
	at com.alibaba.dubbo.remoting.transport.netty.NettyTransporter.connect(NettyTransporter.java:37)
	at com.alibaba.dubbo.remoting.Transporter$Adaptive.connect(Transporter$Adaptive.java)
	at com.alibaba.dubbo.remoting.Transporters.connect(Transporters.java:75)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchanger.connect(HeaderExchanger.java:39)
	at com.alibaba.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:109)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.initClient(DubboProtocol.java:409)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getSharedClient(DubboProtocol.java:377)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getClients(DubboProtocol.java:354)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.refer(DubboProtocol.java:336)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:108)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:65)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:67)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:394)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:333)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:163)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:66)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceFieldElement.inject(ReferenceAnnotationBeanPostProcessor.java:367)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.postProcessPropertyValues(ReferenceAnnotationBeanPostProcessor.java:92)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1135)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1062)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:581)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:370)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:759)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:548)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:386)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at com.core.framework.BaseApplication.run(BaseApplication.java:66)
	at com.core.framework.BaseApplication.run(BaseApplication.java:76)
	at com.bittrade.currency.CurrencyApplication.main(CurrencyApplication.java:18)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-08-27 15:57:57.205] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-27 15:57:57.310] [WARN ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'fundsController': Unsatisfied dependency expressed through field 'walletService'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'TWalletServiceImpl': Injection of @Reference dependencies failed; nested exception is java.lang.IllegalStateException: No such any registry to reference com.common.bittrade.service.ITLegalCurrencyAccountService on the consumer 192.168.1.12 use dubbo version 2.6.2, please config <dubbo:registry address="..." /> to your spring config.
[2019-08-27 15:57:57.314] [WARN ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Destroy method 'close' on bean with name 'eurekaRegistration' threw an exception: org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
[2019-08-27 15:57:57.317] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Shutting down ExecutorService
[2019-08-27 15:57:57.318] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:1948)] : {dataSource-1} closing ...
[2019-08-27 15:57:57.325] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:2020)] : {dataSource-1} closed
[2019-08-27 15:57:59.008] [WARN ] - [DubboClientReconnectTimer-thread-1][ com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:171)] :  [DUBBO] client reconnect to localhost:20881 find error . url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,add,modifyWithSelectiveBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,gets,updateById,pageMaps,listByMap,getByPK&pid=3816&register.ip=192.168.1.12&side=consumer&timestamp=1566892675508, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,add,modifyWithSelectiveBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,gets,updateById,pageMaps,listByMap,getByPK&pid=3816&register.ip=192.168.1.12&side=consumer&timestamp=1566892675508) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:156)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	... 3 common frames omitted
[2019-08-27 16:00:02.323] [INFO ] - [main][?#?:?] : using logger: com.alibaba.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[2019-08-27 16:00:02.333] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-27 16:00:02.340] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {}
[2019-08-27 16:00:02.616] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@5562c41e: startup date [Tue Aug 27 16:00:02 CST 2019]; root of context hierarchy
[2019-08-27 16:00:03.038] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-27 16:00:03.108] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$fa6dc166] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:00:03.296] [INFO ] - [pool-1-thread-1][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$1.run(AwaitingNonWebApplicationListener.java:61)] :  [Dubbo] Current Spring Boot Application is await...
[2019-08-27 16:00:03.622] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-27 16:00:03.624] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {dubbo.application.id=service-consumer, dubbo.application.name=service-consumer, dubbo.consumer.check=false, dubbo.consumer.timeout=5000, dubbo.monitor=, dubbo.protocol.id=dubbo, dubbo.protocol.name=dubbo, dubbo.protocol.port=20881, dubbo.provider.timeout=5000, dubbo.registry.address=N/A, dubbo.registry.check=false, dubbo.registry.id=my-registry, dubbo.registry.protocol=zookeeper, dubbo.scan=}
[2019-08-27 16:00:03.662] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : The following profiles are active: common,data,eureka,dubbo_provider,dubbo_consumer
[2019-08-27 16:00:03.702] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@25e2ab5a: startup date [Tue Aug 27 16:00:03 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@5562c41e
[2019-08-27 16:00:05.273] [WARN ] - [main][ org.mybatis.logging.Logger.warn(Logger.java:44)] : No MyBatis mapper was found in '[com.baomidou.cloud.service.*.mapper*]' package. Please check your configuration.
[2019-08-27 16:00:05.980] [INFO ] - [main][ org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:172)] : Multiple Spring Data modules found, entering strict repository configuration mode!
[2019-08-27 16:00:07.015] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : BeanFactory id=4fea9b08-1d25-343b-88c7-270dc5f50801
[2019-08-27 16:00:07.058] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-27 16:00:07.325] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:00:07.337] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'transactionProperties' of type [com.core.framework.props.TransactionProperties$$EnhancerBySpringCGLIB$$ef9c810f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:00:07.352] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$f7ffb3db] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:00:07.356] [INFO ] - [main][ com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource(DruidDataSourceAutoConfigure.java:56)] : Init DruidDataSource
[2019-08-27 16:00:07.469] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:00:07.597] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003)] : {dataSource-1} inited
[2019-08-27 16:00:07.599] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:00:07.627] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:00:07.637] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$$EnhancerBySpringCGLIB$$72c7b973] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:00:07.656] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:00:07.663] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:00:07.670] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration$$EnhancerBySpringCGLIB$$8b5456d8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:00:07.705] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:00:07.706] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'transactionConfig' of type [com.core.framework.config.TransactionConfig$$EnhancerBySpringCGLIB$$e4583bb4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:00:07.731] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'defaultPointcutAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:00:07.749] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$de53be69] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:00:08.068] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' of type [com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration$$EnhancerBySpringCGLIB$$ed5563db] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:00:08.081] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:00:08.090] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:00:08.093] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:00:08.096] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:00:08.099] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:00:08.147] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$fa6dc166] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:00:08.706] [INFO ] - [main][ org.xnio.Xnio.<clinit>(Xnio.java:104)] : XNIO version 3.3.8.Final
[2019-08-27 16:00:08.741] [INFO ] - [main][ org.xnio.nio.NioXnio.<clinit>(NioXnio.java:55)] : XNIO NIO Implementation Version 3.3.8.Final
[2019-08-27 16:00:08.819] [WARN ] - [main][ io.undertow.websockets.jsr.Bootstrap.handleDeployment(Bootstrap.java:67)] : UT026009: XNIO worker was not set on WebSocketDeploymentInfo, the default worker will be used
[2019-08-27 16:00:08.820] [WARN ] - [main][ io.undertow.websockets.jsr.Bootstrap.handleDeployment(Bootstrap.java:76)] : UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
[2019-08-27 16:00:08.871] [INFO ] - [main][ io.undertow.servlet.spec.ServletContextImpl.log(ServletContextImpl.java:360)] : Initializing Spring embedded WebApplicationContext
[2019-08-27 16:00:08.871] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Root WebApplicationContext: initialization completed in 5169 ms
[2019-08-27 16:00:09.203] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-27 16:00:09.203] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-27 16:00:09.230] [INFO ] - [main][ com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281)] : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1e191150
[2019-08-27 16:00:09.877] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Initializing ExecutorService
[2019-08-27 16:00:10.991] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'characterEncodingFilter' to: [/*]
[2019-08-27 16:00:10.993] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'webMvcMetricsFilter' to: [/*]
[2019-08-27 16:00:10.994] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'springSecurityFilterChain' to: [/*]
[2019-08-27 16:00:10.994] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'httpTraceFilter' to: [/*]
[2019-08-27 16:00:10.995] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Servlet dispatcherServlet mapped to [/]
[2019-08-27 16:00:14.237] [INFO ] - [main][ com.core.framework.config.redis.JedisClusterConfig.getJedisCluster(JedisClusterConfig.java:35)] : 进入redis集群初始化方法：访问集群地址为：[154.222.138.5:7000, 154.222.138.5:7001, 154.222.138.5:7002, 154.222.138.5:7003, 154.222.138.5:7004, 154.222.138.5:7005]
[2019-08-27 16:00:14.795] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyTradeServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-27 16:00:16.330] [WARN ] - [main][ com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:98)] :  [DUBBO] Failed to start NettyClient HAHE/192.168.1.12 connect to the server localhost/127.0.0.1:20881 (check == false, ignore and retry later!), cause: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,add,modifyWithSelectiveBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,gets,updateById,pageMaps,listByMap,getByPK&pid=2128&register.ip=192.168.1.12&side=consumer&timestamp=1566892814796) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,add,modifyWithSelectiveBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,gets,updateById,pageMaps,listByMap,getByPK&pid=2128&register.ip=192.168.1.12&side=consumer&timestamp=1566892814796) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:89)
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.<init>(NettyClient.java:59)
	at com.alibaba.dubbo.remoting.transport.netty.NettyTransporter.connect(NettyTransporter.java:37)
	at com.alibaba.dubbo.remoting.Transporter$Adaptive.connect(Transporter$Adaptive.java)
	at com.alibaba.dubbo.remoting.Transporters.connect(Transporters.java:75)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchanger.connect(HeaderExchanger.java:39)
	at com.alibaba.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:109)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.initClient(DubboProtocol.java:409)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getSharedClient(DubboProtocol.java:377)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getClients(DubboProtocol.java:354)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.refer(DubboProtocol.java:336)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:65)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:108)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:67)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:394)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:333)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:163)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:66)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceFieldElement.inject(ReferenceAnnotationBeanPostProcessor.java:367)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.postProcessPropertyValues(ReferenceAnnotationBeanPostProcessor.java:92)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1135)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1062)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:581)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:370)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:759)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:548)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:386)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at com.core.framework.BaseApplication.run(BaseApplication.java:66)
	at com.core.framework.BaseApplication.run(BaseApplication.java:76)
	at com.bittrade.currency.CurrencyApplication.main(CurrencyApplication.java:18)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-08-27 16:00:16.495] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-27 16:00:16.599] [WARN ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'fundsController': Unsatisfied dependency expressed through field 'walletService'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'TWalletServiceImpl': Injection of @Reference dependencies failed; nested exception is java.lang.IllegalStateException: No such any registry to reference com.common.bittrade.service.ITLegalCurrencyAccountService on the consumer 192.168.1.12 use dubbo version 2.6.2, please config <dubbo:registry address="..." /> to your spring config.
[2019-08-27 16:00:16.604] [WARN ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Destroy method 'close' on bean with name 'eurekaRegistration' threw an exception: org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
[2019-08-27 16:00:16.607] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Shutting down ExecutorService
[2019-08-27 16:00:16.608] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:1948)] : {dataSource-1} closing ...
[2019-08-27 16:00:16.614] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:2020)] : {dataSource-1} closed
[2019-08-27 16:00:18.293] [WARN ] - [DubboClientReconnectTimer-thread-1][ com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:171)] :  [DUBBO] client reconnect to localhost:20881 find error . url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,add,modifyWithSelectiveBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,gets,updateById,pageMaps,listByMap,getByPK&pid=2128&register.ip=192.168.1.12&side=consumer&timestamp=1566892814796, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,add,modifyWithSelectiveBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,gets,updateById,pageMaps,listByMap,getByPK&pid=2128&register.ip=192.168.1.12&side=consumer&timestamp=1566892814796) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:156)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	... 3 common frames omitted
[2019-08-27 16:01:42.777] [INFO ] - [main][?#?:?] : using logger: com.alibaba.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[2019-08-27 16:01:42.785] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-27 16:01:42.791] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {}
[2019-08-27 16:01:43.086] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@18d87d80: startup date [Tue Aug 27 16:01:43 CST 2019]; root of context hierarchy
[2019-08-27 16:01:43.504] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-27 16:01:43.576] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$9651a5a3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:01:43.758] [INFO ] - [pool-1-thread-1][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$1.run(AwaitingNonWebApplicationListener.java:61)] :  [Dubbo] Current Spring Boot Application is await...
[2019-08-27 16:01:44.073] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-27 16:01:44.074] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {dubbo.application.id=service-consumer, dubbo.application.name=service-consumer, dubbo.consumer.check=false, dubbo.consumer.timeout=5000, dubbo.monitor=, dubbo.protocol.id=dubbo, dubbo.protocol.name=dubbo, dubbo.protocol.port=20881, dubbo.provider.timeout=5000, dubbo.registry.address=N/A, dubbo.registry.check=false, dubbo.registry.id=my-registry, dubbo.registry.protocol=zookeeper, dubbo.scan=}
[2019-08-27 16:01:44.114] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : The following profiles are active: common,data,eureka,dubbo_provider,dubbo_consumer
[2019-08-27 16:01:44.153] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@58fb7731: startup date [Tue Aug 27 16:01:44 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@18d87d80
[2019-08-27 16:01:45.733] [WARN ] - [main][ org.mybatis.logging.Logger.warn(Logger.java:44)] : No MyBatis mapper was found in '[com.baomidou.cloud.service.*.mapper*]' package. Please check your configuration.
[2019-08-27 16:01:46.470] [INFO ] - [main][ org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:172)] : Multiple Spring Data modules found, entering strict repository configuration mode!
[2019-08-27 16:01:47.489] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : BeanFactory id=4fea9b08-1d25-343b-88c7-270dc5f50801
[2019-08-27 16:01:47.536] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-27 16:01:47.819] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:01:47.832] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'transactionProperties' of type [com.core.framework.props.TransactionProperties$$EnhancerBySpringCGLIB$$8b80654c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:01:47.849] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$93e39818] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:01:47.854] [INFO ] - [main][ com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource(DruidDataSourceAutoConfigure.java:56)] : Init DruidDataSource
[2019-08-27 16:01:47.961] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:01:48.083] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003)] : {dataSource-1} inited
[2019-08-27 16:01:48.084] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:01:48.110] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:01:48.120] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$$EnhancerBySpringCGLIB$$eab9db0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:01:48.136] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:01:48.142] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:01:48.150] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration$$EnhancerBySpringCGLIB$$27383b15] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:01:48.186] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:01:48.187] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'transactionConfig' of type [com.core.framework.config.TransactionConfig$$EnhancerBySpringCGLIB$$803c1ff1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:01:48.213] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'defaultPointcutAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:01:48.231] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7a37a2a6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:01:48.531] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' of type [com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration$$EnhancerBySpringCGLIB$$89394818] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:01:48.545] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:01:48.554] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:01:48.558] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:01:48.563] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:01:48.567] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:01:48.621] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$9651a5a3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:01:49.183] [INFO ] - [main][ org.xnio.Xnio.<clinit>(Xnio.java:104)] : XNIO version 3.3.8.Final
[2019-08-27 16:01:49.211] [INFO ] - [main][ org.xnio.nio.NioXnio.<clinit>(NioXnio.java:55)] : XNIO NIO Implementation Version 3.3.8.Final
[2019-08-27 16:01:49.285] [WARN ] - [main][ io.undertow.websockets.jsr.Bootstrap.handleDeployment(Bootstrap.java:67)] : UT026009: XNIO worker was not set on WebSocketDeploymentInfo, the default worker will be used
[2019-08-27 16:01:49.286] [WARN ] - [main][ io.undertow.websockets.jsr.Bootstrap.handleDeployment(Bootstrap.java:76)] : UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
[2019-08-27 16:01:49.336] [INFO ] - [main][ io.undertow.servlet.spec.ServletContextImpl.log(ServletContextImpl.java:360)] : Initializing Spring embedded WebApplicationContext
[2019-08-27 16:01:49.337] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Root WebApplicationContext: initialization completed in 5184 ms
[2019-08-27 16:01:49.675] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-27 16:01:49.675] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-27 16:01:49.701] [INFO ] - [main][ com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281)] : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1a497286
[2019-08-27 16:01:50.737] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Initializing ExecutorService
[2019-08-27 16:01:51.898] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'characterEncodingFilter' to: [/*]
[2019-08-27 16:01:51.904] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'webMvcMetricsFilter' to: [/*]
[2019-08-27 16:01:51.905] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'springSecurityFilterChain' to: [/*]
[2019-08-27 16:01:51.905] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'httpTraceFilter' to: [/*]
[2019-08-27 16:01:51.906] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Servlet dispatcherServlet mapped to [/]
[2019-08-27 16:01:55.236] [INFO ] - [main][ com.core.framework.config.redis.JedisClusterConfig.getJedisCluster(JedisClusterConfig.java:35)] : 进入redis集群初始化方法：访问集群地址为：[154.222.138.5:7000, 154.222.138.5:7001, 154.222.138.5:7002, 154.222.138.5:7003, 154.222.138.5:7004, 154.222.138.5:7005]
[2019-08-27 16:01:56.462] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyTradeServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-27 16:01:57.744] [WARN ] - [main][ com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:98)] :  [DUBBO] Failed to start NettyClient HAHE/192.168.1.12 connect to the server localhost/127.0.0.1:20881 (check == false, ignore and retry later!), cause: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,add,modifyWithSelectiveBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,gets,updateById,pageMaps,listByMap,getByPK&pid=520&register.ip=192.168.1.12&side=consumer&timestamp=1566892916463) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,add,modifyWithSelectiveBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,gets,updateById,pageMaps,listByMap,getByPK&pid=520&register.ip=192.168.1.12&side=consumer&timestamp=1566892916463) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:89)
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.<init>(NettyClient.java:59)
	at com.alibaba.dubbo.remoting.transport.netty.NettyTransporter.connect(NettyTransporter.java:37)
	at com.alibaba.dubbo.remoting.Transporter$Adaptive.connect(Transporter$Adaptive.java)
	at com.alibaba.dubbo.remoting.Transporters.connect(Transporters.java:75)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchanger.connect(HeaderExchanger.java:39)
	at com.alibaba.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:109)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.initClient(DubboProtocol.java:409)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getSharedClient(DubboProtocol.java:377)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getClients(DubboProtocol.java:354)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.refer(DubboProtocol.java:336)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:108)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:67)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:65)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:394)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:333)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:163)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:66)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceFieldElement.inject(ReferenceAnnotationBeanPostProcessor.java:367)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.postProcessPropertyValues(ReferenceAnnotationBeanPostProcessor.java:92)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1135)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1062)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:581)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:370)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:759)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:548)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:386)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at com.core.framework.BaseApplication.run(BaseApplication.java:66)
	at com.core.framework.BaseApplication.run(BaseApplication.java:76)
	at com.bittrade.currency.CurrencyApplication.main(CurrencyApplication.java:18)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-08-27 16:01:57.903] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-27 16:01:59.252] [WARN ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'SSOClientController': Unsatisfied dependency expressed through field 'consumerTokenServices'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jwtTokenServices' defined in class path resource [org/springframework/boot/autoconfigure/security/oauth2/resource/ResourceServerTokenServicesConfiguration$JwtTokenServicesConfiguration.class]: Unsatisfied dependency expressed through method 'jwtTokenServices' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jwtTokenStore' defined in class path resource [org/springframework/boot/autoconfigure/security/oauth2/resource/ResourceServerTokenServicesConfiguration$JwtTokenServicesConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.security.oauth2.provider.token.TokenStore]: Factory method 'jwtTokenStore' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jwtTokenEnhancer' defined in class path resource [org/springframework/boot/autoconfigure/security/oauth2/resource/ResourceServerTokenServicesConfiguration$JwtTokenServicesConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.security.oauth2.provider.token.store.JwtAccessTokenConverter]: Factory method 'jwtTokenEnhancer' threw exception; nested exception is org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8087/oauth/token_key": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
[2019-08-27 16:01:59.257] [WARN ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Destroy method 'close' on bean with name 'eurekaRegistration' threw an exception: org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
[2019-08-27 16:01:59.259] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Shutting down ExecutorService
[2019-08-27 16:01:59.260] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:1948)] : {dataSource-1} closing ...
[2019-08-27 16:01:59.265] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:2020)] : {dataSource-1} closed
[2019-08-27 16:01:59.705] [WARN ] - [DubboClientReconnectTimer-thread-1][ com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:171)] :  [DUBBO] client reconnect to localhost:20881 find error . url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,add,modifyWithSelectiveBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,gets,updateById,pageMaps,listByMap,getByPK&pid=520&register.ip=192.168.1.12&side=consumer&timestamp=1566892916463, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,add,modifyWithSelectiveBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,gets,updateById,pageMaps,listByMap,getByPK&pid=520&register.ip=192.168.1.12&side=consumer&timestamp=1566892916463) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:156)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	... 3 common frames omitted
[2019-08-27 16:09:19.423] [INFO ] - [main][?#?:?] : using logger: com.alibaba.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[2019-08-27 16:09:19.432] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-27 16:09:19.440] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {}
[2019-08-27 16:09:19.742] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3ee37e5a: startup date [Tue Aug 27 16:09:19 CST 2019]; root of context hierarchy
[2019-08-27 16:09:20.192] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-27 16:09:20.264] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c18745ae] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:09:20.443] [INFO ] - [pool-1-thread-1][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$1.run(AwaitingNonWebApplicationListener.java:61)] :  [Dubbo] Current Spring Boot Application is await...
[2019-08-27 16:09:20.763] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-27 16:09:20.764] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {dubbo.application.id=service-consumer, dubbo.application.name=service-consumer, dubbo.consumer.check=false, dubbo.consumer.timeout=5000, dubbo.monitor=, dubbo.protocol.id=dubbo, dubbo.protocol.name=dubbo, dubbo.protocol.port=20881, dubbo.provider.timeout=5000, dubbo.registry.address=N/A, dubbo.registry.check=false, dubbo.registry.id=my-registry, dubbo.registry.protocol=zookeeper, dubbo.scan=}
[2019-08-27 16:09:20.803] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : The following profiles are active: common,data,eureka,dubbo_provider,dubbo_consumer
[2019-08-27 16:09:20.843] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@63fdab07: startup date [Tue Aug 27 16:09:20 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3ee37e5a
[2019-08-27 16:09:22.400] [WARN ] - [main][ org.mybatis.logging.Logger.warn(Logger.java:44)] : No MyBatis mapper was found in '[com.baomidou.cloud.service.*.mapper*]' package. Please check your configuration.
[2019-08-27 16:09:23.127] [INFO ] - [main][ org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:172)] : Multiple Spring Data modules found, entering strict repository configuration mode!
[2019-08-27 16:09:24.130] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : BeanFactory id=1d4a0fbd-8d6c-300f-97ab-b7b64e05c3c8
[2019-08-27 16:09:24.173] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-27 16:09:24.443] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:09:24.455] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'transactionProperties' of type [com.core.framework.props.TransactionProperties$$EnhancerBySpringCGLIB$$b6b60557] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:09:24.470] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$bf193823] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:09:24.474] [INFO ] - [main][ com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource(DruidDataSourceAutoConfigure.java:56)] : Init DruidDataSource
[2019-08-27 16:09:24.584] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:09:24.712] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003)] : {dataSource-1} inited
[2019-08-27 16:09:24.713] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:09:24.741] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:09:24.752] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$$EnhancerBySpringCGLIB$$39e13dbb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:09:24.771] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:09:24.781] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:09:24.790] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration$$EnhancerBySpringCGLIB$$526ddb20] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:09:24.827] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:09:24.828] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'transactionConfig' of type [com.core.framework.config.TransactionConfig$$EnhancerBySpringCGLIB$$ab71bffc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:09:24.855] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'defaultPointcutAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:09:24.872] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a56d42b1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:09:25.171] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' of type [com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration$$EnhancerBySpringCGLIB$$b46ee823] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:09:25.186] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:09:25.195] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:09:25.199] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:09:25.202] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:09:25.207] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:09:25.263] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c18745ae] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:09:25.836] [INFO ] - [main][ org.xnio.Xnio.<clinit>(Xnio.java:104)] : XNIO version 3.3.8.Final
[2019-08-27 16:09:25.864] [INFO ] - [main][ org.xnio.nio.NioXnio.<clinit>(NioXnio.java:55)] : XNIO NIO Implementation Version 3.3.8.Final
[2019-08-27 16:09:25.934] [WARN ] - [main][ io.undertow.websockets.jsr.Bootstrap.handleDeployment(Bootstrap.java:67)] : UT026009: XNIO worker was not set on WebSocketDeploymentInfo, the default worker will be used
[2019-08-27 16:09:25.935] [WARN ] - [main][ io.undertow.websockets.jsr.Bootstrap.handleDeployment(Bootstrap.java:76)] : UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
[2019-08-27 16:09:25.983] [INFO ] - [main][ io.undertow.servlet.spec.ServletContextImpl.log(ServletContextImpl.java:360)] : Initializing Spring embedded WebApplicationContext
[2019-08-27 16:09:25.984] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Root WebApplicationContext: initialization completed in 5141 ms
[2019-08-27 16:09:26.292] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-27 16:09:26.292] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-27 16:09:26.318] [INFO ] - [main][ com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281)] : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@621624b1
[2019-08-27 16:09:26.946] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Initializing ExecutorService
[2019-08-27 16:09:28.099] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'characterEncodingFilter' to: [/*]
[2019-08-27 16:09:28.100] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'webMvcMetricsFilter' to: [/*]
[2019-08-27 16:09:28.101] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'springSecurityFilterChain' to: [/*]
[2019-08-27 16:09:28.102] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'httpTraceFilter' to: [/*]
[2019-08-27 16:09:28.103] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Servlet dispatcherServlet mapped to [/]
[2019-08-27 16:09:31.296] [INFO ] - [main][ com.core.framework.config.redis.JedisClusterConfig.getJedisCluster(JedisClusterConfig.java:35)] : 进入redis集群初始化方法：访问集群地址为：[154.222.138.5:7000, 154.222.138.5:7001, 154.222.138.5:7002, 154.222.138.5:7003, 154.222.138.5:7004, 154.222.138.5:7005]
[2019-08-27 16:09:32.438] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyTradeServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-27 16:09:33.709] [WARN ] - [main][ com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:98)] :  [DUBBO] Failed to start NettyClient HAHE/192.168.1.12 connect to the server localhost/127.0.0.1:20881 (check == false, ignore and retry later!), cause: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,add,modifyWithSelectiveBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,gets,updateById,pageMaps,listByMap,getByPK&pid=2668&register.ip=192.168.1.12&side=consumer&timestamp=1566893372439) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,add,modifyWithSelectiveBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,gets,updateById,pageMaps,listByMap,getByPK&pid=2668&register.ip=192.168.1.12&side=consumer&timestamp=1566893372439) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:89)
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.<init>(NettyClient.java:59)
	at com.alibaba.dubbo.remoting.transport.netty.NettyTransporter.connect(NettyTransporter.java:37)
	at com.alibaba.dubbo.remoting.Transporter$Adaptive.connect(Transporter$Adaptive.java)
	at com.alibaba.dubbo.remoting.Transporters.connect(Transporters.java:75)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchanger.connect(HeaderExchanger.java:39)
	at com.alibaba.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:109)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.initClient(DubboProtocol.java:409)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getSharedClient(DubboProtocol.java:377)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getClients(DubboProtocol.java:354)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.refer(DubboProtocol.java:336)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:108)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:65)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:67)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:394)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:333)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:163)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:66)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceFieldElement.inject(ReferenceAnnotationBeanPostProcessor.java:367)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.postProcessPropertyValues(ReferenceAnnotationBeanPostProcessor.java:92)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1135)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1062)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:581)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:370)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:759)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:548)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:386)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at com.core.framework.BaseApplication.run(BaseApplication.java:66)
	at com.core.framework.BaseApplication.run(BaseApplication.java:76)
	at com.bittrade.currency.CurrencyApplication.main(CurrencyApplication.java:18)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-08-27 16:09:33.857] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-27 16:09:34.022] [WARN ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'SSOClientController': Unsatisfied dependency expressed through field 'consumerTokenServices'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'org.springframework.security.oauth2.provider.token.ConsumerTokenServices' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
[2019-08-27 16:09:34.027] [WARN ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Destroy method 'close' on bean with name 'eurekaRegistration' threw an exception: org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
[2019-08-27 16:09:34.029] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Shutting down ExecutorService
[2019-08-27 16:09:34.030] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:1948)] : {dataSource-1} closing ...
[2019-08-27 16:09:34.035] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:2020)] : {dataSource-1} closed
[2019-08-27 16:09:34.425] [INFO ] - [main][ com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource(DruidDataSourceAutoConfigure.java:56)] : Init DruidDataSource
[2019-08-27 16:09:34.437] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003)] : {dataSource-2} inited
[2019-08-27 16:09:35.668] [WARN ] - [DubboClientReconnectTimer-thread-1][ com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:171)] :  [DUBBO] client reconnect to localhost:20881 find error . url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,add,modifyWithSelectiveBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,gets,updateById,pageMaps,listByMap,getByPK&pid=2668&register.ip=192.168.1.12&side=consumer&timestamp=1566893372439, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,add,modifyWithSelectiveBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,gets,updateById,pageMaps,listByMap,getByPK&pid=2668&register.ip=192.168.1.12&side=consumer&timestamp=1566893372439) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:156)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	... 3 common frames omitted
[2019-08-27 16:11:42.813] [INFO ] - [main][?#?:?] : using logger: com.alibaba.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[2019-08-27 16:11:42.820] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-27 16:11:42.825] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {}
[2019-08-27 16:11:43.098] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@f5acb9d: startup date [Tue Aug 27 16:11:43 CST 2019]; root of context hierarchy
[2019-08-27 16:11:43.511] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-27 16:11:43.578] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$daf0134d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:11:43.754] [INFO ] - [pool-1-thread-1][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$1.run(AwaitingNonWebApplicationListener.java:61)] :  [Dubbo] Current Spring Boot Application is await...
[2019-08-27 16:11:44.065] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-27 16:11:44.066] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {dubbo.application.id=service-consumer, dubbo.application.name=service-consumer, dubbo.consumer.check=false, dubbo.consumer.timeout=5000, dubbo.monitor=, dubbo.protocol.id=dubbo, dubbo.protocol.name=dubbo, dubbo.protocol.port=20881, dubbo.provider.timeout=5000, dubbo.registry.address=N/A, dubbo.registry.check=false, dubbo.registry.id=my-registry, dubbo.registry.protocol=zookeeper, dubbo.scan=}
[2019-08-27 16:11:44.103] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : The following profiles are active: common,data,eureka,dubbo_provider,dubbo_consumer
[2019-08-27 16:11:44.142] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@349c1daf: startup date [Tue Aug 27 16:11:44 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@f5acb9d
[2019-08-27 16:11:45.686] [WARN ] - [main][ org.mybatis.logging.Logger.warn(Logger.java:44)] : No MyBatis mapper was found in '[com.baomidou.cloud.service.*.mapper*]' package. Please check your configuration.
[2019-08-27 16:11:46.389] [INFO ] - [main][ org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:172)] : Multiple Spring Data modules found, entering strict repository configuration mode!
[2019-08-27 16:11:47.426] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : BeanFactory id=0b547b7a-0fa4-3af7-ae3c-0c6a0399c7a8
[2019-08-27 16:11:47.468] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-27 16:11:47.734] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:11:47.747] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'transactionProperties' of type [com.core.framework.props.TransactionProperties$$EnhancerBySpringCGLIB$$d01ed2f6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:11:47.761] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$d88205c2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:11:47.765] [INFO ] - [main][ com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource(DruidDataSourceAutoConfigure.java:56)] : Init DruidDataSource
[2019-08-27 16:11:47.875] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:11:47.998] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003)] : {dataSource-1} inited
[2019-08-27 16:11:47.999] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:11:48.028] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:11:48.039] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$$EnhancerBySpringCGLIB$$534a0b5a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:11:48.057] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:11:48.062] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:11:48.070] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration$$EnhancerBySpringCGLIB$$6bd6a8bf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:11:48.107] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:11:48.108] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'transactionConfig' of type [com.core.framework.config.TransactionConfig$$EnhancerBySpringCGLIB$$c4da8d9b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:11:48.136] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'defaultPointcutAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:11:48.155] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bed61050] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:11:48.450] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' of type [com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration$$EnhancerBySpringCGLIB$$cdd7b5c2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:11:48.465] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:11:48.474] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:11:48.478] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:11:48.481] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:11:48.485] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:11:48.545] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$daf0134d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:11:49.124] [INFO ] - [main][ org.xnio.Xnio.<clinit>(Xnio.java:104)] : XNIO version 3.3.8.Final
[2019-08-27 16:11:49.151] [INFO ] - [main][ org.xnio.nio.NioXnio.<clinit>(NioXnio.java:55)] : XNIO NIO Implementation Version 3.3.8.Final
[2019-08-27 16:11:49.219] [WARN ] - [main][ io.undertow.websockets.jsr.Bootstrap.handleDeployment(Bootstrap.java:67)] : UT026009: XNIO worker was not set on WebSocketDeploymentInfo, the default worker will be used
[2019-08-27 16:11:49.219] [WARN ] - [main][ io.undertow.websockets.jsr.Bootstrap.handleDeployment(Bootstrap.java:76)] : UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
[2019-08-27 16:11:49.265] [INFO ] - [main][ io.undertow.servlet.spec.ServletContextImpl.log(ServletContextImpl.java:360)] : Initializing Spring embedded WebApplicationContext
[2019-08-27 16:11:49.265] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Root WebApplicationContext: initialization completed in 5124 ms
[2019-08-27 16:11:49.562] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-27 16:11:49.562] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-27 16:11:49.587] [INFO ] - [main][ com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281)] : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@5203c80f
[2019-08-27 16:11:50.187] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Initializing ExecutorService
[2019-08-27 16:11:51.335] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'characterEncodingFilter' to: [/*]
[2019-08-27 16:11:51.337] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'webMvcMetricsFilter' to: [/*]
[2019-08-27 16:11:51.338] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'springSecurityFilterChain' to: [/*]
[2019-08-27 16:11:51.339] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'httpTraceFilter' to: [/*]
[2019-08-27 16:11:51.339] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Servlet dispatcherServlet mapped to [/]
[2019-08-27 16:11:56.389] [INFO ] - [main][ com.core.framework.config.redis.JedisClusterConfig.getJedisCluster(JedisClusterConfig.java:35)] : 进入redis集群初始化方法：访问集群地址为：[154.222.138.5:7000, 154.222.138.5:7001, 154.222.138.5:7002, 154.222.138.5:7003, 154.222.138.5:7004, 154.222.138.5:7005]
[2019-08-27 16:11:57.536] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyTradeServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-27 16:11:58.814] [WARN ] - [main][ com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:98)] :  [DUBBO] Failed to start NettyClient HAHE/192.168.1.12 connect to the server localhost/127.0.0.1:20881 (check == false, ignore and retry later!), cause: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,add,modifyWithSelectiveBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,gets,updateById,pageMaps,listByMap,getByPK&pid=1780&register.ip=192.168.1.12&side=consumer&timestamp=1566893517537) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,add,modifyWithSelectiveBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,gets,updateById,pageMaps,listByMap,getByPK&pid=1780&register.ip=192.168.1.12&side=consumer&timestamp=1566893517537) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:89)
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.<init>(NettyClient.java:59)
	at com.alibaba.dubbo.remoting.transport.netty.NettyTransporter.connect(NettyTransporter.java:37)
	at com.alibaba.dubbo.remoting.Transporter$Adaptive.connect(Transporter$Adaptive.java)
	at com.alibaba.dubbo.remoting.Transporters.connect(Transporters.java:75)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchanger.connect(HeaderExchanger.java:39)
	at com.alibaba.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:109)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.initClient(DubboProtocol.java:409)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getSharedClient(DubboProtocol.java:377)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getClients(DubboProtocol.java:354)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.refer(DubboProtocol.java:336)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:65)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:67)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:108)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:394)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:333)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:163)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:66)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceFieldElement.inject(ReferenceAnnotationBeanPostProcessor.java:367)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.postProcessPropertyValues(ReferenceAnnotationBeanPostProcessor.java:92)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1135)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1062)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:581)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:370)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:759)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:548)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:386)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at com.core.framework.BaseApplication.run(BaseApplication.java:66)
	at com.core.framework.BaseApplication.run(BaseApplication.java:76)
	at com.bittrade.currency.CurrencyApplication.main(CurrencyApplication.java:18)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-08-27 16:11:58.976] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-27 16:11:59.402] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Refreshing FeignContext-jdcloud-provider-biz: startup date [Tue Aug 27 16:11:59 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@349c1daf
[2019-08-27 16:11:59.431] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-27 16:12:00.321] [WARN ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'ServiceBean:TWalletTransferServiceImpl:com.bittrade.currency.api.service.ITWalletTransferService': Cannot resolve reference to bean 'TWalletTransferServiceImpl' while setting bean property 'ref'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'TWalletTransferServiceImpl': Injection of @Reference dependencies failed; nested exception is java.lang.IllegalStateException: No such any registry to reference com.common.bittrade.service.ITLegalCurrencyAccountService on the consumer 192.168.1.12 use dubbo version 2.6.2, please config <dubbo:registry address="..." /> to your spring config.
[2019-08-27 16:12:00.322] [WARN ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'TCurrencyController': Unsatisfied dependency expressed through field 'bizAuthService'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.bittrade.currency.feign.IBizService': FactoryBean threw exception on object creation; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'ServiceBean:TWalletTransferServiceImpl:com.bittrade.currency.api.service.ITWalletTransferService': Cannot resolve reference to bean 'TWalletTransferServiceImpl' while setting bean property 'ref'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'TWalletTransferServiceImpl': Injection of @Reference dependencies failed; nested exception is java.lang.IllegalStateException: No such any registry to reference com.common.bittrade.service.ITLegalCurrencyAccountService on the consumer 192.168.1.12 use dubbo version 2.6.2, please config <dubbo:registry address="..." /> to your spring config.
[2019-08-27 16:12:00.329] [WARN ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Destroy method 'close' on bean with name 'eurekaRegistration' threw an exception: org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
[2019-08-27 16:12:00.331] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Shutting down ExecutorService
[2019-08-27 16:12:00.333] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:1948)] : {dataSource-1} closing ...
[2019-08-27 16:12:00.338] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:2020)] : {dataSource-1} closed
[2019-08-27 16:12:00.771] [WARN ] - [DubboClientReconnectTimer-thread-1][ com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:171)] :  [DUBBO] client reconnect to localhost:20881 find error . url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,add,modifyWithSelectiveBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,gets,updateById,pageMaps,listByMap,getByPK&pid=1780&register.ip=192.168.1.12&side=consumer&timestamp=1566893517537, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,add,modifyWithSelectiveBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,gets,updateById,pageMaps,listByMap,getByPK&pid=1780&register.ip=192.168.1.12&side=consumer&timestamp=1566893517537) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:156)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	... 3 common frames omitted
[2019-08-27 16:13:06.124] [INFO ] - [main][?#?:?] : using logger: com.alibaba.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[2019-08-27 16:13:06.134] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-27 16:13:06.142] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {}
[2019-08-27 16:13:06.444] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@5b03b9fe: startup date [Tue Aug 27 16:13:06 CST 2019]; root of context hierarchy
[2019-08-27 16:13:06.846] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-27 16:13:06.914] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$5b1af4d2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:13:07.091] [INFO ] - [pool-1-thread-1][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$1.run(AwaitingNonWebApplicationListener.java:61)] :  [Dubbo] Current Spring Boot Application is await...
[2019-08-27 16:13:07.401] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-27 16:13:07.402] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {dubbo.application.id=service-consumer, dubbo.application.name=service-consumer, dubbo.consumer.check=false, dubbo.consumer.timeout=5000, dubbo.monitor=, dubbo.protocol.id=dubbo, dubbo.protocol.name=dubbo, dubbo.protocol.port=20881, dubbo.provider.timeout=5000, dubbo.registry.address=N/A, dubbo.registry.check=false, dubbo.registry.id=my-registry, dubbo.registry.protocol=zookeeper, dubbo.scan=}
[2019-08-27 16:13:07.440] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : The following profiles are active: common,data,eureka,dubbo_provider,dubbo_consumer
[2019-08-27 16:13:07.479] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@17cdf2d0: startup date [Tue Aug 27 16:13:07 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@5b03b9fe
[2019-08-27 16:13:09.017] [WARN ] - [main][ org.mybatis.logging.Logger.warn(Logger.java:44)] : No MyBatis mapper was found in '[com.baomidou.cloud.service.*.mapper*]' package. Please check your configuration.
[2019-08-27 16:13:09.752] [INFO ] - [main][ org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:172)] : Multiple Spring Data modules found, entering strict repository configuration mode!
[2019-08-27 16:13:10.761] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : BeanFactory id=0b547b7a-0fa4-3af7-ae3c-0c6a0399c7a8
[2019-08-27 16:13:10.807] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-27 16:13:11.093] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:13:11.106] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'transactionProperties' of type [com.core.framework.props.TransactionProperties$$EnhancerBySpringCGLIB$$5049b47b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:13:11.121] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$58ace747] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:13:11.125] [INFO ] - [main][ com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource(DruidDataSourceAutoConfigure.java:56)] : Init DruidDataSource
[2019-08-27 16:13:11.231] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:13:11.361] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003)] : {dataSource-1} inited
[2019-08-27 16:13:11.362] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:13:11.393] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:13:11.405] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$$EnhancerBySpringCGLIB$$d374ecdf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:13:11.423] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:13:11.429] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:13:11.440] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration$$EnhancerBySpringCGLIB$$ec018a44] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:13:11.478] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:13:11.479] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'transactionConfig' of type [com.core.framework.config.TransactionConfig$$EnhancerBySpringCGLIB$$45056f20] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:13:11.506] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'defaultPointcutAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:13:11.524] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3f00f1d5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:13:11.819] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' of type [com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration$$EnhancerBySpringCGLIB$$4e029747] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:13:11.833] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:13:11.842] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:13:11.846] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:13:11.849] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:13:11.852] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:13:11.907] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$5b1af4d2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 16:13:12.471] [INFO ] - [main][ org.xnio.Xnio.<clinit>(Xnio.java:104)] : XNIO version 3.3.8.Final
[2019-08-27 16:13:12.504] [INFO ] - [main][ org.xnio.nio.NioXnio.<clinit>(NioXnio.java:55)] : XNIO NIO Implementation Version 3.3.8.Final
[2019-08-27 16:13:12.578] [WARN ] - [main][ io.undertow.websockets.jsr.Bootstrap.handleDeployment(Bootstrap.java:67)] : UT026009: XNIO worker was not set on WebSocketDeploymentInfo, the default worker will be used
[2019-08-27 16:13:12.579] [WARN ] - [main][ io.undertow.websockets.jsr.Bootstrap.handleDeployment(Bootstrap.java:76)] : UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
[2019-08-27 16:13:12.630] [INFO ] - [main][ io.undertow.servlet.spec.ServletContextImpl.log(ServletContextImpl.java:360)] : Initializing Spring embedded WebApplicationContext
[2019-08-27 16:13:12.631] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Root WebApplicationContext: initialization completed in 5152 ms
[2019-08-27 16:13:12.970] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-27 16:13:12.971] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-27 16:13:12.997] [INFO ] - [main][ com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281)] : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@34aa8b61
[2019-08-27 16:13:13.655] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Initializing ExecutorService
[2019-08-27 16:13:14.729] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'characterEncodingFilter' to: [/*]
[2019-08-27 16:13:14.731] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'webMvcMetricsFilter' to: [/*]
[2019-08-27 16:13:14.731] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'springSecurityFilterChain' to: [/*]
[2019-08-27 16:13:14.732] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'httpTraceFilter' to: [/*]
[2019-08-27 16:13:14.732] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Servlet dispatcherServlet mapped to [/]
[2019-08-27 16:13:17.959] [INFO ] - [main][ com.core.framework.config.redis.JedisClusterConfig.getJedisCluster(JedisClusterConfig.java:35)] : 进入redis集群初始化方法：访问集群地址为：[154.222.138.5:7000, 154.222.138.5:7001, 154.222.138.5:7002, 154.222.138.5:7003, 154.222.138.5:7004, 154.222.138.5:7005]
[2019-08-27 16:13:19.168] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyTradeServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-27 16:13:20.447] [WARN ] - [main][ com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:98)] :  [DUBBO] Failed to start NettyClient HAHE/192.168.1.12 connect to the server localhost/127.0.0.1:20881 (check == false, ignore and retry later!), cause: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,add,modifyWithSelectiveBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,gets,updateById,pageMaps,listByMap,getByPK&pid=1404&register.ip=192.168.1.12&side=consumer&timestamp=1566893599169) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,add,modifyWithSelectiveBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,gets,updateById,pageMaps,listByMap,getByPK&pid=1404&register.ip=192.168.1.12&side=consumer&timestamp=1566893599169) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:89)
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.<init>(NettyClient.java:59)
	at com.alibaba.dubbo.remoting.transport.netty.NettyTransporter.connect(NettyTransporter.java:37)
	at com.alibaba.dubbo.remoting.Transporter$Adaptive.connect(Transporter$Adaptive.java)
	at com.alibaba.dubbo.remoting.Transporters.connect(Transporters.java:75)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchanger.connect(HeaderExchanger.java:39)
	at com.alibaba.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:109)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.initClient(DubboProtocol.java:409)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getSharedClient(DubboProtocol.java:377)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getClients(DubboProtocol.java:354)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.refer(DubboProtocol.java:336)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:108)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:67)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:65)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:394)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:333)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:163)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:66)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceFieldElement.inject(ReferenceAnnotationBeanPostProcessor.java:367)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.postProcessPropertyValues(ReferenceAnnotationBeanPostProcessor.java:92)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1135)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1062)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:581)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:370)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:759)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:548)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:386)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at com.core.framework.BaseApplication.run(BaseApplication.java:66)
	at com.core.framework.BaseApplication.run(BaseApplication.java:76)
	at com.bittrade.currency.CurrencyApplication.main(CurrencyApplication.java:18)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-08-27 16:13:20.614] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-27 16:13:21.021] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Refreshing FeignContext-jdcloud-provider-biz: startup date [Tue Aug 27 16:13:21 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@17cdf2d0
[2019-08-27 16:13:21.051] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-27 16:13:22.201] [INFO ] - [main][ com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(AbstractServer.java:65)] :  [DUBBO] Start NettyServer bind /0.0.0.0:20881, export /192.168.1.12:20881, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-27 16:13:22.420] [INFO ] - [DubboClientReconnectTimer-thread-1][ com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:282)] :  [DUBBO] Successed connect to server /192.168.1.12:20881 from NettyClient 192.168.1.12 using dubbo version 2.6.2, channel is NettyChannel [channel=[id: 0x79dcfbf8, /192.168.1.12:63480 => /192.168.1.12:20881]], dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-27 16:13:22.454] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Refreshing FeignContext-jdcloud-gateway: startup date [Tue Aug 27 16:13:22 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@17cdf2d0
[2019-08-27 16:13:22.481] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-27 16:13:22.682] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.entrust.api.service.ITEntrustServicedubbo://localhost:20882 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-27 16:13:23.709] [WARN ] - [main][ com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:98)] :  [DUBBO] Failed to start NettyClient HAHE/192.168.1.12 connect to the server localhost/127.0.0.1:20882 (check == false, ignore and retry later!), cause: client(url: dubbo://localhost:20882/com.bittrade.entrust.api.service.ITEntrustService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.entrust.api.service.ITEntrustService&methods=queryEntrustInfoByUserId,removeById,lambdaQuery,testByDTO,removeByMap,listByIds,removeBy,getBy,testByPage,updateBatchById,getsBy,saveOrUpdate,add,modifyWithSelectiveBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,deal,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,updateOnMatch,removeByIds,get,lambdaUpdate,killOrder,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,gets,updateById,pageMaps,listByMap,getByPK&pid=1404&register.ip=192.168.1.12&side=consumer&timestamp=1566893602684) failed to connect to server localhost/127.0.0.1:20882, error message is:Connection refused: no further information, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20882/com.bittrade.entrust.api.service.ITEntrustService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.entrust.api.service.ITEntrustService&methods=queryEntrustInfoByUserId,removeById,lambdaQuery,testByDTO,removeByMap,listByIds,removeBy,getBy,testByPage,updateBatchById,getsBy,saveOrUpdate,add,modifyWithSelectiveBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,deal,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,updateOnMatch,removeByIds,get,lambdaUpdate,killOrder,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,gets,updateById,pageMaps,listByMap,getByPK&pid=1404&register.ip=192.168.1.12&side=consumer&timestamp=1566893602684) failed to connect to server localhost/127.0.0.1:20882, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:89)
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.<init>(NettyClient.java:59)
	at com.alibaba.dubbo.remoting.transport.netty.NettyTransporter.connect(NettyTransporter.java:37)
	at com.alibaba.dubbo.remoting.Transporter$Adaptive.connect(Transporter$Adaptive.java)
	at com.alibaba.dubbo.remoting.Transporters.connect(Transporters.java:75)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchanger.connect(HeaderExchanger.java:39)
	at com.alibaba.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:109)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.initClient(DubboProtocol.java:409)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getSharedClient(DubboProtocol.java:377)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getClients(DubboProtocol.java:354)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.refer(DubboProtocol.java:336)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:108)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:67)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:65)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:394)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:333)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:163)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:66)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceFieldElement.inject(ReferenceAnnotationBeanPostProcessor.java:367)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.postProcessPropertyValues(ReferenceAnnotationBeanPostProcessor.java:92)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:759)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:548)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:386)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at com.core.framework.BaseApplication.run(BaseApplication.java:66)
	at com.core.framework.BaseApplication.run(BaseApplication.java:76)
	at com.bittrade.currency.CurrencyApplication.main(CurrencyApplication.java:18)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-08-27 16:13:23.772] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.entrust.api.service.ITEntrustRecordServicedubbo://localhost:20882 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-27 16:13:23.833] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.entrust.api.service.ITKlineServicedubbo://localhost:20882 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-27 16:13:25.074] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/funds/totalNetAssets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.ConversionVo> com.bittrade.currency.controller.FundsController.totalNetAssets(com.core.web.constant.entity.LoginUser)
[2019-08-27 16:13:25.083] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/jobTask/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-27 16:13:25.084] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/jobTask/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-27 16:13:25.084] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/jobTask/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-27 16:13:25.085] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/jobTask/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-27 16:13:25.086] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/jobTask/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-27 16:13:25.087] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/jobTask/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-27 16:13:25.087] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/jobTask/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-27 16:13:25.088] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/jobTask/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-27 16:13:25.089] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/jobTask/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-27 16:13:25.090] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/jobTask/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-27 16:13:25.090] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/jobTask/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-27 16:13:25.091] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/jobTask/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-27 16:13:25.092] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/jobTask/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-27 16:13:25.092] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/jobTask/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-27 16:13:25.093] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/jobTask/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-27 16:13:25.097] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tAccountManage/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-27 16:13:25.098] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tAccountManage/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-27 16:13:25.099] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tAccountManage/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-27 16:13:25.100] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tAccountManage/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-27 16:13:25.100] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tAccountManage/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-27 16:13:25.101] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tAccountManage/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-27 16:13:25.102] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tAccountManage/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-27 16:13:25.103] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tAccountManage/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-27 16:13:25.103] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tAccountManage/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-27 16:13:25.104] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tAccountManage/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-27 16:13:25.105] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tAccountManage/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-27 16:13:25.105] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tAccountManage/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-27 16:13:25.106] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tAccountManage/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-27 16:13:25.107] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tAccountManage/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-27 16:13:25.107] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tAccountManage/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-27 16:13:25.112] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrencyAddress/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-27 16:13:25.113] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrencyAddress/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-27 16:13:25.113] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrencyAddress/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-27 16:13:25.114] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrencyAddress/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-27 16:13:25.115] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrencyAddress/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-27 16:13:25.115] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrencyAddress/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-27 16:13:25.116] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrencyAddress/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-27 16:13:25.117] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrencyAddress/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-27 16:13:25.117] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrencyAddress/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-27 16:13:25.118] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrencyAddress/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-27 16:13:25.119] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrencyAddress/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-27 16:13:25.119] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrencyAddress/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-27 16:13:25.120] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrencyAddress/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-27 16:13:25.121] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrencyAddress/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-27 16:13:25.121] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrencyAddress/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-27 16:13:25.127] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrency/ta],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.model.TCurrency>> com.bittrade.currency.controller.TCurrencyController.ta(com.bittrade.pojo.dto.TCurrencyDTO)
[2019-08-27 16:13:25.128] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrency/getRate/{legalCurrencyId}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.String> com.bittrade.currency.controller.TCurrencyController.getRate(java.lang.String)
[2019-08-27 16:13:25.128] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrency/feignCall],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.currency.controller.TCurrencyController.feignCall(com.alibaba.fastjson.JSONObject,javax.servlet.http.HttpServletRequest)
[2019-08-27 16:13:25.129] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrency/findAllLegalCurrency],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.model.TCurrency>> com.bittrade.currency.controller.TCurrencyController.findAllLegalCurrency()
[2019-08-27 16:13:25.130] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrency/findUsableCurrency],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public java.util.List<java.lang.String> com.bittrade.currency.controller.TCurrencyController.findUsableCurrency()
[2019-08-27 16:13:25.131] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrency/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-27 16:13:25.131] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrency/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-27 16:13:25.132] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrency/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-27 16:13:25.132] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrency/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-27 16:13:25.133] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrency/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-27 16:13:25.134] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrency/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-27 16:13:25.134] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrency/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-27 16:13:25.135] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrency/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-27 16:13:25.136] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrency/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-27 16:13:25.136] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrency/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-27 16:13:25.137] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrency/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-27 16:13:25.138] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrency/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-27 16:13:25.138] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrency/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-27 16:13:25.139] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrency/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-27 16:13:25.140] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrency/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-27 16:13:25.144] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrencyOptional/addOptional],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.String> com.bittrade.currency.controller.TCurrencyOptionalController.addOptional(com.bittrade.pojo.dto.TCurrencyOptionalDTO)
[2019-08-27 16:13:25.145] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrencyOptional/deleteOptional],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.String> com.bittrade.currency.controller.TCurrencyOptionalController.deleteOptional(com.bittrade.pojo.dto.TCurrencyOptionalDTO)
[2019-08-27 16:13:25.146] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrencyOptional/findOptionalTradeByUserId/{userId}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.TransactionPairVO>> com.bittrade.currency.controller.TCurrencyOptionalController.findOptionalByUserId(java.lang.String)
[2019-08-27 16:13:25.146] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrencyOptional/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-27 16:13:25.147] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrencyOptional/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-27 16:13:25.148] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrencyOptional/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-27 16:13:25.148] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrencyOptional/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-27 16:13:25.149] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrencyOptional/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-27 16:13:25.149] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrencyOptional/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-27 16:13:25.150] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrencyOptional/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-27 16:13:25.151] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrencyOptional/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-27 16:13:25.152] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrencyOptional/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-27 16:13:25.154] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrencyOptional/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-27 16:13:25.155] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrencyOptional/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-27 16:13:25.156] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrencyOptional/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-27 16:13:25.157] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrencyOptional/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-27 16:13:25.157] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrencyOptional/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-27 16:13:25.158] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrencyOptional/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-27 16:13:25.164] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrencyTrade/queryCurrencyTradeAtFirst],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.CurrencyTradeVO> com.bittrade.currency.controller.TCurrencyTradeController.queryCurrencyTradeAtFirst(com.bittrade.pojo.dto.TCurrencyTradeDTO)
[2019-08-27 16:13:25.164] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrencyTrade/findTradeByCurrencyId2/{currencyId2}/{userId}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.TransactionPairVO>> com.bittrade.currency.controller.TCurrencyTradeController.findTradeByCurrencyId2(java.lang.String,java.lang.String)
[2019-08-27 16:13:25.165] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrencyTrade/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-27 16:13:25.166] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrencyTrade/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-27 16:13:25.166] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrencyTrade/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-27 16:13:25.167] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrencyTrade/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-27 16:13:25.168] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrencyTrade/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-27 16:13:25.168] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrencyTrade/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-27 16:13:25.169] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrencyTrade/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-27 16:13:25.169] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrencyTrade/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-27 16:13:25.170] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrencyTrade/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-27 16:13:25.170] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrencyTrade/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-27 16:13:25.171] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrencyTrade/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-27 16:13:25.172] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrencyTrade/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-27 16:13:25.172] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrencyTrade/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-27 16:13:25.173] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrencyTrade/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-27 16:13:25.174] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tCurrencyTrade/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-27 16:13:25.178] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tEntrust/queryPresentEntrustByUserId],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.core.common.DTO.PageDTO<com.bittrade.pojo.model.TEntrust>> com.bittrade.currency.controller.TEntrustController.queryPresentEntrustByUserId(com.bittrade.pojo.model.TEntrust)
[2019-08-27 16:13:25.179] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tEntrust/queryHistoryEntrustByUserId],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.core.common.DTO.PageDTO<com.bittrade.pojo.model.TEntrust>> com.bittrade.currency.controller.TEntrustController.queryHistoryEntrustByUserId(com.bittrade.pojo.model.TEntrust)
[2019-08-27 16:13:25.180] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tEntrust/queryEntrustInfoByUserId/{userId}/{entrustId}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.TEntrustInfoVO> com.bittrade.currency.controller.TEntrustController.queryEntrustInfoByUserId(java.lang.String,java.lang.String)
[2019-08-27 16:13:25.180] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tEntrust/deal],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.String> com.bittrade.currency.controller.TEntrustController.deal(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.DealDTO)
[2019-08-27 16:13:25.181] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tEntrust/killOrder/{entrustId}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.currency.controller.TEntrustController.killOrder(java.lang.String)
[2019-08-27 16:13:25.182] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tEntrust/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-27 16:13:25.182] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tEntrust/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-27 16:13:25.183] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tEntrust/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-27 16:13:25.184] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tEntrust/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-27 16:13:25.184] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tEntrust/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-27 16:13:25.185] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tEntrust/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-27 16:13:25.185] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tEntrust/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-27 16:13:25.186] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tEntrust/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-27 16:13:25.187] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tEntrust/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-27 16:13:25.187] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tEntrust/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-27 16:13:25.188] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tEntrust/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-27 16:13:25.188] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tEntrust/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-27 16:13:25.189] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tEntrust/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-27 16:13:25.190] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tEntrust/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-27 16:13:25.190] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tEntrust/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-27 16:13:25.195] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tEntrustRecord/queryDealEntrustByUserId/{userId}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.model.TEntrustRecord>> com.bittrade.currency.controller.TEntrustRecordController.queryDealEntrustByUserId(java.lang.String)
[2019-08-27 16:13:25.195] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tEntrustRecord/realTimeTransaction/{currencyTradeId}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.TRealTimeTransactionVO>> com.bittrade.currency.controller.TEntrustRecordController.realTimeTransaction(java.lang.String)
[2019-08-27 16:13:25.196] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tEntrustRecord/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-27 16:13:25.196] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tEntrustRecord/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-27 16:13:25.197] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tEntrustRecord/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-27 16:13:25.198] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tEntrustRecord/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-27 16:13:25.198] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tEntrustRecord/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-27 16:13:25.199] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tEntrustRecord/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-27 16:13:25.200] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tEntrustRecord/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-27 16:13:25.201] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tEntrustRecord/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-27 16:13:25.201] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tEntrustRecord/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-27 16:13:25.202] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tEntrustRecord/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-27 16:13:25.202] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tEntrustRecord/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-27 16:13:25.203] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tEntrustRecord/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-27 16:13:25.203] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tEntrustRecord/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-27 16:13:25.204] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tEntrustRecord/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-27 16:13:25.205] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tEntrustRecord/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-27 16:13:25.209] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tKline/queryKLineBySymbol/{currencyTradeId}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.QueryKLineVO> com.bittrade.currency.controller.TKlineController.queryKLineBySymbol(java.lang.Integer)
[2019-08-27 16:13:25.210] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tKline/queryKLine],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.QueryKLineVO>> com.bittrade.currency.controller.TKlineController.queryKLine(com.bittrade.pojo.dto.QueryKLineDto)
[2019-08-27 16:13:25.210] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tKline/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-27 16:13:25.211] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tKline/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-27 16:13:25.212] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tKline/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-27 16:13:25.212] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tKline/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-27 16:13:25.213] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tKline/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-27 16:13:25.213] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tKline/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-27 16:13:25.214] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tKline/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-27 16:13:25.215] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tKline/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-27 16:13:25.215] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tKline/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-27 16:13:25.216] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tKline/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-27 16:13:25.216] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tKline/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-27 16:13:25.217] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tKline/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-27 16:13:25.217] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tKline/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-27 16:13:25.218] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tKline/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-27 16:13:25.219] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tKline/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-27 16:13:25.222] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tParamConfig/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-27 16:13:25.223] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tParamConfig/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-27 16:13:25.223] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tParamConfig/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-27 16:13:25.224] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tParamConfig/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-27 16:13:25.224] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tParamConfig/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-27 16:13:25.225] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tParamConfig/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-27 16:13:25.226] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tParamConfig/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-27 16:13:25.226] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tParamConfig/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-27 16:13:25.227] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tParamConfig/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-27 16:13:25.227] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tParamConfig/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-27 16:13:25.228] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tParamConfig/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-27 16:13:25.229] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tParamConfig/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-27 16:13:25.229] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tParamConfig/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-27 16:13:25.230] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tParamConfig/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-27 16:13:25.230] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tParamConfig/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-27 16:13:25.234] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tTicker/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-27 16:13:25.235] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tTicker/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-27 16:13:25.236] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tTicker/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-27 16:13:25.236] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tTicker/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-27 16:13:25.237] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tTicker/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-27 16:13:25.237] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tTicker/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-27 16:13:25.238] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tTicker/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-27 16:13:25.239] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tTicker/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-27 16:13:25.239] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tTicker/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-27 16:13:25.240] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tTicker/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-27 16:13:25.240] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tTicker/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-27 16:13:25.241] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tTicker/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-27 16:13:25.241] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tTicker/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-27 16:13:25.242] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tTicker/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-27 16:13:25.243] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tTicker/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-27 16:13:25.247] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tTransferDirection/direction],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.DirectionVO>> com.bittrade.currency.controller.TTransferDirectionController.direction()
[2019-08-27 16:13:25.248] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tTransferDirection/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-27 16:13:25.248] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tTransferDirection/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-27 16:13:25.249] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tTransferDirection/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-27 16:13:25.250] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tTransferDirection/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-27 16:13:25.250] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tTransferDirection/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-27 16:13:25.251] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tTransferDirection/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-27 16:13:25.252] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tTransferDirection/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-27 16:13:25.252] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tTransferDirection/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-27 16:13:25.253] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tTransferDirection/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-27 16:13:25.254] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tTransferDirection/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-27 16:13:25.254] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tTransferDirection/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-27 16:13:25.255] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tTransferDirection/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-27 16:13:25.256] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tTransferDirection/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-27 16:13:25.256] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tTransferDirection/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-27 16:13:25.257] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tTransferDirection/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-27 16:13:25.260] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tUserCapitalAccountRecord/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-27 16:13:25.261] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tUserCapitalAccountRecord/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-27 16:13:25.262] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tUserCapitalAccountRecord/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-27 16:13:25.262] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tUserCapitalAccountRecord/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-27 16:13:25.264] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tUserCapitalAccountRecord/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-27 16:13:25.264] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tUserCapitalAccountRecord/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-27 16:13:25.265] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tUserCapitalAccountRecord/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-27 16:13:25.265] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tUserCapitalAccountRecord/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-27 16:13:25.266] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tUserCapitalAccountRecord/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-27 16:13:25.267] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tUserCapitalAccountRecord/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-27 16:13:25.267] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tUserCapitalAccountRecord/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-27 16:13:25.268] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tUserCapitalAccountRecord/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-27 16:13:25.270] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tUserCapitalAccountRecord/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-27 16:13:25.271] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tUserCapitalAccountRecord/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-27 16:13:25.271] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tUserCapitalAccountRecord/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-27 16:13:25.276] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tWallet/detail],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetsVO>> com.bittrade.currency.controller.TWalletController.detail(com.core.web.constant.entity.LoginUser)
[2019-08-27 16:13:25.277] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tWallet/queryCoinAccountByUserId/{userId}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.CoinAccountVO> com.bittrade.currency.controller.TWalletController.queryCoinAccountByUserId(java.lang.Integer)
[2019-08-27 16:13:25.278] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tWallet/conversionTotal],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.ConversionVo> com.bittrade.currency.controller.TWalletController.conversionTotal(com.core.web.constant.entity.LoginUser)
[2019-08-27 16:13:25.279] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tWallet/queryUserWallet/{userId}/{currencyTradeId}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.UserWalletVO> com.bittrade.currency.controller.TWalletController.queryUserWallet(java.lang.Integer,java.lang.Integer)
[2019-08-27 16:13:25.280] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tWallet/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-27 16:13:25.281] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tWallet/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-27 16:13:25.281] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tWallet/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-27 16:13:25.282] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tWallet/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-27 16:13:25.283] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tWallet/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-27 16:13:25.283] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tWallet/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-27 16:13:25.284] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tWallet/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-27 16:13:25.285] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tWallet/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-27 16:13:25.285] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tWallet/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-27 16:13:25.286] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tWallet/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-27 16:13:25.287] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tWallet/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-27 16:13:25.288] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tWallet/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-27 16:13:25.289] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tWallet/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-27 16:13:25.290] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tWallet/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-27 16:13:25.291] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tWallet/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-27 16:13:25.297] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tWalletRecord/queryBiBiAccountRecord],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.RecordVO>> com.bittrade.currency.controller.TWalletRecordController.queryBiBiAccountRecord(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.AccountTypeDto)
[2019-08-27 16:13:25.298] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tWalletRecord/queryTypeForFund],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetRecordTypeVO>> com.bittrade.currency.controller.TWalletRecordController.queryTypeForFund()
[2019-08-27 16:13:25.299] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tWalletRecord/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-27 16:13:25.300] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tWalletRecord/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-27 16:13:25.300] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tWalletRecord/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-27 16:13:25.301] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tWalletRecord/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-27 16:13:25.302] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tWalletRecord/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-27 16:13:25.302] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tWalletRecord/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-27 16:13:25.303] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tWalletRecord/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-27 16:13:25.303] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tWalletRecord/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-27 16:13:25.304] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tWalletRecord/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-27 16:13:25.304] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tWalletRecord/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-27 16:13:25.305] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tWalletRecord/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-27 16:13:25.305] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tWalletRecord/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-27 16:13:25.306] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tWalletRecord/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-27 16:13:25.306] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tWalletRecord/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-27 16:13:25.307] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tWalletRecord/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-27 16:13:25.312] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tWalletTransfer/availableBalance/{accountId}/{currencyName}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.math.BigDecimal> com.bittrade.currency.controller.TWalletTransferController.availableBalanceFeign(com.core.web.constant.entity.LoginUser,java.lang.Long,java.lang.String)
[2019-08-27 16:13:25.313] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tWalletTransfer/transferOfFunds],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.currency.controller.TWalletTransferController.transferOfFunds(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.TransferDto)
[2019-08-27 16:13:25.314] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tWalletTransfer/togetherCoin/{accountId1}/{accountId2}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.CoinVo>> com.bittrade.currency.controller.TWalletTransferController.togetherCoin(java.lang.Long,java.lang.Long)
[2019-08-27 16:13:25.314] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tWalletTransfer/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-27 16:13:25.315] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tWalletTransfer/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-27 16:13:25.315] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tWalletTransfer/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-27 16:13:25.316] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tWalletTransfer/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-27 16:13:25.317] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tWalletTransfer/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-27 16:13:25.317] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tWalletTransfer/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-27 16:13:25.318] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tWalletTransfer/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-27 16:13:25.318] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tWalletTransfer/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-27 16:13:25.319] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tWalletTransfer/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-27 16:13:25.320] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tWalletTransfer/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-27 16:13:25.320] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tWalletTransfer/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-27 16:13:25.321] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tWalletTransfer/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-27 16:13:25.321] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tWalletTransfer/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-27 16:13:25.322] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tWalletTransfer/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-27 16:13:25.323] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tWalletTransfer/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-27 16:13:25.325] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wallet/extractRecord/{currentPage}/{pageSize}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public java.util.List<com.bittrade.pojo.model.WWithdrawWalletBill> com.bittrade.currency.controller.WalletController.extractRecord(org.springframework.ui.Model,java.lang.Integer,java.lang.Integer)
[2019-08-27 16:13:25.325] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wallet/rechargeRecord/{currentPage}/{pageSize}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public java.util.List<com.bittrade.pojo.model.WUserWalletBill> com.bittrade.currency.controller.WalletController.rechargeRecord(org.springframework.ui.Model,java.lang.Integer,java.lang.Integer)
[2019-08-27 16:13:25.328] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wCoinConfig/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-27 16:13:25.329] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wCoinConfig/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-27 16:13:25.329] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wCoinConfig/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-27 16:13:25.330] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wCoinConfig/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-27 16:13:25.331] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wCoinConfig/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-27 16:13:25.331] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wCoinConfig/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-27 16:13:25.332] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wCoinConfig/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-27 16:13:25.332] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wCoinConfig/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-27 16:13:25.333] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wCoinConfig/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-27 16:13:25.333] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wCoinConfig/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-27 16:13:25.334] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wCoinConfig/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-27 16:13:25.334] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wCoinConfig/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-27 16:13:25.335] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wCoinConfig/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-27 16:13:25.336] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wCoinConfig/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-27 16:13:25.336] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wCoinConfig/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-27 16:13:25.341] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wConfigWallet/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-27 16:13:25.341] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wConfigWallet/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-27 16:13:25.342] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wConfigWallet/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-27 16:13:25.343] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wConfigWallet/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-27 16:13:25.343] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wConfigWallet/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-27 16:13:25.344] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wConfigWallet/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-27 16:13:25.344] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wConfigWallet/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-27 16:13:25.345] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wConfigWallet/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-27 16:13:25.345] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wConfigWallet/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-27 16:13:25.346] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wConfigWallet/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-27 16:13:25.347] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wConfigWallet/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-27 16:13:25.347] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wConfigWallet/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-27 16:13:25.348] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wConfigWallet/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-27 16:13:25.348] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wConfigWallet/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-27 16:13:25.349] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wConfigWallet/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-27 16:13:25.352] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wUserWalletBill/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-27 16:13:25.352] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wUserWalletBill/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-27 16:13:25.353] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wUserWalletBill/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-27 16:13:25.354] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wUserWalletBill/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-27 16:13:25.354] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wUserWalletBill/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-27 16:13:25.355] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wUserWalletBill/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-27 16:13:25.355] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wUserWalletBill/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-27 16:13:25.356] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wUserWalletBill/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-27 16:13:25.356] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wUserWalletBill/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-27 16:13:25.357] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wUserWalletBill/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-27 16:13:25.358] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wUserWalletBill/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-27 16:13:25.358] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wUserWalletBill/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-27 16:13:25.359] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wUserWalletBill/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-27 16:13:25.359] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wUserWalletBill/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-27 16:13:25.360] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wUserWalletBill/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-27 16:13:25.363] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wUserWallet/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-27 16:13:25.363] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wUserWallet/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-27 16:13:25.364] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wUserWallet/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-27 16:13:25.365] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wUserWallet/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-27 16:13:25.365] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wUserWallet/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-27 16:13:25.366] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wUserWallet/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-27 16:13:25.366] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wUserWallet/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-27 16:13:25.367] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wUserWallet/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-27 16:13:25.368] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wUserWallet/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-27 16:13:25.368] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wUserWallet/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-27 16:13:25.369] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wUserWallet/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-27 16:13:25.369] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wUserWallet/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-27 16:13:25.370] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wUserWallet/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-27 16:13:25.370] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wUserWallet/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-27 16:13:25.371] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wUserWallet/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-27 16:13:25.374] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wWithdrawWalletBill/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-27 16:13:25.374] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wWithdrawWalletBill/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-27 16:13:25.375] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wWithdrawWalletBill/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-27 16:13:25.376] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wWithdrawWalletBill/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-27 16:13:25.376] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wWithdrawWalletBill/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-27 16:13:25.377] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wWithdrawWalletBill/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-27 16:13:25.377] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wWithdrawWalletBill/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-27 16:13:25.378] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wWithdrawWalletBill/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-27 16:13:25.378] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wWithdrawWalletBill/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-27 16:13:25.379] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wWithdrawWalletBill/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-27 16:13:25.379] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wWithdrawWalletBill/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-27 16:13:25.380] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wWithdrawWalletBill/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-27 16:13:25.381] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wWithdrawWalletBill/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-27 16:13:25.381] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wWithdrawWalletBill/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-27 16:13:25.382] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wWithdrawWalletBill/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-27 16:13:25.389] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tLegalCurrencyAccount/detail],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetsVO>> com.common.bittrade.controller.TLegalCurrencyAccountController.detail(com.core.web.constant.entity.LoginUser)
[2019-08-27 16:13:25.390] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tLegalCurrencyAccount/availableBalanceFeign],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.lang.String com.common.bittrade.controller.TLegalCurrencyAccountController.availableBalanceFeign(java.lang.Long,java.lang.String)
[2019-08-27 16:13:25.391] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tLegalCurrencyAccount/conversionTotal],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.ConversionVo> com.common.bittrade.controller.TLegalCurrencyAccountController.totalConversion(com.core.web.constant.entity.LoginUser)
[2019-08-27 16:13:25.391] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tLegalCurrencyAccount/getAssetsFeign],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.math.BigDecimal com.common.bittrade.controller.TLegalCurrencyAccountController.getAssetsFeign(java.lang.Long)
[2019-08-27 16:13:25.392] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tLegalCurrencyAccount/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-27 16:13:25.393] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tLegalCurrencyAccount/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-27 16:13:25.393] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tLegalCurrencyAccount/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-27 16:13:25.394] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tLegalCurrencyAccount/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-27 16:13:25.394] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tLegalCurrencyAccount/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-27 16:13:25.395] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tLegalCurrencyAccount/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-27 16:13:25.395] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tLegalCurrencyAccount/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-27 16:13:25.396] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tLegalCurrencyAccount/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-27 16:13:25.397] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tLegalCurrencyAccount/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-27 16:13:25.397] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tLegalCurrencyAccount/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-27 16:13:25.398] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tLegalCurrencyAccount/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-27 16:13:25.398] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tLegalCurrencyAccount/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-27 16:13:25.399] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tLegalCurrencyAccount/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-27 16:13:25.399] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tLegalCurrencyAccount/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-27 16:13:25.400] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tLegalCurrencyAccount/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-27 16:13:25.403] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tLegalCurrencyCoin/legalCurrency_coins],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.common.bittrade.controller.TLegalCurrencyCoinController.listLegalCurrencyCoins()
[2019-08-27 16:13:25.403] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tLegalCurrencyCoin/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-27 16:13:25.404] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tLegalCurrencyCoin/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-27 16:13:25.405] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tLegalCurrencyCoin/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-27 16:13:25.405] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tLegalCurrencyCoin/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-27 16:13:25.406] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tLegalCurrencyCoin/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-27 16:13:25.406] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tLegalCurrencyCoin/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-27 16:13:25.407] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tLegalCurrencyCoin/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-27 16:13:25.407] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tLegalCurrencyCoin/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-27 16:13:25.408] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tLegalCurrencyCoin/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-27 16:13:25.408] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tLegalCurrencyCoin/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-27 16:13:25.409] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tLegalCurrencyCoin/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-27 16:13:25.409] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tLegalCurrencyCoin/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-27 16:13:25.410] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tLegalCurrencyCoin/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-27 16:13:25.410] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tLegalCurrencyCoin/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-27 16:13:25.411] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tLegalCurrencyCoin/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-27 16:13:25.414] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tLegalCurrencyRecord/queryAccountRecord],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.RecordVO>> com.common.bittrade.controller.TLegalCurrencyRecordController.queryAccountRecord(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.AccountTypeDto)
[2019-08-27 16:13:25.415] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tLegalCurrencyRecord/queryType],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetRecordTypeVO>> com.common.bittrade.controller.TLegalCurrencyRecordController.queryTypeForFund()
[2019-08-27 16:13:25.415] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tLegalCurrencyRecord/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-27 16:13:25.416] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tLegalCurrencyRecord/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-27 16:13:25.416] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tLegalCurrencyRecord/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-27 16:13:25.417] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tLegalCurrencyRecord/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-27 16:13:25.417] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tLegalCurrencyRecord/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-27 16:13:25.418] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tLegalCurrencyRecord/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-27 16:13:25.418] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tLegalCurrencyRecord/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-27 16:13:25.419] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tLegalCurrencyRecord/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-27 16:13:25.419] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tLegalCurrencyRecord/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-27 16:13:25.420] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tLegalCurrencyRecord/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-27 16:13:25.420] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tLegalCurrencyRecord/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-27 16:13:25.421] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tLegalCurrencyRecord/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-27 16:13:25.421] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tLegalCurrencyRecord/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-27 16:13:25.422] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tLegalCurrencyRecord/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-27 16:13:25.422] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/tLegalCurrencyRecord/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-27 16:13:25.424] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wCoin/Withdrawcoinlist],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO com.common.bittrade.controller.WCoinController.withdrawcoinlist()
[2019-08-27 16:13:25.424] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wCoin/rechargecoinlist],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO com.common.bittrade.controller.WCoinController.rechargecoinlist()
[2019-08-27 16:13:25.425] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wCoin/getList],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.model.WCoin>> com.common.bittrade.controller.WCoinController.getList()
[2019-08-27 16:13:25.426] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wWalletAccount/detail],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetsVO>> com.common.bittrade.controller.WWalletAccountController.detail(com.core.web.constant.entity.LoginUser)
[2019-08-27 16:13:25.427] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wWalletAccount/conversionTotal],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.ConversionVo> com.common.bittrade.controller.WWalletAccountController.totalConversion(com.core.web.constant.entity.LoginUser)
[2019-08-27 16:13:25.428] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wWalletAccountRecord/queryFundAccountRecord],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.RecordVO>> com.common.bittrade.controller.WWalletAccountRecordController.queryFundAccountRecord(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.AccountTypeDto)
[2019-08-27 16:13:25.428] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wWalletAccountRecord/queryCurrencies],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.model.WCoin>> com.common.bittrade.controller.WWalletAccountRecordController.queryCurrencies()
[2019-08-27 16:13:25.429] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/wWalletAccountRecord/queryTypeForFund],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetRecordTypeVO>> com.common.bittrade.controller.WWalletAccountRecordController.queryTypeForFund()
[2019-08-27 16:13:25.432] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
[2019-08-27 16:13:25.433] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
[2019-08-27 16:13:25.434] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
[2019-08-27 16:13:25.439] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2019-08-27 16:13:25.439] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2019-08-27 16:13:25.616] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Exposing 2 endpoint(s) beneath base path '/actuator'
[2019-08-27 16:13:25.647] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2019-08-27 16:13:25.648] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2019-08-27 16:13:25.649] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2019-08-27 16:13:25.710] [WARN ] - [DubboClientReconnectTimer-thread-2][ com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:171)] :  [DUBBO] client reconnect to localhost:20882 find error . url: dubbo://localhost:20882/com.bittrade.entrust.api.service.ITEntrustService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.entrust.api.service.ITEntrustService&methods=queryEntrustInfoByUserId,removeById,lambdaQuery,testByDTO,removeByMap,listByIds,removeBy,getBy,testByPage,updateBatchById,getsBy,saveOrUpdate,add,modifyWithSelectiveBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,deal,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,updateOnMatch,removeByIds,get,lambdaUpdate,killOrder,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,gets,updateById,pageMaps,listByMap,getByPK&pid=1404&register.ip=192.168.1.12&side=consumer&timestamp=1566893602684, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20882/com.bittrade.entrust.api.service.ITEntrustService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.entrust.api.service.ITEntrustService&methods=queryEntrustInfoByUserId,removeById,lambdaQuery,testByDTO,removeByMap,listByIds,removeBy,getBy,testByPage,updateBatchById,getsBy,saveOrUpdate,add,modifyWithSelectiveBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,deal,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,updateOnMatch,removeByIds,get,lambdaUpdate,killOrder,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,gets,updateById,pageMaps,listByMap,getByPK&pid=1404&register.ip=192.168.1.12&side=consumer&timestamp=1566893602684) failed to connect to server localhost/127.0.0.1:20882, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:156)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	... 3 common frames omitted
[2019-08-27 16:13:26.045] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[2019-08-27 16:13:26.473] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@17cdf2d0: startup date [Tue Aug 27 16:13:07 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@5b03b9fe
[2019-08-27 16:13:26.571] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Detected @ExceptionHandler methods in globalExceptionHandler
[2019-08-27 16:13:26.786] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-27 16:13:26.787] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-27 16:13:28.365] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : 

Using generated security password: 526017a2-1dd3-4577-b310-21260e89f04c

[2019-08-27 16:13:28.794] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@64921450, org.springframework.security.web.context.SecurityContextPersistenceFilter@37b5a51c, org.springframework.security.web.header.HeaderWriterFilter@6f5288c5, org.springframework.security.web.csrf.CsrfFilter@18301763, org.springframework.security.web.authentication.logout.LogoutFilter@180fb796, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@5c0d3715, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@9715d26, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@75507e68, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2bb84aa5, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@44e7c06b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@18918d70, org.springframework.security.web.session.SessionManagementFilter@e2ee348, org.springframework.security.web.access.ExceptionTranslationFilter@1a05ff8e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@257d3968]
[2019-08-27 16:13:29.269] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Registering beans for JMX exposure on startup
[2019-08-27 16:13:29.273] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean with name 'dataSource' has been autodetected for JMX exposure
[2019-08-27 16:13:29.286] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean with name 'environmentManager' has been autodetected for JMX exposure
[2019-08-27 16:13:29.287] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean with name 'refreshScope' has been autodetected for JMX exposure
[2019-08-27 16:13:29.289] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[2019-08-27 16:13:29.294] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[2019-08-27 16:13:29.313] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[2019-08-27 16:13:29.338] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=17cdf2d0,type=ConfigurationPropertiesRebinder]
[2019-08-27 16:13:29.353] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.spring.boot.autoconfigure:name=dataSource,type=DruidDataSourceWrapper]
[2019-08-27 16:13:29.363] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Starting beans in phase 0
[2019-08-27 16:13:29.377] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Setting initial instance status as: STARTING
[2019-08-27 16:13:29.435] [INFO ] - [main][ com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:349)] : Initializing Eureka in region us-east-1
[2019-08-27 16:13:29.775] [INFO ] - [main][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70)] : Using JSON encoding codec LegacyJacksonJson
[2019-08-27 16:13:29.776] [INFO ] - [main][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71)] : Using JSON decoding codec LegacyJacksonJson
[2019-08-27 16:13:30.009] [INFO ] - [main][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80)] : Using XML encoding codec XStreamXml
[2019-08-27 16:13:30.010] [INFO ] - [main][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81)] : Using XML decoding codec XStreamXml
[2019-08-27 16:13:30.288] [INFO ] - [main][ com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] : Resolving eureka endpoints via configuration
[2019-08-27 16:13:30.337] [INFO ] - [main][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958)] : Disable delta property : false
[2019-08-27 16:13:30.337] [INFO ] - [main][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:959)] : Single vip registry refresh property : null
[2019-08-27 16:13:30.337] [INFO ] - [main][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960)] : Force full registry fetch : false
[2019-08-27 16:13:30.338] [INFO ] - [main][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:961)] : Application is null : false
[2019-08-27 16:13:30.338] [INFO ] - [main][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:962)] : Registered Applications size is zero : true
[2019-08-27 16:13:30.338] [INFO ] - [main][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:964)] : Application version is -1: true
[2019-08-27 16:13:30.338] [INFO ] - [main][ com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1047)] : Getting all instance registry info from the eureka server
[2019-08-27 16:13:32.466] [ERROR] - [main][ com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83)] : Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$6283edf1.CGLIB$eurekaClient$1(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$6283edf1$$FastClassBySpringCGLIB$$2ba1e2e3.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:365)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$6283edf1.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:583)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1246)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:535)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:167)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:156)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:57)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:39)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:80)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:182)
	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:53)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:360)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:158)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:122)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:883)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:163)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:386)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at com.core.framework.BaseApplication.run(BaseApplication.java:66)
	at com.core.framework.BaseApplication.run(BaseApplication.java:76)
	at com.bittrade.currency.CurrencyApplication.main(CurrencyApplication.java:18)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 68 common frames omitted
[2019-08-27 16:13:32.467] [WARN ] - [main][ com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:130)] : Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2019-08-27 16:13:32.468] [ERROR] - [main][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:972)] : DiscoveryClient_BITTRADE-CURRENCY/192.168.1.12:8901:bittrade-currency:@project.version@ - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$6283edf1.CGLIB$eurekaClient$1(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$6283edf1$$FastClassBySpringCGLIB$$2ba1e2e3.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:365)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$6283edf1.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:583)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1246)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:535)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:167)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:156)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:57)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:39)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:80)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:182)
	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:53)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:360)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:158)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:122)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:883)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:163)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:386)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at com.core.framework.BaseApplication.run(BaseApplication.java:66)
	at com.core.framework.BaseApplication.run(BaseApplication.java:76)
	at com.bittrade.currency.CurrencyApplication.main(CurrencyApplication.java:18)
[2019-08-27 16:13:32.469] [WARN ] - [main][ com.netflix.discovery.DiscoveryClient$1.get(DiscoveryClient.java:290)] : Using default backup registry implementation which does not do anything.
[2019-08-27 16:13:32.470] [INFO ] - [main][ com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1264)] : Starting heartbeat executor: renew interval is: 30
[2019-08-27 16:13:32.474] [INFO ] - [main][ com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60)] : InstanceInfoReplicator onDemand update allowed rate per min is 4
[2019-08-27 16:13:32.480] [INFO ] - [main][ com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:449)] : Discovery Client initialized at timestamp 1566893612478 with initial instances count: 0
[2019-08-27 16:13:32.492] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Registering application bittrade-currency with eureka with status UP
[2019-08-27 16:13:32.494] [INFO ] - [main][ com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1299)] : Saw local status change event StatusChangeEvent [timestamp=1566893612494, current=UP, previous=STARTING]
[2019-08-27 16:13:32.498] [INFO ] - [DiscoveryClient-InstanceInfoReplicator-0][ com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:826)] : DiscoveryClient_BITTRADE-CURRENCY/192.168.1.12:8901:bittrade-currency:@project.version@: registering service...
[2019-08-27 16:13:32.504] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Starting beans in phase 2147483647
[2019-08-27 16:13:32.504] [INFO ] - [main][ springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:151)] : Context refreshed
[2019-08-27 16:13:32.537] [INFO ] - [main][ springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:154)] : Found 1 custom documentation plugin(s)
[2019-08-27 16:13:32.606] [INFO ] - [main][ springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)] : Scanning for api listing references
[2019-08-27 16:13:33.963] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Undertow started on port(s) 8901 (http) with context path ''
[2019-08-27 16:13:33.964] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Updating port to 8901
[2019-08-27 16:13:33.967] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Started CurrencyApplication in 28.398 seconds (JVM running for 29.607)
[2019-08-27 16:13:34.514] [ERROR] - [DiscoveryClient-InstanceInfoReplicator-0][ com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83)] : Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 common frames omitted
[2019-08-27 16:13:34.515] [WARN ] - [DiscoveryClient-InstanceInfoReplicator-0][ com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:130)] : Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2019-08-27 16:13:34.515] [WARN ] - [DiscoveryClient-InstanceInfoReplicator-0][ com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:831)] : DiscoveryClient_BITTRADE-CURRENCY/192.168.1.12:8901:bittrade-currency:@project.version@ - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-08-27 16:13:34.516] [WARN ] - [DiscoveryClient-InstanceInfoReplicator-0][ com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:125)] : There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-08-27 16:14:02.471] [INFO ] - [DiscoveryClient-CacheRefreshExecutor-0][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958)] : Disable delta property : false
[2019-08-27 16:14:02.472] [INFO ] - [DiscoveryClient-CacheRefreshExecutor-0][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:959)] : Single vip registry refresh property : null
[2019-08-27 16:14:02.472] [INFO ] - [DiscoveryClient-CacheRefreshExecutor-0][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960)] : Force full registry fetch : false
[2019-08-27 16:14:02.472] [INFO ] - [DiscoveryClient-CacheRefreshExecutor-0][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:961)] : Application is null : false
[2019-08-27 16:14:02.472] [INFO ] - [DiscoveryClient-CacheRefreshExecutor-0][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:962)] : Registered Applications size is zero : true
[2019-08-27 16:14:02.472] [INFO ] - [DiscoveryClient-CacheRefreshExecutor-0][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:964)] : Application version is -1: true
[2019-08-27 16:14:02.472] [INFO ] - [DiscoveryClient-CacheRefreshExecutor-0][ com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1047)] : Getting all instance registry info from the eureka server
[2019-08-27 16:14:04.485] [ERROR] - [DiscoveryClient-CacheRefreshExecutor-0][ com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83)] : Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 common frames omitted
[2019-08-27 16:14:04.486] [WARN ] - [DiscoveryClient-CacheRefreshExecutor-0][ com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:130)] : Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2019-08-27 16:14:04.488] [ERROR] - [DiscoveryClient-CacheRefreshExecutor-0][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:972)] : DiscoveryClient_BITTRADE-CURRENCY/192.168.1.12:8901:bittrade-currency:@project.version@ - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1471)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1438)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-08-27 16:14:04.488] [ERROR] - [DiscoveryClient-HeartbeatExecutor-0][ com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83)] : Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:102)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 27 common frames omitted
[2019-08-27 16:14:04.489] [WARN ] - [DiscoveryClient-HeartbeatExecutor-0][ com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:130)] : Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2019-08-27 16:14:04.489] [ERROR] - [DiscoveryClient-HeartbeatExecutor-0][ com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:860)] : DiscoveryClient_BITTRADE-CURRENCY/192.168.1.12:8901:bittrade-currency:@project.version@ - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:846)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-08-27 16:14:04.518] [INFO ] - [DiscoveryClient-InstanceInfoReplicator-0][ com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:826)] : DiscoveryClient_BITTRADE-CURRENCY/192.168.1.12:8901:bittrade-currency:@project.version@: registering service...
[2019-08-27 16:14:06.543] [ERROR] - [DiscoveryClient-InstanceInfoReplicator-0][ com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83)] : Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 29 common frames omitted
[2019-08-27 16:14:06.544] [WARN ] - [DiscoveryClient-InstanceInfoReplicator-0][ com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:130)] : Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2019-08-27 16:14:06.545] [WARN ] - [DiscoveryClient-InstanceInfoReplicator-0][ com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:831)] : DiscoveryClient_BITTRADE-CURRENCY/192.168.1.12:8901:bittrade-currency:@project.version@ - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-08-27 16:14:06.545] [WARN ] - [DiscoveryClient-InstanceInfoReplicator-0][ com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:125)] : There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
