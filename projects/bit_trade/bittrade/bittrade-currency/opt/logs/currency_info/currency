[2019-08-27 09:44:06.333] [INFO ] - [main][?#?:?] : using logger: com.alibaba.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[2019-08-27 09:44:06.341] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-27 09:44:06.346] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {}
[2019-08-27 09:44:06.611] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@25fb8912: startup date [Tue Aug 27 09:44:06 CST 2019]; root of context hierarchy
[2019-08-27 09:44:07.027] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-27 09:44:07.094] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e929f2f7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:44:07.269] [INFO ] - [pool-1-thread-1][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$1.run(AwaitingNonWebApplicationListener.java:61)] :  [Dubbo] Current Spring Boot Application is await...
[2019-08-27 09:44:07.602] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-27 09:44:07.603] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {dubbo.application.id=service-consumer, dubbo.application.name=service-consumer, dubbo.consumer.check=false, dubbo.consumer.timeout=5000, dubbo.monitor=, dubbo.protocol.id=dubbo, dubbo.protocol.name=dubbo, dubbo.protocol.port=20881, dubbo.provider.timeout=5000, dubbo.registry.address=N/A, dubbo.registry.check=false, dubbo.registry.id=my-registry, dubbo.registry.protocol=zookeeper, dubbo.scan=}
[2019-08-27 09:44:07.643] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : The following profiles are active: common,data,eureka,dubbo_provider,dubbo_consumer
[2019-08-27 09:44:07.685] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5e8ac0e1: startup date [Tue Aug 27 09:44:07 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@25fb8912
[2019-08-27 09:44:09.186] [WARN ] - [main][ org.mybatis.logging.Logger.warn(Logger.java:44)] : No MyBatis mapper was found in '[com.baomidou.cloud.service.*.mapper*]' package. Please check your configuration.
[2019-08-27 09:44:09.893] [INFO ] - [main][ org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:172)] : Multiple Spring Data modules found, entering strict repository configuration mode!
[2019-08-27 09:44:10.883] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : BeanFactory id=e8f2fddb-58e9-30e9-b1e2-7f4caf085d89
[2019-08-27 09:44:10.921] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-27 09:44:11.187] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:44:11.200] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'transactionProperties' of type [com.core.framework.props.TransactionProperties$$EnhancerBySpringCGLIB$$de58b2a0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:44:11.214] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$e6bbe56c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:44:11.218] [INFO ] - [main][ com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource(DruidDataSourceAutoConfigure.java:56)] : Init DruidDataSource
[2019-08-27 09:44:11.328] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:44:11.453] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003)] : {dataSource-1} inited
[2019-08-27 09:44:11.454] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:44:11.482] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:44:11.492] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$$EnhancerBySpringCGLIB$$6183eb04] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:44:11.509] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:44:11.515] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:44:11.523] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration$$EnhancerBySpringCGLIB$$7a108869] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:44:11.560] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:44:11.561] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'transactionConfig' of type [com.core.framework.config.TransactionConfig$$EnhancerBySpringCGLIB$$d3146d45] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:44:11.590] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'defaultPointcutAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:44:11.609] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$cd0feffa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:44:11.912] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' of type [com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration$$EnhancerBySpringCGLIB$$dc11956c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:44:11.926] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:44:11.935] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:44:11.938] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:44:11.942] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:44:11.946] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:44:11.995] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e929f2f7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:44:12.543] [INFO ] - [main][ org.xnio.Xnio.<clinit>(Xnio.java:104)] : XNIO version 3.3.8.Final
[2019-08-27 09:44:12.571] [INFO ] - [main][ org.xnio.nio.NioXnio.<clinit>(NioXnio.java:55)] : XNIO NIO Implementation Version 3.3.8.Final
[2019-08-27 09:44:12.645] [WARN ] - [main][ io.undertow.websockets.jsr.Bootstrap.handleDeployment(Bootstrap.java:67)] : UT026009: XNIO worker was not set on WebSocketDeploymentInfo, the default worker will be used
[2019-08-27 09:44:12.646] [WARN ] - [main][ io.undertow.websockets.jsr.Bootstrap.handleDeployment(Bootstrap.java:76)] : UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
[2019-08-27 09:44:12.691] [INFO ] - [main][ io.undertow.servlet.spec.ServletContextImpl.log(ServletContextImpl.java:360)] : Initializing Spring embedded WebApplicationContext
[2019-08-27 09:44:12.692] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Root WebApplicationContext: initialization completed in 5006 ms
[2019-08-27 09:44:12.990] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-27 09:44:12.990] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-27 09:44:13.018] [INFO ] - [main][ com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281)] : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@6d31f106
[2019-08-27 09:44:13.680] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Initializing ExecutorService
[2019-08-27 09:44:14.879] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'characterEncodingFilter' to: [/*]
[2019-08-27 09:44:14.880] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'webMvcMetricsFilter' to: [/*]
[2019-08-27 09:44:14.881] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'springSecurityFilterChain' to: [/*]
[2019-08-27 09:44:14.882] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'httpTraceFilter' to: [/*]
[2019-08-27 09:44:14.882] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Servlet dispatcherServlet mapped to [/]
[2019-08-27 09:44:17.990] [INFO ] - [main][ com.core.framework.config.redis.JedisClusterConfig.getJedisCluster(JedisClusterConfig.java:35)] : 进入redis集群初始化方法：访问集群地址为：[154.222.138.5:7000, 154.222.138.5:7001, 154.222.138.5:7002, 154.222.138.5:7003, 154.222.138.5:7004, 154.222.138.5:7005]
[2019-08-27 09:44:18.672] [WARN ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'fundsController': Unsatisfied dependency expressed through field 'walletService'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'TWalletServiceImpl': Injection of @Reference dependencies failed; nested exception is java.lang.IllegalStateException: No such any registry to reference com.bittrade.c2c.service.ITLegalCurrencyAccountService on the consumer 192.168.1.12 use dubbo version 2.6.2, please config <dubbo:registry address="..." /> to your spring config.
[2019-08-27 09:44:18.676] [WARN ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Destroy method 'close' on bean with name 'eurekaRegistration' threw an exception: org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
[2019-08-27 09:44:18.678] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Shutting down ExecutorService
[2019-08-27 09:44:18.679] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:1948)] : {dataSource-1} closing ...
[2019-08-27 09:44:18.945] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:2020)] : {dataSource-1} closed
[2019-08-27 09:46:53.613] [INFO ] - [main][?#?:?] : using logger: com.alibaba.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[2019-08-27 09:46:53.621] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-27 09:46:53.625] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {}
[2019-08-27 09:46:53.890] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7bd4937b: startup date [Tue Aug 27 09:46:53 CST 2019]; root of context hierarchy
[2019-08-27 09:46:54.314] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-27 09:46:54.382] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$39f88a49] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:46:54.557] [INFO ] - [pool-1-thread-1][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$1.run(AwaitingNonWebApplicationListener.java:61)] :  [Dubbo] Current Spring Boot Application is await...
[2019-08-27 09:46:54.894] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-27 09:46:54.896] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {dubbo.application.id=service-consumer, dubbo.application.name=service-consumer, dubbo.consumer.check=false, dubbo.consumer.timeout=5000, dubbo.monitor=, dubbo.protocol.id=dubbo, dubbo.protocol.name=dubbo, dubbo.protocol.port=20881, dubbo.provider.timeout=5000, dubbo.registry.address=N/A, dubbo.registry.check=false, dubbo.registry.id=my-registry, dubbo.registry.protocol=zookeeper, dubbo.scan=}
[2019-08-27 09:46:54.939] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : The following profiles are active: common,data,eureka,dubbo_provider,dubbo_consumer
[2019-08-27 09:46:54.978] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@235a0c16: startup date [Tue Aug 27 09:46:54 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7bd4937b
[2019-08-27 09:46:56.449] [WARN ] - [main][ org.mybatis.logging.Logger.warn(Logger.java:44)] : No MyBatis mapper was found in '[com.baomidou.cloud.service.*.mapper*]' package. Please check your configuration.
[2019-08-27 09:46:57.154] [INFO ] - [main][ org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:172)] : Multiple Spring Data modules found, entering strict repository configuration mode!
[2019-08-27 09:46:58.147] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : BeanFactory id=e8f2fddb-58e9-30e9-b1e2-7f4caf085d89
[2019-08-27 09:46:58.191] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-27 09:46:58.463] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:46:58.475] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'transactionProperties' of type [com.core.framework.props.TransactionProperties$$EnhancerBySpringCGLIB$$2f2749f2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:46:58.490] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$378a7cbe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:46:58.494] [INFO ] - [main][ com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource(DruidDataSourceAutoConfigure.java:56)] : Init DruidDataSource
[2019-08-27 09:46:58.617] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:46:58.748] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003)] : {dataSource-1} inited
[2019-08-27 09:46:58.749] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:46:58.779] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:46:58.791] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$$EnhancerBySpringCGLIB$$b2528256] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:46:58.811] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:46:58.822] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:46:58.831] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration$$EnhancerBySpringCGLIB$$cadf1fbb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:46:58.870] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:46:58.871] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'transactionConfig' of type [com.core.framework.config.TransactionConfig$$EnhancerBySpringCGLIB$$23e30497] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:46:58.898] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'defaultPointcutAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:46:58.916] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1dde874c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:46:59.218] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' of type [com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration$$EnhancerBySpringCGLIB$$2ce02cbe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:46:59.232] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:46:59.242] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:46:59.246] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:46:59.249] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:46:59.253] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:46:59.307] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$39f88a49] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 09:46:59.896] [INFO ] - [main][ org.xnio.Xnio.<clinit>(Xnio.java:104)] : XNIO version 3.3.8.Final
[2019-08-27 09:46:59.925] [INFO ] - [main][ org.xnio.nio.NioXnio.<clinit>(NioXnio.java:55)] : XNIO NIO Implementation Version 3.3.8.Final
[2019-08-27 09:46:59.997] [WARN ] - [main][ io.undertow.websockets.jsr.Bootstrap.handleDeployment(Bootstrap.java:67)] : UT026009: XNIO worker was not set on WebSocketDeploymentInfo, the default worker will be used
[2019-08-27 09:46:59.998] [WARN ] - [main][ io.undertow.websockets.jsr.Bootstrap.handleDeployment(Bootstrap.java:76)] : UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
[2019-08-27 09:47:00.045] [INFO ] - [main][ io.undertow.servlet.spec.ServletContextImpl.log(ServletContextImpl.java:360)] : Initializing Spring embedded WebApplicationContext
[2019-08-27 09:47:00.046] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Root WebApplicationContext: initialization completed in 5068 ms
[2019-08-27 09:47:00.347] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-27 09:47:00.348] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-27 09:47:00.375] [INFO ] - [main][ com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281)] : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@6fb0261e
[2019-08-27 09:47:00.980] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Initializing ExecutorService
[2019-08-27 09:47:02.125] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'characterEncodingFilter' to: [/*]
[2019-08-27 09:47:02.126] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'webMvcMetricsFilter' to: [/*]
[2019-08-27 09:47:02.127] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'springSecurityFilterChain' to: [/*]
[2019-08-27 09:47:02.128] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'httpTraceFilter' to: [/*]
[2019-08-27 09:47:02.128] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Servlet dispatcherServlet mapped to [/]
[2019-08-27 09:47:05.257] [INFO ] - [main][ com.core.framework.config.redis.JedisClusterConfig.getJedisCluster(JedisClusterConfig.java:35)] : 进入redis集群初始化方法：访问集群地址为：[154.222.138.5:7000, 154.222.138.5:7001, 154.222.138.5:7002, 154.222.138.5:7003, 154.222.138.5:7004, 154.222.138.5:7005]
[2019-08-27 09:47:05.826] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.c2c.service.ITLegalCurrencyAccountServicedubbo://localhost:20884 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-27 09:47:07.368] [WARN ] - [main][ com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:98)] :  [DUBBO] Failed to start NettyClient HAHE/192.168.1.12 connect to the server localhost/127.0.0.1:20884 (check == false, ignore and retry later!), cause: client(url: dubbo://localhost:20884/com.bittrade.c2c.service.ITLegalCurrencyAccountService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.c2c.service.ITLegalCurrencyAccountService&methods=getByUserIdAndCoinId,removeById,lambdaQuery,removeByMap,getC2CAccount,listByIds,freezeAmount,removeBy,getBy,updateBatchById,getsBy,saveOrUpdate,add,totalConversion,modifyWithSelectiveBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,detail,page,modifyByPK,c2cOut,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,availableBalance,getBaseMapper,c2cIn,removeByIds,get,lambdaUpdate,unFreezeAmount,getAssets,modifyBy,getsByPagination,getCoinByName,listMaps,saveBatch,modifyWithSelectiveByPK,gets,updateById,pageMaps,listByMap,getByPK&pid=3232&register.ip=192.168.1.12&side=consumer&timestamp=1566870425827) failed to connect to server localhost/127.0.0.1:20884, error message is:Connection refused: no further information, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20884/com.bittrade.c2c.service.ITLegalCurrencyAccountService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.c2c.service.ITLegalCurrencyAccountService&methods=getByUserIdAndCoinId,removeById,lambdaQuery,removeByMap,getC2CAccount,listByIds,freezeAmount,removeBy,getBy,updateBatchById,getsBy,saveOrUpdate,add,totalConversion,modifyWithSelectiveBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,detail,page,modifyByPK,c2cOut,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,availableBalance,getBaseMapper,c2cIn,removeByIds,get,lambdaUpdate,unFreezeAmount,getAssets,modifyBy,getsByPagination,getCoinByName,listMaps,saveBatch,modifyWithSelectiveByPK,gets,updateById,pageMaps,listByMap,getByPK&pid=3232&register.ip=192.168.1.12&side=consumer&timestamp=1566870425827) failed to connect to server localhost/127.0.0.1:20884, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:89)
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.<init>(NettyClient.java:59)
	at com.alibaba.dubbo.remoting.transport.netty.NettyTransporter.connect(NettyTransporter.java:37)
	at com.alibaba.dubbo.remoting.Transporter$Adaptive.connect(Transporter$Adaptive.java)
	at com.alibaba.dubbo.remoting.Transporters.connect(Transporters.java:75)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchanger.connect(HeaderExchanger.java:39)
	at com.alibaba.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:109)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.initClient(DubboProtocol.java:409)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getSharedClient(DubboProtocol.java:377)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getClients(DubboProtocol.java:354)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.refer(DubboProtocol.java:336)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:67)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:65)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:108)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:394)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:333)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:163)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:66)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceFieldElement.inject(ReferenceAnnotationBeanPostProcessor.java:367)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.postProcessPropertyValues(ReferenceAnnotationBeanPostProcessor.java:92)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1135)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1062)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:581)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:370)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:759)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:548)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:386)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at com.core.framework.BaseApplication.run(BaseApplication.java:64)
	at com.core.framework.BaseApplication.run(BaseApplication.java:74)
	at com.bittrade.currency.CurrencyApplication.main(CurrencyApplication.java:18)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-08-27 09:47:07.554] [WARN ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'fundsController': Unsatisfied dependency expressed through field 'walletService'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'TWalletServiceImpl': Injection of @Reference dependencies failed; nested exception is java.lang.IllegalStateException: No such any registry to reference com.wallet.biz.api.service.IWWalletAccountService on the consumer 192.168.1.12 use dubbo version 2.6.2, please config <dubbo:registry address="..." /> to your spring config.
[2019-08-27 09:47:07.559] [WARN ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Destroy method 'close' on bean with name 'eurekaRegistration' threw an exception: org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
[2019-08-27 09:47:07.562] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Shutting down ExecutorService
[2019-08-27 09:47:07.564] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:1948)] : {dataSource-1} closing ...
[2019-08-27 09:47:07.569] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:2020)] : {dataSource-1} closed
[2019-08-27 09:47:09.329] [WARN ] - [DubboClientReconnectTimer-thread-1][ com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:171)] :  [DUBBO] client reconnect to localhost:20884 find error . url: dubbo://localhost:20884/com.bittrade.c2c.service.ITLegalCurrencyAccountService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.c2c.service.ITLegalCurrencyAccountService&methods=getByUserIdAndCoinId,removeById,lambdaQuery,removeByMap,getC2CAccount,listByIds,freezeAmount,removeBy,getBy,updateBatchById,getsBy,saveOrUpdate,add,totalConversion,modifyWithSelectiveBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,detail,page,modifyByPK,c2cOut,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,availableBalance,getBaseMapper,c2cIn,removeByIds,get,lambdaUpdate,unFreezeAmount,getAssets,modifyBy,getsByPagination,getCoinByName,listMaps,saveBatch,modifyWithSelectiveByPK,gets,updateById,pageMaps,listByMap,getByPK&pid=3232&register.ip=192.168.1.12&side=consumer&timestamp=1566870425827, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20884/com.bittrade.c2c.service.ITLegalCurrencyAccountService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.c2c.service.ITLegalCurrencyAccountService&methods=getByUserIdAndCoinId,removeById,lambdaQuery,removeByMap,getC2CAccount,listByIds,freezeAmount,removeBy,getBy,updateBatchById,getsBy,saveOrUpdate,add,totalConversion,modifyWithSelectiveBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,detail,page,modifyByPK,c2cOut,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,availableBalance,getBaseMapper,c2cIn,removeByIds,get,lambdaUpdate,unFreezeAmount,getAssets,modifyBy,getsByPagination,getCoinByName,listMaps,saveBatch,modifyWithSelectiveByPK,gets,updateById,pageMaps,listByMap,getByPK&pid=3232&register.ip=192.168.1.12&side=consumer&timestamp=1566870425827) failed to connect to server localhost/127.0.0.1:20884, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:156)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	... 3 common frames omitted
[2019-08-27 10:02:07.096] [ERROR] - [DubboClientReconnectTimer-thread-2][ com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:166)] :  [DUBBO] client reconnect to localhost:20884 find error . url: dubbo://localhost:20884/com.bittrade.c2c.service.ITLegalCurrencyAccountService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.c2c.service.ITLegalCurrencyAccountService&methods=getByUserIdAndCoinId,removeById,lambdaQuery,removeByMap,getC2CAccount,listByIds,freezeAmount,removeBy,getBy,updateBatchById,getsBy,saveOrUpdate,add,totalConversion,modifyWithSelectiveBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,detail,page,modifyByPK,c2cOut,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,availableBalance,getBaseMapper,c2cIn,removeByIds,get,lambdaUpdate,unFreezeAmount,getAssets,modifyBy,getsByPagination,getCoinByName,listMaps,saveBatch,modifyWithSelectiveByPK,gets,updateById,pageMaps,listByMap,getByPK&pid=3232&register.ip=192.168.1.12&side=consumer&timestamp=1566870425827, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20884/com.bittrade.c2c.service.ITLegalCurrencyAccountService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.c2c.service.ITLegalCurrencyAccountService&methods=getByUserIdAndCoinId,removeById,lambdaQuery,removeByMap,getC2CAccount,listByIds,freezeAmount,removeBy,getBy,updateBatchById,getsBy,saveOrUpdate,add,totalConversion,modifyWithSelectiveBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,detail,page,modifyByPK,c2cOut,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,availableBalance,getBaseMapper,c2cIn,removeByIds,get,lambdaUpdate,unFreezeAmount,getAssets,modifyBy,getsByPagination,getCoinByName,listMaps,saveBatch,modifyWithSelectiveByPK,gets,updateById,pageMaps,listByMap,getByPK&pid=3232&register.ip=192.168.1.12&side=consumer&timestamp=1566870425827) failed to connect to server localhost/127.0.0.1:20884, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:156)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	... 3 common frames omitted
[2019-08-27 10:06:46.126] [INFO ] - [main][?#?:?] : using logger: com.alibaba.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[2019-08-27 10:06:46.134] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-27 10:06:46.138] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {}
[2019-08-27 10:06:46.403] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@35aea049: startup date [Tue Aug 27 10:06:46 CST 2019]; root of context hierarchy
[2019-08-27 10:06:46.820] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-27 10:06:46.885] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$965bf9e0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:06:47.059] [INFO ] - [pool-1-thread-1][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$1.run(AwaitingNonWebApplicationListener.java:61)] :  [Dubbo] Current Spring Boot Application is await...
[2019-08-27 10:06:47.386] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-27 10:06:47.387] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {dubbo.application.id=service-consumer, dubbo.application.name=service-consumer, dubbo.consumer.check=false, dubbo.consumer.timeout=5000, dubbo.monitor=, dubbo.protocol.id=dubbo, dubbo.protocol.name=dubbo, dubbo.protocol.port=20881, dubbo.provider.timeout=5000, dubbo.registry.address=N/A, dubbo.registry.check=false, dubbo.registry.id=my-registry, dubbo.registry.protocol=zookeeper, dubbo.scan=}
[2019-08-27 10:06:47.427] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : The following profiles are active: common,data,eureka,dubbo_provider,dubbo_consumer
[2019-08-27 10:06:47.467] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4c5474f5: startup date [Tue Aug 27 10:06:47 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@35aea049
[2019-08-27 10:06:48.972] [WARN ] - [main][ org.mybatis.logging.Logger.warn(Logger.java:44)] : No MyBatis mapper was found in '[com.baomidou.cloud.service.*.mapper*]' package. Please check your configuration.
[2019-08-27 10:06:49.699] [INFO ] - [main][ org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:172)] : Multiple Spring Data modules found, entering strict repository configuration mode!
[2019-08-27 10:06:50.725] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : BeanFactory id=e8f2fddb-58e9-30e9-b1e2-7f4caf085d89
[2019-08-27 10:06:50.769] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-27 10:06:51.074] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:06:51.090] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'transactionProperties' of type [com.core.framework.props.TransactionProperties$$EnhancerBySpringCGLIB$$8b8ab989] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:06:51.105] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$93edec55] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:06:51.109] [INFO ] - [main][ com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource(DruidDataSourceAutoConfigure.java:56)] : Init DruidDataSource
[2019-08-27 10:06:51.218] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:06:51.345] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003)] : {dataSource-1} inited
[2019-08-27 10:06:51.346] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:06:51.373] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:06:51.383] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$$EnhancerBySpringCGLIB$$eb5f1ed] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:06:51.399] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:06:51.405] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:06:51.412] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration$$EnhancerBySpringCGLIB$$27428f52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:06:51.451] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:06:51.452] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'transactionConfig' of type [com.core.framework.config.TransactionConfig$$EnhancerBySpringCGLIB$$8046742e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:06:51.478] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'defaultPointcutAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:06:51.496] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7a41f6e3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:06:51.792] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' of type [com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration$$EnhancerBySpringCGLIB$$89439c55] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:06:51.806] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:06:51.815] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:06:51.819] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:06:51.823] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:06:51.826] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:06:51.878] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$965bf9e0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:06:52.428] [INFO ] - [main][ org.xnio.Xnio.<clinit>(Xnio.java:104)] : XNIO version 3.3.8.Final
[2019-08-27 10:06:52.457] [INFO ] - [main][ org.xnio.nio.NioXnio.<clinit>(NioXnio.java:55)] : XNIO NIO Implementation Version 3.3.8.Final
[2019-08-27 10:06:52.543] [WARN ] - [main][ io.undertow.websockets.jsr.Bootstrap.handleDeployment(Bootstrap.java:67)] : UT026009: XNIO worker was not set on WebSocketDeploymentInfo, the default worker will be used
[2019-08-27 10:06:52.543] [WARN ] - [main][ io.undertow.websockets.jsr.Bootstrap.handleDeployment(Bootstrap.java:76)] : UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
[2019-08-27 10:06:52.590] [INFO ] - [main][ io.undertow.servlet.spec.ServletContextImpl.log(ServletContextImpl.java:360)] : Initializing Spring embedded WebApplicationContext
[2019-08-27 10:06:52.590] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Root WebApplicationContext: initialization completed in 5123 ms
[2019-08-27 10:06:52.919] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-27 10:06:52.920] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-27 10:06:52.947] [INFO ] - [main][ com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281)] : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@147e0734
[2019-08-27 10:06:53.567] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Initializing ExecutorService
[2019-08-27 10:06:54.696] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'characterEncodingFilter' to: [/*]
[2019-08-27 10:06:54.698] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'webMvcMetricsFilter' to: [/*]
[2019-08-27 10:06:54.699] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'springSecurityFilterChain' to: [/*]
[2019-08-27 10:06:54.699] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'httpTraceFilter' to: [/*]
[2019-08-27 10:06:54.700] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Servlet dispatcherServlet mapped to [/]
[2019-08-27 10:06:57.901] [INFO ] - [main][ com.core.framework.config.redis.JedisClusterConfig.getJedisCluster(JedisClusterConfig.java:35)] : 进入redis集群初始化方法：访问集群地址为：[154.222.138.5:7000, 154.222.138.5:7001, 154.222.138.5:7002, 154.222.138.5:7003, 154.222.138.5:7004, 154.222.138.5:7005]
[2019-08-27 10:06:58.487] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.c2c.service.ITLegalCurrencyAccountServicedubbo://localhost:20884 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-27 10:07:00.047] [WARN ] - [main][ com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:98)] :  [DUBBO] Failed to start NettyClient HAHE/192.168.1.12 connect to the server localhost/127.0.0.1:20884 (check == false, ignore and retry later!), cause: client(url: dubbo://localhost:20884/com.bittrade.c2c.service.ITLegalCurrencyAccountService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.c2c.service.ITLegalCurrencyAccountService&methods=getByUserIdAndCoinId,removeById,lambdaQuery,removeByMap,getC2CAccount,listByIds,freezeAmount,removeBy,getBy,updateBatchById,getsBy,saveOrUpdate,add,totalConversion,modifyWithSelectiveBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,detail,page,modifyByPK,c2cOut,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,availableBalance,getBaseMapper,c2cIn,removeByIds,get,lambdaUpdate,unFreezeAmount,getAssets,modifyBy,getsByPagination,getCoinByName,listMaps,saveBatch,modifyWithSelectiveByPK,gets,updateById,pageMaps,listByMap,getByPK&pid=4800&register.ip=192.168.1.12&side=consumer&timestamp=1566871618488) failed to connect to server localhost/127.0.0.1:20884, error message is:Connection refused: no further information, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20884/com.bittrade.c2c.service.ITLegalCurrencyAccountService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.c2c.service.ITLegalCurrencyAccountService&methods=getByUserIdAndCoinId,removeById,lambdaQuery,removeByMap,getC2CAccount,listByIds,freezeAmount,removeBy,getBy,updateBatchById,getsBy,saveOrUpdate,add,totalConversion,modifyWithSelectiveBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,detail,page,modifyByPK,c2cOut,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,availableBalance,getBaseMapper,c2cIn,removeByIds,get,lambdaUpdate,unFreezeAmount,getAssets,modifyBy,getsByPagination,getCoinByName,listMaps,saveBatch,modifyWithSelectiveByPK,gets,updateById,pageMaps,listByMap,getByPK&pid=4800&register.ip=192.168.1.12&side=consumer&timestamp=1566871618488) failed to connect to server localhost/127.0.0.1:20884, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:89)
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.<init>(NettyClient.java:59)
	at com.alibaba.dubbo.remoting.transport.netty.NettyTransporter.connect(NettyTransporter.java:37)
	at com.alibaba.dubbo.remoting.Transporter$Adaptive.connect(Transporter$Adaptive.java)
	at com.alibaba.dubbo.remoting.Transporters.connect(Transporters.java:75)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchanger.connect(HeaderExchanger.java:39)
	at com.alibaba.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:109)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.initClient(DubboProtocol.java:409)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getSharedClient(DubboProtocol.java:377)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getClients(DubboProtocol.java:354)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.refer(DubboProtocol.java:336)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:67)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:108)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:65)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:394)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:333)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:163)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:66)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceFieldElement.inject(ReferenceAnnotationBeanPostProcessor.java:367)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.postProcessPropertyValues(ReferenceAnnotationBeanPostProcessor.java:92)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1135)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1062)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:581)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:370)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:759)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:548)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:386)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at com.core.framework.BaseApplication.run(BaseApplication.java:64)
	at com.core.framework.BaseApplication.run(BaseApplication.java:74)
	at com.bittrade.currency.CurrencyApplication.main(CurrencyApplication.java:18)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-08-27 10:07:00.256] [WARN ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'fundsController': Unsatisfied dependency expressed through field 'walletService'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'TWalletServiceImpl': Injection of @Reference dependencies failed; nested exception is java.lang.IllegalStateException: No such any registry to reference com.wallet.biz.api.service.IWWalletAccountService on the consumer 192.168.1.12 use dubbo version 2.6.2, please config <dubbo:registry address="..." /> to your spring config.
[2019-08-27 10:07:00.263] [WARN ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Destroy method 'close' on bean with name 'eurekaRegistration' threw an exception: org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
[2019-08-27 10:07:00.266] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Shutting down ExecutorService
[2019-08-27 10:07:00.268] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:1948)] : {dataSource-1} closing ...
[2019-08-27 10:07:00.273] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:2020)] : {dataSource-1} closed
[2019-08-27 10:07:02.009] [WARN ] - [DubboClientReconnectTimer-thread-1][ com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:171)] :  [DUBBO] client reconnect to localhost:20884 find error . url: dubbo://localhost:20884/com.bittrade.c2c.service.ITLegalCurrencyAccountService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.c2c.service.ITLegalCurrencyAccountService&methods=getByUserIdAndCoinId,removeById,lambdaQuery,removeByMap,getC2CAccount,listByIds,freezeAmount,removeBy,getBy,updateBatchById,getsBy,saveOrUpdate,add,totalConversion,modifyWithSelectiveBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,detail,page,modifyByPK,c2cOut,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,availableBalance,getBaseMapper,c2cIn,removeByIds,get,lambdaUpdate,unFreezeAmount,getAssets,modifyBy,getsByPagination,getCoinByName,listMaps,saveBatch,modifyWithSelectiveByPK,gets,updateById,pageMaps,listByMap,getByPK&pid=4800&register.ip=192.168.1.12&side=consumer&timestamp=1566871618488, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20884/com.bittrade.c2c.service.ITLegalCurrencyAccountService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.c2c.service.ITLegalCurrencyAccountService&methods=getByUserIdAndCoinId,removeById,lambdaQuery,removeByMap,getC2CAccount,listByIds,freezeAmount,removeBy,getBy,updateBatchById,getsBy,saveOrUpdate,add,totalConversion,modifyWithSelectiveBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,detail,page,modifyByPK,c2cOut,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,availableBalance,getBaseMapper,c2cIn,removeByIds,get,lambdaUpdate,unFreezeAmount,getAssets,modifyBy,getsByPagination,getCoinByName,listMaps,saveBatch,modifyWithSelectiveByPK,gets,updateById,pageMaps,listByMap,getByPK&pid=4800&register.ip=192.168.1.12&side=consumer&timestamp=1566871618488) failed to connect to server localhost/127.0.0.1:20884, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:156)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	... 3 common frames omitted
[2019-08-27 10:07:41.755] [INFO ] - [main][?#?:?] : using logger: com.alibaba.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[2019-08-27 10:07:41.762] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-27 10:07:41.767] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {}
[2019-08-27 10:07:42.037] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@66f57048: startup date [Tue Aug 27 10:07:42 CST 2019]; root of context hierarchy
[2019-08-27 10:07:42.472] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-27 10:07:42.543] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1bfb0f34] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:07:42.720] [INFO ] - [pool-1-thread-1][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$1.run(AwaitingNonWebApplicationListener.java:61)] :  [Dubbo] Current Spring Boot Application is await...
[2019-08-27 10:07:43.054] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-27 10:07:43.056] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {dubbo.application.id=service-consumer, dubbo.application.name=service-consumer, dubbo.consumer.check=false, dubbo.consumer.timeout=5000, dubbo.monitor=, dubbo.protocol.id=dubbo, dubbo.protocol.name=dubbo, dubbo.protocol.port=20881, dubbo.provider.timeout=5000, dubbo.registry.address=N/A, dubbo.registry.check=false, dubbo.registry.id=my-registry, dubbo.registry.protocol=zookeeper, dubbo.scan=}
[2019-08-27 10:07:43.097] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : The following profiles are active: common,data,eureka,dubbo_provider,dubbo_consumer
[2019-08-27 10:07:43.141] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@c5ee75e: startup date [Tue Aug 27 10:07:43 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@66f57048
[2019-08-27 10:07:44.634] [WARN ] - [main][ org.mybatis.logging.Logger.warn(Logger.java:44)] : No MyBatis mapper was found in '[com.baomidou.cloud.service.*.mapper*]' package. Please check your configuration.
[2019-08-27 10:07:45.333] [INFO ] - [main][ org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:172)] : Multiple Spring Data modules found, entering strict repository configuration mode!
[2019-08-27 10:07:46.362] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : BeanFactory id=e8f2fddb-58e9-30e9-b1e2-7f4caf085d89
[2019-08-27 10:07:46.405] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-27 10:07:46.687] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:07:46.700] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'transactionProperties' of type [com.core.framework.props.TransactionProperties$$EnhancerBySpringCGLIB$$1129cedd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:07:46.715] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$198d01a9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:07:46.720] [INFO ] - [main][ com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource(DruidDataSourceAutoConfigure.java:56)] : Init DruidDataSource
[2019-08-27 10:07:46.842] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:07:46.973] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003)] : {dataSource-1} inited
[2019-08-27 10:07:46.974] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:07:47.000] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:07:47.010] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$$EnhancerBySpringCGLIB$$94550741] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:07:47.027] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:07:47.033] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:07:47.044] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration$$EnhancerBySpringCGLIB$$ace1a4a6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:07:47.083] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:07:47.084] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'transactionConfig' of type [com.core.framework.config.TransactionConfig$$EnhancerBySpringCGLIB$$5e58982] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:07:47.111] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'defaultPointcutAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:07:47.131] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ffe10c37] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:07:47.438] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' of type [com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration$$EnhancerBySpringCGLIB$$ee2b1a9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:07:47.452] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:07:47.461] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:07:47.465] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:07:47.469] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:07:47.472] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:07:47.524] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1bfb0f34] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:07:48.107] [INFO ] - [main][ org.xnio.Xnio.<clinit>(Xnio.java:104)] : XNIO version 3.3.8.Final
[2019-08-27 10:07:48.143] [INFO ] - [main][ org.xnio.nio.NioXnio.<clinit>(NioXnio.java:55)] : XNIO NIO Implementation Version 3.3.8.Final
[2019-08-27 10:07:48.232] [WARN ] - [main][ io.undertow.websockets.jsr.Bootstrap.handleDeployment(Bootstrap.java:67)] : UT026009: XNIO worker was not set on WebSocketDeploymentInfo, the default worker will be used
[2019-08-27 10:07:48.232] [WARN ] - [main][ io.undertow.websockets.jsr.Bootstrap.handleDeployment(Bootstrap.java:76)] : UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
[2019-08-27 10:07:48.276] [INFO ] - [main][ io.undertow.servlet.spec.ServletContextImpl.log(ServletContextImpl.java:360)] : Initializing Spring embedded WebApplicationContext
[2019-08-27 10:07:48.276] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Root WebApplicationContext: initialization completed in 5136 ms
[2019-08-27 10:07:48.576] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-27 10:07:48.577] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-27 10:07:48.604] [INFO ] - [main][ com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281)] : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@9281d19
[2019-08-27 10:07:49.217] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Initializing ExecutorService
[2019-08-27 10:07:50.290] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'characterEncodingFilter' to: [/*]
[2019-08-27 10:07:50.291] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'webMvcMetricsFilter' to: [/*]
[2019-08-27 10:07:50.292] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'springSecurityFilterChain' to: [/*]
[2019-08-27 10:07:50.293] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'httpTraceFilter' to: [/*]
[2019-08-27 10:07:50.293] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Servlet dispatcherServlet mapped to [/]
[2019-08-27 10:07:53.123] [WARN ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'fundsController': Unsatisfied dependency expressed through field 'walletService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'TWalletServiceImpl': Unsatisfied dependency expressed through field 'baseMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'ITWalletDAO' defined in file [D:\work\git\git\projects\bit_trade\bittrade\bittrade-currency\target\classes\com\bittrade\currency\dao\ITWalletDAO.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\work\git\git\projects\bit_trade\bittrade\bittrade-currency\target\classes\SQL\ITAccountManageDAO.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 27; columnNumber: 10; The content of element type "mapper" must match "(cache-ref|cache|resultMap*|parameterMap*|sql*|insert*|update*|delete*|select*)+".
[2019-08-27 10:07:53.126] [WARN ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Destroy method 'close' on bean with name 'eurekaRegistration' threw an exception: org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
[2019-08-27 10:07:53.129] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Shutting down ExecutorService
[2019-08-27 10:07:53.131] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:1948)] : {dataSource-1} closing ...
[2019-08-27 10:07:53.141] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:2020)] : {dataSource-1} closed
[2019-08-27 10:08:21.672] [INFO ] - [main][?#?:?] : using logger: com.alibaba.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[2019-08-27 10:08:21.679] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-27 10:08:21.684] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {}
[2019-08-27 10:08:21.952] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7c24b813: startup date [Tue Aug 27 10:08:21 CST 2019]; root of context hierarchy
[2019-08-27 10:08:22.350] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-27 10:08:22.419] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$12769a82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:08:22.597] [INFO ] - [pool-1-thread-1][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$1.run(AwaitingNonWebApplicationListener.java:61)] :  [Dubbo] Current Spring Boot Application is await...
[2019-08-27 10:08:22.931] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-27 10:08:22.932] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {dubbo.application.id=service-consumer, dubbo.application.name=service-consumer, dubbo.consumer.check=false, dubbo.consumer.timeout=5000, dubbo.monitor=, dubbo.protocol.id=dubbo, dubbo.protocol.name=dubbo, dubbo.protocol.port=20881, dubbo.provider.timeout=5000, dubbo.registry.address=N/A, dubbo.registry.check=false, dubbo.registry.id=my-registry, dubbo.registry.protocol=zookeeper, dubbo.scan=}
[2019-08-27 10:08:22.973] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : The following profiles are active: common,data,eureka,dubbo_provider,dubbo_consumer
[2019-08-27 10:08:23.013] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@aafcffa: startup date [Tue Aug 27 10:08:23 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7c24b813
[2019-08-27 10:08:24.523] [WARN ] - [main][ org.mybatis.logging.Logger.warn(Logger.java:44)] : No MyBatis mapper was found in '[com.baomidou.cloud.service.*.mapper*]' package. Please check your configuration.
[2019-08-27 10:08:25.222] [INFO ] - [main][ org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:172)] : Multiple Spring Data modules found, entering strict repository configuration mode!
[2019-08-27 10:08:26.250] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : BeanFactory id=e8f2fddb-58e9-30e9-b1e2-7f4caf085d89
[2019-08-27 10:08:26.293] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-27 10:08:26.572] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:08:26.585] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'transactionProperties' of type [com.core.framework.props.TransactionProperties$$EnhancerBySpringCGLIB$$7a55a2b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:08:26.598] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$10088cf7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:08:26.602] [INFO ] - [main][ com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource(DruidDataSourceAutoConfigure.java:56)] : Init DruidDataSource
[2019-08-27 10:08:26.709] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:08:26.837] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003)] : {dataSource-1} inited
[2019-08-27 10:08:26.838] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:08:26.870] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:08:26.882] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$$EnhancerBySpringCGLIB$$8ad0928f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:08:26.899] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:08:26.905] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:08:26.913] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration$$EnhancerBySpringCGLIB$$a35d2ff4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:08:26.949] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:08:26.950] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'transactionConfig' of type [com.core.framework.config.TransactionConfig$$EnhancerBySpringCGLIB$$fc6114d0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:08:26.976] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'defaultPointcutAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:08:26.994] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f65c9785] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:08:27.300] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' of type [com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration$$EnhancerBySpringCGLIB$$55e3cf7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:08:27.317] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:08:27.326] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:08:27.330] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:08:27.334] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:08:27.338] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:08:27.395] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$12769a82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:08:27.973] [INFO ] - [main][ org.xnio.Xnio.<clinit>(Xnio.java:104)] : XNIO version 3.3.8.Final
[2019-08-27 10:08:28.002] [INFO ] - [main][ org.xnio.nio.NioXnio.<clinit>(NioXnio.java:55)] : XNIO NIO Implementation Version 3.3.8.Final
[2019-08-27 10:08:28.076] [WARN ] - [main][ io.undertow.websockets.jsr.Bootstrap.handleDeployment(Bootstrap.java:67)] : UT026009: XNIO worker was not set on WebSocketDeploymentInfo, the default worker will be used
[2019-08-27 10:08:28.077] [WARN ] - [main][ io.undertow.websockets.jsr.Bootstrap.handleDeployment(Bootstrap.java:76)] : UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
[2019-08-27 10:08:28.127] [INFO ] - [main][ io.undertow.servlet.spec.ServletContextImpl.log(ServletContextImpl.java:360)] : Initializing Spring embedded WebApplicationContext
[2019-08-27 10:08:28.127] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Root WebApplicationContext: initialization completed in 5114 ms
[2019-08-27 10:08:28.462] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-27 10:08:28.463] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-27 10:08:28.490] [INFO ] - [main][ com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281)] : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@587f4f63
[2019-08-27 10:08:29.088] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Initializing ExecutorService
[2019-08-27 10:08:30.281] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'characterEncodingFilter' to: [/*]
[2019-08-27 10:08:30.283] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'webMvcMetricsFilter' to: [/*]
[2019-08-27 10:08:30.284] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'springSecurityFilterChain' to: [/*]
[2019-08-27 10:08:30.285] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'httpTraceFilter' to: [/*]
[2019-08-27 10:08:30.285] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Servlet dispatcherServlet mapped to [/]
[2019-08-27 10:08:33.247] [WARN ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'fundsController': Unsatisfied dependency expressed through field 'walletService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'TWalletServiceImpl': Unsatisfied dependency expressed through field 'baseMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'ITWalletDAO' defined in file [D:\work\git\git\projects\bit_trade\bittrade\bittrade-currency\target\classes\com\bittrade\currency\dao\ITWalletDAO.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\work\git\git\projects\bit_trade\bittrade\bittrade-currency\target\classes\SQL\ITAccountManageDAO.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 27; columnNumber: 10; The content of element type "mapper" must match "(cache-ref|cache|resultMap*|parameterMap*|sql*|insert*|update*|delete*|select*)+".
[2019-08-27 10:08:33.250] [WARN ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Destroy method 'close' on bean with name 'eurekaRegistration' threw an exception: org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
[2019-08-27 10:08:33.252] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Shutting down ExecutorService
[2019-08-27 10:08:33.254] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:1948)] : {dataSource-1} closing ...
[2019-08-27 10:08:33.259] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:2020)] : {dataSource-1} closed
[2019-08-27 10:09:12.366] [INFO ] - [main][?#?:?] : using logger: com.alibaba.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[2019-08-27 10:09:12.374] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-27 10:09:12.379] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {}
[2019-08-27 10:09:12.638] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4f2b503c: startup date [Tue Aug 27 10:09:12 CST 2019]; root of context hierarchy
[2019-08-27 10:09:13.027] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-27 10:09:13.092] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$34688f11] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:09:13.263] [INFO ] - [pool-1-thread-1][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$1.run(AwaitingNonWebApplicationListener.java:61)] :  [Dubbo] Current Spring Boot Application is await...
[2019-08-27 10:09:13.599] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-27 10:09:13.600] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {dubbo.application.id=service-consumer, dubbo.application.name=service-consumer, dubbo.consumer.check=false, dubbo.consumer.timeout=5000, dubbo.monitor=, dubbo.protocol.id=dubbo, dubbo.protocol.name=dubbo, dubbo.protocol.port=20881, dubbo.provider.timeout=5000, dubbo.registry.address=N/A, dubbo.registry.check=false, dubbo.registry.id=my-registry, dubbo.registry.protocol=zookeeper, dubbo.scan=}
[2019-08-27 10:09:13.645] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : The following profiles are active: common,data,eureka,dubbo_provider,dubbo_consumer
[2019-08-27 10:09:13.687] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@52d239ba: startup date [Tue Aug 27 10:09:13 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4f2b503c
[2019-08-27 10:09:15.207] [WARN ] - [main][ org.mybatis.logging.Logger.warn(Logger.java:44)] : No MyBatis mapper was found in '[com.baomidou.cloud.service.*.mapper*]' package. Please check your configuration.
[2019-08-27 10:09:15.921] [INFO ] - [main][ org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:172)] : Multiple Spring Data modules found, entering strict repository configuration mode!
[2019-08-27 10:09:16.895] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : BeanFactory id=e8f2fddb-58e9-30e9-b1e2-7f4caf085d89
[2019-08-27 10:09:16.934] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-27 10:09:17.206] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:09:17.218] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'transactionProperties' of type [com.core.framework.props.TransactionProperties$$EnhancerBySpringCGLIB$$29974eba] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:09:17.232] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$31fa8186] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:09:17.236] [INFO ] - [main][ com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource(DruidDataSourceAutoConfigure.java:56)] : Init DruidDataSource
[2019-08-27 10:09:17.340] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:09:17.463] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003)] : {dataSource-1} inited
[2019-08-27 10:09:17.464] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:09:17.492] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:09:17.502] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$$EnhancerBySpringCGLIB$$acc2871e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:09:17.519] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:09:17.526] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:09:17.533] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration$$EnhancerBySpringCGLIB$$c54f2483] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:09:17.570] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:09:17.571] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'transactionConfig' of type [com.core.framework.config.TransactionConfig$$EnhancerBySpringCGLIB$$1e53095f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:09:17.596] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'defaultPointcutAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:09:17.614] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$184e8c14] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:09:17.907] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' of type [com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration$$EnhancerBySpringCGLIB$$27503186] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:09:17.921] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:09:17.930] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:09:17.935] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:09:17.939] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:09:17.943] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:09:17.997] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$34688f11] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:09:18.542] [INFO ] - [main][ org.xnio.Xnio.<clinit>(Xnio.java:104)] : XNIO version 3.3.8.Final
[2019-08-27 10:09:18.571] [INFO ] - [main][ org.xnio.nio.NioXnio.<clinit>(NioXnio.java:55)] : XNIO NIO Implementation Version 3.3.8.Final
[2019-08-27 10:09:18.644] [WARN ] - [main][ io.undertow.websockets.jsr.Bootstrap.handleDeployment(Bootstrap.java:67)] : UT026009: XNIO worker was not set on WebSocketDeploymentInfo, the default worker will be used
[2019-08-27 10:09:18.644] [WARN ] - [main][ io.undertow.websockets.jsr.Bootstrap.handleDeployment(Bootstrap.java:76)] : UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
[2019-08-27 10:09:18.693] [INFO ] - [main][ io.undertow.servlet.spec.ServletContextImpl.log(ServletContextImpl.java:360)] : Initializing Spring embedded WebApplicationContext
[2019-08-27 10:09:18.693] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Root WebApplicationContext: initialization completed in 5007 ms
[2019-08-27 10:09:19.013] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-27 10:09:19.013] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-27 10:09:19.039] [INFO ] - [main][ com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281)] : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@661e279d
[2019-08-27 10:09:19.655] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Initializing ExecutorService
[2019-08-27 10:09:20.751] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'characterEncodingFilter' to: [/*]
[2019-08-27 10:09:20.753] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'webMvcMetricsFilter' to: [/*]
[2019-08-27 10:09:20.753] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'springSecurityFilterChain' to: [/*]
[2019-08-27 10:09:20.754] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'httpTraceFilter' to: [/*]
[2019-08-27 10:09:20.754] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Servlet dispatcherServlet mapped to [/]
[2019-08-27 10:09:23.882] [INFO ] - [main][ com.core.framework.config.redis.JedisClusterConfig.getJedisCluster(JedisClusterConfig.java:35)] : 进入redis集群初始化方法：访问集群地址为：[154.222.138.5:7000, 154.222.138.5:7001, 154.222.138.5:7002, 154.222.138.5:7003, 154.222.138.5:7004, 154.222.138.5:7005]
[2019-08-27 10:09:24.445] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.c2c.service.ITLegalCurrencyAccountServicedubbo://localhost:20884 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-27 10:09:25.993] [WARN ] - [main][ com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:98)] :  [DUBBO] Failed to start NettyClient HAHE/192.168.1.12 connect to the server localhost/127.0.0.1:20884 (check == false, ignore and retry later!), cause: client(url: dubbo://localhost:20884/com.bittrade.c2c.service.ITLegalCurrencyAccountService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.c2c.service.ITLegalCurrencyAccountService&methods=getByUserIdAndCoinId,removeById,lambdaQuery,removeByMap,getC2CAccount,listByIds,freezeAmount,removeBy,getBy,updateBatchById,getsBy,saveOrUpdate,add,totalConversion,modifyWithSelectiveBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,detail,page,modifyByPK,c2cOut,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,availableBalance,getBaseMapper,c2cIn,removeByIds,get,lambdaUpdate,unFreezeAmount,getAssets,modifyBy,getsByPagination,getCoinByName,listMaps,saveBatch,modifyWithSelectiveByPK,gets,updateById,pageMaps,listByMap,getByPK&pid=448&register.ip=192.168.1.12&side=consumer&timestamp=1566871764446) failed to connect to server localhost/127.0.0.1:20884, error message is:Connection refused: no further information, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20884/com.bittrade.c2c.service.ITLegalCurrencyAccountService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.c2c.service.ITLegalCurrencyAccountService&methods=getByUserIdAndCoinId,removeById,lambdaQuery,removeByMap,getC2CAccount,listByIds,freezeAmount,removeBy,getBy,updateBatchById,getsBy,saveOrUpdate,add,totalConversion,modifyWithSelectiveBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,detail,page,modifyByPK,c2cOut,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,availableBalance,getBaseMapper,c2cIn,removeByIds,get,lambdaUpdate,unFreezeAmount,getAssets,modifyBy,getsByPagination,getCoinByName,listMaps,saveBatch,modifyWithSelectiveByPK,gets,updateById,pageMaps,listByMap,getByPK&pid=448&register.ip=192.168.1.12&side=consumer&timestamp=1566871764446) failed to connect to server localhost/127.0.0.1:20884, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:89)
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.<init>(NettyClient.java:59)
	at com.alibaba.dubbo.remoting.transport.netty.NettyTransporter.connect(NettyTransporter.java:37)
	at com.alibaba.dubbo.remoting.Transporter$Adaptive.connect(Transporter$Adaptive.java)
	at com.alibaba.dubbo.remoting.Transporters.connect(Transporters.java:75)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchanger.connect(HeaderExchanger.java:39)
	at com.alibaba.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:109)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.initClient(DubboProtocol.java:409)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getSharedClient(DubboProtocol.java:377)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getClients(DubboProtocol.java:354)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.refer(DubboProtocol.java:336)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:65)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:108)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:67)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:394)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:333)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:163)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:66)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceFieldElement.inject(ReferenceAnnotationBeanPostProcessor.java:367)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.postProcessPropertyValues(ReferenceAnnotationBeanPostProcessor.java:92)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1135)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1062)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:581)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:370)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:759)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:548)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:386)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at com.core.framework.BaseApplication.run(BaseApplication.java:64)
	at com.core.framework.BaseApplication.run(BaseApplication.java:74)
	at com.bittrade.currency.CurrencyApplication.main(CurrencyApplication.java:18)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-08-27 10:09:26.188] [WARN ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'fundsController': Unsatisfied dependency expressed through field 'walletService'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'TWalletServiceImpl': Injection of @Reference dependencies failed; nested exception is java.lang.IllegalStateException: No such any registry to reference com.wallet.biz.api.service.IWWalletAccountService on the consumer 192.168.1.12 use dubbo version 2.6.2, please config <dubbo:registry address="..." /> to your spring config.
[2019-08-27 10:09:26.193] [WARN ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Destroy method 'close' on bean with name 'eurekaRegistration' threw an exception: org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
[2019-08-27 10:09:26.196] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Shutting down ExecutorService
[2019-08-27 10:09:26.198] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:1948)] : {dataSource-1} closing ...
[2019-08-27 10:09:26.203] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:2020)] : {dataSource-1} closed
[2019-08-27 10:09:27.953] [WARN ] - [DubboClientReconnectTimer-thread-1][ com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:171)] :  [DUBBO] client reconnect to localhost:20884 find error . url: dubbo://localhost:20884/com.bittrade.c2c.service.ITLegalCurrencyAccountService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.c2c.service.ITLegalCurrencyAccountService&methods=getByUserIdAndCoinId,removeById,lambdaQuery,removeByMap,getC2CAccount,listByIds,freezeAmount,removeBy,getBy,updateBatchById,getsBy,saveOrUpdate,add,totalConversion,modifyWithSelectiveBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,detail,page,modifyByPK,c2cOut,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,availableBalance,getBaseMapper,c2cIn,removeByIds,get,lambdaUpdate,unFreezeAmount,getAssets,modifyBy,getsByPagination,getCoinByName,listMaps,saveBatch,modifyWithSelectiveByPK,gets,updateById,pageMaps,listByMap,getByPK&pid=448&register.ip=192.168.1.12&side=consumer&timestamp=1566871764446, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20884/com.bittrade.c2c.service.ITLegalCurrencyAccountService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.c2c.service.ITLegalCurrencyAccountService&methods=getByUserIdAndCoinId,removeById,lambdaQuery,removeByMap,getC2CAccount,listByIds,freezeAmount,removeBy,getBy,updateBatchById,getsBy,saveOrUpdate,add,totalConversion,modifyWithSelectiveBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,detail,page,modifyByPK,c2cOut,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,availableBalance,getBaseMapper,c2cIn,removeByIds,get,lambdaUpdate,unFreezeAmount,getAssets,modifyBy,getsByPagination,getCoinByName,listMaps,saveBatch,modifyWithSelectiveByPK,gets,updateById,pageMaps,listByMap,getByPK&pid=448&register.ip=192.168.1.12&side=consumer&timestamp=1566871764446) failed to connect to server localhost/127.0.0.1:20884, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:156)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	... 3 common frames omitted
[2019-08-27 10:11:51.079] [INFO ] - [main][?#?:?] : using logger: com.alibaba.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[2019-08-27 10:11:51.087] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-27 10:11:51.092] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {}
[2019-08-27 10:11:51.367] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4fb3ee4e: startup date [Tue Aug 27 10:11:51 CST 2019]; root of context hierarchy
[2019-08-27 10:11:51.769] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-27 10:11:51.835] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3cdd02a4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:11:52.011] [INFO ] - [pool-1-thread-1][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$1.run(AwaitingNonWebApplicationListener.java:61)] :  [Dubbo] Current Spring Boot Application is await...
[2019-08-27 10:11:52.360] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-27 10:11:52.362] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {dubbo.application.id=service-consumer, dubbo.application.name=service-consumer, dubbo.consumer.check=false, dubbo.consumer.timeout=5000, dubbo.monitor=, dubbo.protocol.id=dubbo, dubbo.protocol.name=dubbo, dubbo.protocol.port=20881, dubbo.provider.timeout=5000, dubbo.registry.address=N/A, dubbo.registry.check=false, dubbo.registry.id=my-registry, dubbo.registry.protocol=zookeeper, dubbo.scan=}
[2019-08-27 10:11:52.408] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : The following profiles are active: common,data,eureka,dubbo_provider,dubbo_consumer
[2019-08-27 10:11:52.455] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@dfddc9a: startup date [Tue Aug 27 10:11:52 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4fb3ee4e
[2019-08-27 10:11:53.959] [WARN ] - [main][ org.mybatis.logging.Logger.warn(Logger.java:44)] : No MyBatis mapper was found in '[com.baomidou.cloud.service.*.mapper*]' package. Please check your configuration.
[2019-08-27 10:11:54.665] [INFO ] - [main][ org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:172)] : Multiple Spring Data modules found, entering strict repository configuration mode!
[2019-08-27 10:11:55.678] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : BeanFactory id=e8f2fddb-58e9-30e9-b1e2-7f4caf085d89
[2019-08-27 10:11:55.717] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-27 10:11:56.000] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:11:56.014] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'transactionProperties' of type [com.core.framework.props.TransactionProperties$$EnhancerBySpringCGLIB$$320bc24d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:11:56.030] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$3a6ef519] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:11:56.035] [INFO ] - [main][ com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource(DruidDataSourceAutoConfigure.java:56)] : Init DruidDataSource
[2019-08-27 10:11:56.151] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:11:56.282] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003)] : {dataSource-1} inited
[2019-08-27 10:11:56.283] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:11:56.312] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:11:56.323] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$$EnhancerBySpringCGLIB$$b536fab1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:11:56.340] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:11:56.346] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:11:56.354] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration$$EnhancerBySpringCGLIB$$cdc39816] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:11:56.389] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:11:56.389] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'transactionConfig' of type [com.core.framework.config.TransactionConfig$$EnhancerBySpringCGLIB$$26c77cf2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:11:56.414] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'defaultPointcutAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:11:56.432] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$20c2ffa7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:11:56.720] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' of type [com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration$$EnhancerBySpringCGLIB$$2fc4a519] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:11:56.735] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:11:56.744] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:11:56.749] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:11:56.753] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:11:56.756] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:11:56.812] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3cdd02a4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-27 10:11:57.381] [INFO ] - [main][ org.xnio.Xnio.<clinit>(Xnio.java:104)] : XNIO version 3.3.8.Final
[2019-08-27 10:11:57.413] [INFO ] - [main][ org.xnio.nio.NioXnio.<clinit>(NioXnio.java:55)] : XNIO NIO Implementation Version 3.3.8.Final
[2019-08-27 10:11:57.504] [WARN ] - [main][ io.undertow.websockets.jsr.Bootstrap.handleDeployment(Bootstrap.java:67)] : UT026009: XNIO worker was not set on WebSocketDeploymentInfo, the default worker will be used
[2019-08-27 10:11:57.505] [WARN ] - [main][ io.undertow.websockets.jsr.Bootstrap.handleDeployment(Bootstrap.java:76)] : UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
[2019-08-27 10:11:57.551] [INFO ] - [main][ io.undertow.servlet.spec.ServletContextImpl.log(ServletContextImpl.java:360)] : Initializing Spring embedded WebApplicationContext
[2019-08-27 10:11:57.551] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Root WebApplicationContext: initialization completed in 5096 ms
[2019-08-27 10:11:57.855] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-27 10:11:57.856] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-27 10:11:57.884] [INFO ] - [main][ com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281)] : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@532dacf5
[2019-08-27 10:11:58.523] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Initializing ExecutorService
[2019-08-27 10:11:59.662] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'characterEncodingFilter' to: [/*]
[2019-08-27 10:11:59.664] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'webMvcMetricsFilter' to: [/*]
[2019-08-27 10:11:59.664] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'springSecurityFilterChain' to: [/*]
[2019-08-27 10:11:59.665] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Mapping filter: 'httpTraceFilter' to: [/*]
[2019-08-27 10:11:59.665] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Servlet dispatcherServlet mapped to [/]
[2019-08-27 10:12:02.767] [INFO ] - [main][ com.core.framework.config.redis.JedisClusterConfig.getJedisCluster(JedisClusterConfig.java:35)] : 进入redis集群初始化方法：访问集群地址为：[154.222.138.5:7000, 154.222.138.5:7001, 154.222.138.5:7002, 154.222.138.5:7003, 154.222.138.5:7004, 154.222.138.5:7005]
[2019-08-27 10:12:03.334] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.c2c.service.ITLegalCurrencyAccountServicedubbo://localhost:20884 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-27 10:12:04.873] [WARN ] - [main][ com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:98)] :  [DUBBO] Failed to start NettyClient HAHE/192.168.1.12 connect to the server localhost/127.0.0.1:20884 (check == false, ignore and retry later!), cause: client(url: dubbo://localhost:20884/com.bittrade.c2c.service.ITLegalCurrencyAccountService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.c2c.service.ITLegalCurrencyAccountService&methods=getByUserIdAndCoinId,removeById,lambdaQuery,removeByMap,getC2CAccount,listByIds,freezeAmount,removeBy,getBy,updateBatchById,getsBy,saveOrUpdate,add,totalConversion,modifyWithSelectiveBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,detail,page,modifyByPK,c2cOut,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,availableBalance,getBaseMapper,c2cIn,removeByIds,get,lambdaUpdate,unFreezeAmount,getAssets,modifyBy,getsByPagination,getCoinByName,listMaps,saveBatch,modifyWithSelectiveByPK,gets,updateById,pageMaps,listByMap,getByPK&pid=3848&register.ip=192.168.1.12&side=consumer&timestamp=1566871923335) failed to connect to server localhost/127.0.0.1:20884, error message is:Connection refused: no further information, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20884/com.bittrade.c2c.service.ITLegalCurrencyAccountService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.c2c.service.ITLegalCurrencyAccountService&methods=getByUserIdAndCoinId,removeById,lambdaQuery,removeByMap,getC2CAccount,listByIds,freezeAmount,removeBy,getBy,updateBatchById,getsBy,saveOrUpdate,add,totalConversion,modifyWithSelectiveBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,detail,page,modifyByPK,c2cOut,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,availableBalance,getBaseMapper,c2cIn,removeByIds,get,lambdaUpdate,unFreezeAmount,getAssets,modifyBy,getsByPagination,getCoinByName,listMaps,saveBatch,modifyWithSelectiveByPK,gets,updateById,pageMaps,listByMap,getByPK&pid=3848&register.ip=192.168.1.12&side=consumer&timestamp=1566871923335) failed to connect to server localhost/127.0.0.1:20884, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:89)
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.<init>(NettyClient.java:59)
	at com.alibaba.dubbo.remoting.transport.netty.NettyTransporter.connect(NettyTransporter.java:37)
	at com.alibaba.dubbo.remoting.Transporter$Adaptive.connect(Transporter$Adaptive.java)
	at com.alibaba.dubbo.remoting.Transporters.connect(Transporters.java:75)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchanger.connect(HeaderExchanger.java:39)
	at com.alibaba.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:109)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.initClient(DubboProtocol.java:409)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getSharedClient(DubboProtocol.java:377)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getClients(DubboProtocol.java:354)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.refer(DubboProtocol.java:336)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:108)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:65)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:67)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:394)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:333)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:163)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:66)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceFieldElement.inject(ReferenceAnnotationBeanPostProcessor.java:367)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.postProcessPropertyValues(ReferenceAnnotationBeanPostProcessor.java:92)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1135)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1062)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:581)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:370)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:759)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:548)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:386)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at com.core.framework.BaseApplication.run(BaseApplication.java:64)
	at com.core.framework.BaseApplication.run(BaseApplication.java:74)
	at com.bittrade.currency.CurrencyApplication.main(CurrencyApplication.java:18)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-08-27 10:12:05.036] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.wallet.biz.api.service.IWWalletAccountServicedubbo://localhost:20883 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-27 10:12:06.081] [WARN ] - [main][ com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:98)] :  [DUBBO] Failed to start NettyClient HAHE/192.168.1.12 connect to the server localhost/127.0.0.1:20883 (check == false, ignore and retry later!), cause: client(url: dubbo://localhost:20883/com.wallet.biz.api.service.IWWalletAccountService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.wallet.biz.api.service.IWWalletAccountService&methods=removeById,lambdaQuery,save,removeByMap,update,getObj,fundAccountIn,saveOrUpdateBatch,remove,listByIds,getBaseMapper,removeByIds,getAccount,updateBatchById,lambdaUpdate,fundAccountOut,saveOrUpdate,totalConversion,listMaps,saveBatch,query,count,listObjs,list,getMap,updateById,pageMaps,listByMap,getById,getOne,detail,page&pid=3848&register.ip=192.168.1.12&side=consumer&timestamp=1566871925037) failed to connect to server localhost/127.0.0.1:20883, error message is:Connection refused: no further information, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20883/com.wallet.biz.api.service.IWWalletAccountService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.wallet.biz.api.service.IWWalletAccountService&methods=removeById,lambdaQuery,save,removeByMap,update,getObj,fundAccountIn,saveOrUpdateBatch,remove,listByIds,getBaseMapper,removeByIds,getAccount,updateBatchById,lambdaUpdate,fundAccountOut,saveOrUpdate,totalConversion,listMaps,saveBatch,query,count,listObjs,list,getMap,updateById,pageMaps,listByMap,getById,getOne,detail,page&pid=3848&register.ip=192.168.1.12&side=consumer&timestamp=1566871925037) failed to connect to server localhost/127.0.0.1:20883, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:89)
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.<init>(NettyClient.java:59)
	at com.alibaba.dubbo.remoting.transport.netty.NettyTransporter.connect(NettyTransporter.java:37)
	at com.alibaba.dubbo.remoting.Transporter$Adaptive.connect(Transporter$Adaptive.java)
	at com.alibaba.dubbo.remoting.Transporters.connect(Transporters.java:75)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchanger.connect(HeaderExchanger.java:39)
	at com.alibaba.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:109)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.initClient(DubboProtocol.java:409)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getSharedClient(DubboProtocol.java:377)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getClients(DubboProtocol.java:354)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.refer(DubboProtocol.java:336)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:108)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:65)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:67)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:394)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:333)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:163)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:66)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceFieldElement.inject(ReferenceAnnotationBeanPostProcessor.java:367)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.postProcessPropertyValues(ReferenceAnnotationBeanPostProcessor.java:92)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1135)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1062)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:581)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:370)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:759)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:548)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:386)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at com.core.framework.BaseApplication.run(BaseApplication.java:64)
	at com.core.framework.BaseApplication.run(BaseApplication.java:74)
	at com.bittrade.currency.CurrencyApplication.main(CurrencyApplication.java:18)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-08-27 10:12:06.837] [WARN ] - [DubboClientReconnectTimer-thread-1][ com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:171)] :  [DUBBO] client reconnect to localhost:20884 find error . url: dubbo://localhost:20884/com.bittrade.c2c.service.ITLegalCurrencyAccountService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.c2c.service.ITLegalCurrencyAccountService&methods=getByUserIdAndCoinId,removeById,lambdaQuery,removeByMap,getC2CAccount,listByIds,freezeAmount,removeBy,getBy,updateBatchById,getsBy,saveOrUpdate,add,totalConversion,modifyWithSelectiveBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,detail,page,modifyByPK,c2cOut,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,availableBalance,getBaseMapper,c2cIn,removeByIds,get,lambdaUpdate,unFreezeAmount,getAssets,modifyBy,getsByPagination,getCoinByName,listMaps,saveBatch,modifyWithSelectiveByPK,gets,updateById,pageMaps,listByMap,getByPK&pid=3848&register.ip=192.168.1.12&side=consumer&timestamp=1566871923335, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20884/com.bittrade.c2c.service.ITLegalCurrencyAccountService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.c2c.service.ITLegalCurrencyAccountService&methods=getByUserIdAndCoinId,removeById,lambdaQuery,removeByMap,getC2CAccount,listByIds,freezeAmount,removeBy,getBy,updateBatchById,getsBy,saveOrUpdate,add,totalConversion,modifyWithSelectiveBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,detail,page,modifyByPK,c2cOut,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,availableBalance,getBaseMapper,c2cIn,removeByIds,get,lambdaUpdate,unFreezeAmount,getAssets,modifyBy,getsByPagination,getCoinByName,listMaps,saveBatch,modifyWithSelectiveByPK,gets,updateById,pageMaps,listByMap,getByPK&pid=3848&register.ip=192.168.1.12&side=consumer&timestamp=1566871923335) failed to connect to server localhost/127.0.0.1:20884, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:156)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	... 3 common frames omitted
[2019-08-27 10:12:07.418] [WARN ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'SSOClientController': Unsatisfied dependency expressed through field 'consumerTokenServices'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jwtTokenServices' defined in class path resource [org/springframework/boot/autoconfigure/security/oauth2/resource/ResourceServerTokenServicesConfiguration$JwtTokenServicesConfiguration.class]: Unsatisfied dependency expressed through method 'jwtTokenServices' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jwtTokenStore' defined in class path resource [org/springframework/boot/autoconfigure/security/oauth2/resource/ResourceServerTokenServicesConfiguration$JwtTokenServicesConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.security.oauth2.provider.token.TokenStore]: Factory method 'jwtTokenStore' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jwtTokenEnhancer' defined in class path resource [org/springframework/boot/autoconfigure/security/oauth2/resource/ResourceServerTokenServicesConfiguration$JwtTokenServicesConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.security.oauth2.provider.token.store.JwtAccessTokenConverter]: Factory method 'jwtTokenEnhancer' threw exception; nested exception is org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8087/oauth/token_key": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
[2019-08-27 10:12:07.422] [WARN ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Destroy method 'close' on bean with name 'eurekaRegistration' threw an exception: org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
[2019-08-27 10:12:07.425] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:99)] : Shutting down ExecutorService
[2019-08-27 10:12:07.426] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:1948)] : {dataSource-1} closing ...
[2019-08-27 10:12:07.433] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:2020)] : {dataSource-1} closed
[2019-08-27 10:12:08.072] [WARN ] - [DubboClientReconnectTimer-thread-2][ com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:171)] :  [DUBBO] client reconnect to localhost:20883 find error . url: dubbo://localhost:20883/com.wallet.biz.api.service.IWWalletAccountService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.wallet.biz.api.service.IWWalletAccountService&methods=removeById,lambdaQuery,save,removeByMap,update,getObj,fundAccountIn,saveOrUpdateBatch,remove,listByIds,getBaseMapper,removeByIds,getAccount,updateBatchById,lambdaUpdate,fundAccountOut,saveOrUpdate,totalConversion,listMaps,saveBatch,query,count,listObjs,list,getMap,updateById,pageMaps,listByMap,getById,getOne,detail,page&pid=3848&register.ip=192.168.1.12&side=consumer&timestamp=1566871925037, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20883/com.wallet.biz.api.service.IWWalletAccountService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.wallet.biz.api.service.IWWalletAccountService&methods=removeById,lambdaQuery,save,removeByMap,update,getObj,fundAccountIn,saveOrUpdateBatch,remove,listByIds,getBaseMapper,removeByIds,getAccount,updateBatchById,lambdaUpdate,fundAccountOut,saveOrUpdate,totalConversion,listMaps,saveBatch,query,count,listObjs,list,getMap,updateById,pageMaps,listByMap,getById,getOne,detail,page&pid=3848&register.ip=192.168.1.12&side=consumer&timestamp=1566871925037) failed to connect to server localhost/127.0.0.1:20883, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:156)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	... 3 common frames omitted
