<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
	This code is generated automatically. Please do not edit it.
	现在字段也可以要彻底动态？
-->
<mapper namespace="com.bittrade.__default.DAO.IDefaultTPaymentModeDAO">

	<!-- 通用查询映射结果 -->
	<resultMap id="BaseResultMap" type="com.bittrade.pojo.model.TPaymentMode">
		<id javaType="Long" property="id" jdbcType="BIGINT" column="id" />
		<result javaType="Long" property="userId" jdbcType="BIGINT" column="user_id" />
		<result javaType="Byte" property="type" jdbcType="INTEGER" column="type" />
		<result javaType="String" property="trueName" jdbcType="VARCHAR" column="true_name" />
		<result javaType="String" property="card" jdbcType="VARCHAR" column="card" />
		<result javaType="String" property="bankName" jdbcType="VARCHAR" column="bank_name" />
		<result javaType="String" property="bankBranch" jdbcType="VARCHAR" column="bank_branch" />
		<result javaType="String" property="qrCode" jdbcType="VARCHAR" column="qr_code" />
		<result javaType="Byte" property="status" jdbcType="INTEGER" column="status" />
		<result javaType="Byte" property="displaySetting" jdbcType="INTEGER" column="display_setting" />
		<result javaType="String" property="belongCurrency" jdbcType="VARCHAR" column="belong_currency" />
		<result javaType="java.time.LocalDateTime" property="createTime" jdbcType="TIMESTAMP" column="create_time" />
		<result javaType="java.time.LocalDateTime" property="updateTime" jdbcType="TIMESTAMP" column="update_time" />
	</resultMap>

	<!--
		通用查询结果列
		其他类似的类似，也可以公用（共用）引用。
	-->
	<sql id="Base_Column_List">
		`id` AS `id`, 
		`user_id` AS `userId`, 
		`type` AS `type`, 
		`true_name` AS `trueName`, 
		`card` AS `card`, 
		`bank_name` AS `bankName`, 
		`bank_branch` AS `bankBranch`, 
		`qr_code` AS `qrCode`, 
		`status` AS `status`, 
		`display_setting` AS `displaySetting`, 
		`belong_currency` AS `belongCurrency`, 
		`create_time` AS `createTime`, 
		`update_time` AS `updateTime`
	</sql>
	
	<!-- 其他的也可以类似的加， yes， 类似蕾丝的。 -->
	<sql id="sql_Column_forObject">
		<choose>
			<when test="tPaymentMode != null and tPaymentMode.strArr_field != null">
		<foreach collection="tPaymentMode.strArr_field" index="index" item="item" open="" separator="," close="">
			`${item}`
		</foreach>
			</when>
			<otherwise>
		<include refid="Base_Column_List"></include>
			</otherwise>
		</choose>
	</sql>
	
	<!-- 其他的也可以类似的加， yes， 类似蕾丝的。 -->
	<sql id="sql_WHERE_forProperty">
		<choose>
			<when test="map_in != null">
			
		<foreach collection="map_in.entrySet()" index="map_index" item="map_item">
		AND `${map_index}` IN 
		<foreach collection="map_item" index="arr_index" item="arr_item" open="(" separator="," close=")">
			#{arr_item}
		</foreach>
		</foreach>
			
			</when>
			<!--
			<when test="_parameter != null and _parameter.TPaymentMode != null and TPaymentMode.map_in != null">
			</when>
			<otherwise>
			</otherwise>
			-->
		</choose>
	</sql>
	<sql id="sql_WHERE_forObject">
		<if test="tPaymentMode != null and tPaymentMode.map_in != null">
		<foreach collection="tPaymentMode.map_in.entrySet()" index="map_index" item="map_item">
		AND `${map_index}` IN 
		<foreach collection="map_item" index="arr_index" item="arr_item" open="(" separator="," close=")">
			#{arr_item}
		</foreach>
		</foreach>
		</if>
		<if test="tPaymentMode != null and tPaymentMode.map_eq != null">
		<foreach collection="tPaymentMode.map_eq.entrySet()" index="map_index" item="map_item">
		AND `${map_index}` = #{map_item}
		</foreach>
		</if>
		<if test="tPaymentMode != null and tPaymentMode.map_le != null">
		<foreach collection="tPaymentMode.map_le.entrySet()" index="map_index" item="map_item">
		AND `${map_index}` &lt;= #{map_item}
		</foreach>
		</if>
		<if test="tPaymentMode != null and tPaymentMode.map_ge != null">
		<foreach collection="tPaymentMode.map_ge.entrySet()" index="map_index" item="map_item">
		AND `${map_index}` &gt;= #{map_item}
		</foreach>
		</if>
	</sql>
	
	
	<insert id="add" parameterType="com.bittrade.pojo.model.TPaymentMode" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO t_payment_mode(`user_id`, `type`, `true_name`, `card`, `bank_name`, `bank_branch`, `qr_code`, `status`, `display_setting`, `belong_currency`, `create_time`, `update_time`)
		VALUES(#{userId,jdbcType=BIGINT}, #{type,jdbcType=INTEGER}, #{trueName,jdbcType=VARCHAR}, #{card,jdbcType=VARCHAR}, #{bankName,jdbcType=VARCHAR}, #{bankBranch,jdbcType=VARCHAR}, #{qrCode,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{displaySetting,jdbcType=INTEGER}, #{belongCurrency,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
	</insert>
	
	<insert id="addWithSelective" parameterType="com.bittrade.pojo.model.TPaymentMode" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO t_payment_mode(
			<if test="userId != null">
			`user_id`, 
			</if>
			<if test="type != null">
			`type`, 
			</if>
			<if test="trueName != null">
			`true_name`, 
			</if>
			<if test="card != null">
			`card`, 
			</if>
			<if test="bankName != null">
			`bank_name`, 
			</if>
			<if test="bankBranch != null">
			`bank_branch`, 
			</if>
			<if test="qrCode != null">
			`qr_code`, 
			</if>
			<if test="status != null">
			`status`, 
			</if>
			<if test="displaySetting != null">
			`display_setting`, 
			</if>
			<if test="belongCurrency != null">
			`belong_currency`, 
			</if>
			<if test="createTime != null">
			`create_time`, 
			</if>
			<if test="updateTime != null">
			`update_time`
			</if>
		)
		VALUES(
			<if test="userId != null">
			#{userId,jdbcType=BIGINT}, 
			</if>
			<if test="type != null">
			#{type,jdbcType=INTEGER}, 
			</if>
			<if test="trueName != null">
			#{trueName,jdbcType=VARCHAR}, 
			</if>
			<if test="card != null">
			#{card,jdbcType=VARCHAR}, 
			</if>
			<if test="bankName != null">
			#{bankName,jdbcType=VARCHAR}, 
			</if>
			<if test="bankBranch != null">
			#{bankBranch,jdbcType=VARCHAR}, 
			</if>
			<if test="qrCode != null">
			#{qrCode,jdbcType=VARCHAR}, 
			</if>
			<if test="status != null">
			#{status,jdbcType=INTEGER}, 
			</if>
			<if test="displaySetting != null">
			#{displaySetting,jdbcType=INTEGER}, 
			</if>
			<if test="belongCurrency != null">
			#{belongCurrency,jdbcType=VARCHAR}, 
			</if>
			<if test="createTime != null">
			#{createTime,jdbcType=TIMESTAMP}, 
			</if>
			<if test="updateTime != null">
			#{updateTime,jdbcType=TIMESTAMP}
			</if>
		)
	</insert>
	
	<delete id="removeByPK">
		DELETE FROM t_payment_mode
		<where>
			AND `id` = #{id,jdbcType=BIGINT}
		</where>
	</delete>
	
	<delete id="removeBy" parameterType="com.bittrade.pojo.model.TPaymentMode">
		DELETE FROM t_payment_mode
		<where>
			<if test="userId != null">
			AND `user_id` = #{userId,jdbcType=BIGINT}
			</if>
			<if test="type != null">
			AND `type` = #{type,jdbcType=INTEGER}
			</if>
			<if test="trueName != null">
			AND `true_name` = #{trueName,jdbcType=VARCHAR}
			</if>
			<if test="card != null">
			AND `card` = #{card,jdbcType=VARCHAR}
			</if>
			<if test="bankName != null">
			AND `bank_name` = #{bankName,jdbcType=VARCHAR}
			</if>
			<if test="bankBranch != null">
			AND `bank_branch` = #{bankBranch,jdbcType=VARCHAR}
			</if>
			<if test="qrCode != null">
			AND `qr_code` = #{qrCode,jdbcType=VARCHAR}
			</if>
			<if test="status != null">
			AND `status` = #{status,jdbcType=INTEGER}
			</if>
			<if test="displaySetting != null">
			AND `display_setting` = #{displaySetting,jdbcType=INTEGER}
			</if>
			<if test="belongCurrency != null">
			AND `belong_currency` = #{belongCurrency,jdbcType=VARCHAR}
			</if>
			<if test="createTime != null">
			AND `create_time` = #{createTime,jdbcType=TIMESTAMP}
			</if>
			<if test="updateTime != null">
			AND `update_time` = #{updateTime,jdbcType=TIMESTAMP}
			</if>
		</where>
	</delete>
	
	<update id="modifyByPK" parameterType="com.bittrade.pojo.model.TPaymentMode">
		UPDATE t_payment_mode
		<set>
			`user_id` = #{userId,jdbcType=BIGINT}, 
			`type` = #{type,jdbcType=INTEGER}, 
			`true_name` = #{trueName,jdbcType=VARCHAR}, 
			`card` = #{card,jdbcType=VARCHAR}, 
			`bank_name` = #{bankName,jdbcType=VARCHAR}, 
			`bank_branch` = #{bankBranch,jdbcType=VARCHAR}, 
			`qr_code` = #{qrCode,jdbcType=VARCHAR}, 
			`status` = #{status,jdbcType=INTEGER}, 
			`display_setting` = #{displaySetting,jdbcType=INTEGER}, 
			`belong_currency` = #{belongCurrency,jdbcType=VARCHAR}, 
			`create_time` = #{createTime,jdbcType=TIMESTAMP}, 
			`update_time` = #{updateTime,jdbcType=TIMESTAMP}, 
		</set>
		<where>
			AND `id` = #{id,jdbcType=BIGINT}
		</where>
	</update>
	
	<update id="modifyWithSelectiveByPK" parameterType="com.bittrade.pojo.model.TPaymentMode">
		UPDATE t_payment_mode
		<set>
			<if test="userId != null">
			`user_id` = #{userId,jdbcType=BIGINT}, 
			</if>
			<if test="type != null">
			`type` = #{type,jdbcType=INTEGER}, 
			</if>
			<if test="trueName != null">
			`true_name` = #{trueName,jdbcType=VARCHAR}, 
			</if>
			<if test="card != null">
			`card` = #{card,jdbcType=VARCHAR}, 
			</if>
			<if test="bankName != null">
			`bank_name` = #{bankName,jdbcType=VARCHAR}, 
			</if>
			<if test="bankBranch != null">
			`bank_branch` = #{bankBranch,jdbcType=VARCHAR}, 
			</if>
			<if test="qrCode != null">
			`qr_code` = #{qrCode,jdbcType=VARCHAR}, 
			</if>
			<if test="status != null">
			`status` = #{status,jdbcType=INTEGER}, 
			</if>
			<if test="displaySetting != null">
			`display_setting` = #{displaySetting,jdbcType=INTEGER}, 
			</if>
			<if test="belongCurrency != null">
			`belong_currency` = #{belongCurrency,jdbcType=VARCHAR}, 
			</if>
			<if test="createTime != null">
			`create_time` = #{createTime,jdbcType=TIMESTAMP}, 
			</if>
			<if test="updateTime != null">
			`update_time` = #{updateTime,jdbcType=TIMESTAMP}, 
			</if>
		</set>
		<where>
			AND `id` = #{id,jdbcType=BIGINT}
		</where>
	</update>
	
	<update id="modifyBy">
		UPDATE t_payment_mode
		<set>
			`user_id` = #{tPaymentMode.userId,jdbcType=BIGINT}, 
			`type` = #{tPaymentMode.type,jdbcType=INTEGER}, 
			`true_name` = #{tPaymentMode.trueName,jdbcType=VARCHAR}, 
			`card` = #{tPaymentMode.card,jdbcType=VARCHAR}, 
			`bank_name` = #{tPaymentMode.bankName,jdbcType=VARCHAR}, 
			`bank_branch` = #{tPaymentMode.bankBranch,jdbcType=VARCHAR}, 
			`qr_code` = #{tPaymentMode.qrCode,jdbcType=VARCHAR}, 
			`status` = #{tPaymentMode.status,jdbcType=INTEGER}, 
			`display_setting` = #{tPaymentMode.displaySetting,jdbcType=INTEGER}, 
			`belong_currency` = #{tPaymentMode.belongCurrency,jdbcType=VARCHAR}, 
			`create_time` = #{tPaymentMode.createTime,jdbcType=TIMESTAMP}, 
			`update_time` = #{tPaymentMode.updateTime,jdbcType=TIMESTAMP}, 
		</set>
		<where>
		<if test="condiTPaymentMode != null">
			<if test="condiTPaymentMode.id != null">
			AND `id` = #{condiTPaymentMode.id,jdbcType=BIGINT}
			</if>
			<if test="condiTPaymentMode.userId != null">
			AND `user_id` = #{condiTPaymentMode.userId,jdbcType=BIGINT}
			</if>
			<if test="condiTPaymentMode.type != null">
			AND `type` = #{condiTPaymentMode.type,jdbcType=INTEGER}
			</if>
			<if test="condiTPaymentMode.trueName != null">
			AND `true_name` = #{condiTPaymentMode.trueName,jdbcType=VARCHAR}
			</if>
			<if test="condiTPaymentMode.card != null">
			AND `card` = #{condiTPaymentMode.card,jdbcType=VARCHAR}
			</if>
			<if test="condiTPaymentMode.bankName != null">
			AND `bank_name` = #{condiTPaymentMode.bankName,jdbcType=VARCHAR}
			</if>
			<if test="condiTPaymentMode.bankBranch != null">
			AND `bank_branch` = #{condiTPaymentMode.bankBranch,jdbcType=VARCHAR}
			</if>
			<if test="condiTPaymentMode.qrCode != null">
			AND `qr_code` = #{condiTPaymentMode.qrCode,jdbcType=VARCHAR}
			</if>
			<if test="condiTPaymentMode.status != null">
			AND `status` = #{condiTPaymentMode.status,jdbcType=INTEGER}
			</if>
			<if test="condiTPaymentMode.displaySetting != null">
			AND `display_setting` = #{condiTPaymentMode.displaySetting,jdbcType=INTEGER}
			</if>
			<if test="condiTPaymentMode.belongCurrency != null">
			AND `belong_currency` = #{condiTPaymentMode.belongCurrency,jdbcType=VARCHAR}
			</if>
			<if test="condiTPaymentMode.createTime != null">
			AND `create_time` = #{condiTPaymentMode.createTime,jdbcType=TIMESTAMP}
			</if>
			<if test="condiTPaymentMode.updateTime != null">
			AND `update_time` = #{condiTPaymentMode.updateTime,jdbcType=TIMESTAMP}
			</if>
		</if>
		</where>
	</update>
	
	<update id="modifyWithSelectiveBy">
		UPDATE t_payment_mode
		<set>
		<if test="tPaymentMode != null">
			<if test="tPaymentMode.userId != null">
			`user_id` = #{tPaymentMode.userId,jdbcType=BIGINT}, 
			</if>
			<if test="tPaymentMode.type != null">
			`type` = #{tPaymentMode.type,jdbcType=INTEGER}, 
			</if>
			<if test="tPaymentMode.trueName != null">
			`true_name` = #{tPaymentMode.trueName,jdbcType=VARCHAR}, 
			</if>
			<if test="tPaymentMode.card != null">
			`card` = #{tPaymentMode.card,jdbcType=VARCHAR}, 
			</if>
			<if test="tPaymentMode.bankName != null">
			`bank_name` = #{tPaymentMode.bankName,jdbcType=VARCHAR}, 
			</if>
			<if test="tPaymentMode.bankBranch != null">
			`bank_branch` = #{tPaymentMode.bankBranch,jdbcType=VARCHAR}, 
			</if>
			<if test="tPaymentMode.qrCode != null">
			`qr_code` = #{tPaymentMode.qrCode,jdbcType=VARCHAR}, 
			</if>
			<if test="tPaymentMode.status != null">
			`status` = #{tPaymentMode.status,jdbcType=INTEGER}, 
			</if>
			<if test="tPaymentMode.displaySetting != null">
			`display_setting` = #{tPaymentMode.displaySetting,jdbcType=INTEGER}, 
			</if>
			<if test="tPaymentMode.belongCurrency != null">
			`belong_currency` = #{tPaymentMode.belongCurrency,jdbcType=VARCHAR}, 
			</if>
			<if test="tPaymentMode.createTime != null">
			`create_time` = #{tPaymentMode.createTime,jdbcType=TIMESTAMP}, 
			</if>
			<if test="tPaymentMode.updateTime != null">
			`update_time` = #{tPaymentMode.updateTime,jdbcType=TIMESTAMP}, 
			</if>
		</if>
		</set>
		<where>
		<if test="condiTPaymentMode != null">
			<if test="condiTPaymentMode.id != null">
			AND `id` = #{condiTPaymentMode.id,jdbcType=BIGINT}
			</if>
			<if test="condiTPaymentMode.userId != null">
			AND `user_id` = #{condiTPaymentMode.userId,jdbcType=BIGINT}
			</if>
			<if test="condiTPaymentMode.type != null">
			AND `type` = #{condiTPaymentMode.type,jdbcType=INTEGER}
			</if>
			<if test="condiTPaymentMode.trueName != null">
			AND `true_name` = #{condiTPaymentMode.trueName,jdbcType=VARCHAR}
			</if>
			<if test="condiTPaymentMode.card != null">
			AND `card` = #{condiTPaymentMode.card,jdbcType=VARCHAR}
			</if>
			<if test="condiTPaymentMode.bankName != null">
			AND `bank_name` = #{condiTPaymentMode.bankName,jdbcType=VARCHAR}
			</if>
			<if test="condiTPaymentMode.bankBranch != null">
			AND `bank_branch` = #{condiTPaymentMode.bankBranch,jdbcType=VARCHAR}
			</if>
			<if test="condiTPaymentMode.qrCode != null">
			AND `qr_code` = #{condiTPaymentMode.qrCode,jdbcType=VARCHAR}
			</if>
			<if test="condiTPaymentMode.status != null">
			AND `status` = #{condiTPaymentMode.status,jdbcType=INTEGER}
			</if>
			<if test="condiTPaymentMode.displaySetting != null">
			AND `display_setting` = #{condiTPaymentMode.displaySetting,jdbcType=INTEGER}
			</if>
			<if test="condiTPaymentMode.belongCurrency != null">
			AND `belong_currency` = #{condiTPaymentMode.belongCurrency,jdbcType=VARCHAR}
			</if>
			<if test="condiTPaymentMode.createTime != null">
			AND `create_time` = #{condiTPaymentMode.createTime,jdbcType=TIMESTAMP}
			</if>
			<if test="condiTPaymentMode.updateTime != null">
			AND `update_time` = #{condiTPaymentMode.updateTime,jdbcType=TIMESTAMP}
			</if>
		</if>
		</where>
	</update>
	
	<select id="getByPK" resultType="com.bittrade.pojo.model.TPaymentMode">
		SELECT 
			`id`, 
			`user_id`, 
			`type`, 
			`true_name`, 
			`card`, 
			`bank_name`, 
			`bank_branch`, 
			`qr_code`, 
			`status`, 
			`display_setting`, 
			`belong_currency`, 
			`create_time`, 
			`update_time`
		FROM t_payment_mode
		<where>
			AND `id` = #{id,jdbcType=BIGINT}
		</where>
	</select>
	
	<select id="getBy" resultType="com.bittrade.pojo.model.TPaymentMode">
		SELECT 
			`id`, 
			`user_id`, 
			`type`, 
			`true_name`, 
			`card`, 
			`bank_name`, 
			`bank_branch`, 
			`qr_code`, 
			`status`, 
			`display_setting`, 
			`belong_currency`, 
			`create_time`, 
			`update_time`
		FROM t_payment_mode
		<where>
			<if test="userId != null">
			AND `user_id` = #{userId,jdbcType=BIGINT}
			</if>
			<if test="type != null">
			AND `type` = #{type,jdbcType=INTEGER}
			</if>
			<if test="trueName != null">
			AND `true_name` = #{trueName,jdbcType=VARCHAR}
			</if>
			<if test="card != null">
			AND `card` = #{card,jdbcType=VARCHAR}
			</if>
			<if test="bankName != null">
			AND `bank_name` = #{bankName,jdbcType=VARCHAR}
			</if>
			<if test="bankBranch != null">
			AND `bank_branch` = #{bankBranch,jdbcType=VARCHAR}
			</if>
			<if test="qrCode != null">
			AND `qr_code` = #{qrCode,jdbcType=VARCHAR}
			</if>
			<if test="status != null">
			AND `status` = #{status,jdbcType=INTEGER}
			</if>
			<if test="displaySetting != null">
			AND `display_setting` = #{displaySetting,jdbcType=INTEGER}
			</if>
			<if test="belongCurrency != null">
			AND `belong_currency` = #{belongCurrency,jdbcType=VARCHAR}
			</if>
			<if test="createTime != null">
			AND `create_time` = #{createTime,jdbcType=TIMESTAMP}
			</if>
			<if test="updateTime != null">
			AND `update_time` = #{updateTime,jdbcType=TIMESTAMP}
			</if>
		</where>
		LIMIT 1
	</select>
	
	<select id="get" resultType="com.bittrade.pojo.model.TPaymentMode">
		SELECT 
			`id`, 
			`user_id`, 
			`type`, 
			`true_name`, 
			`card`, 
			`bank_name`, 
			`bank_branch`, 
			`qr_code`, 
			`status`, 
			`display_setting`, 
			`belong_currency`, 
			`create_time`, 
			`update_time`
		FROM t_payment_mode
		LIMIT 1
	</select>
	
	<select id="getsBy" resultType="com.bittrade.pojo.model.TPaymentMode">
		SELECT 
			<include refid="Base_Column_List"></include>
		FROM t_payment_mode
		<where>
			<if test="userId != null">
			AND `user_id` = #{userId,jdbcType=BIGINT}
			</if>
			<if test="type != null">
			AND `type` = #{type,jdbcType=INTEGER}
			</if>
			<if test="trueName != null">
			AND `true_name` = #{trueName,jdbcType=VARCHAR}
			</if>
			<if test="card != null">
			AND `card` = #{card,jdbcType=VARCHAR}
			</if>
			<if test="bankName != null">
			AND `bank_name` = #{bankName,jdbcType=VARCHAR}
			</if>
			<if test="bankBranch != null">
			AND `bank_branch` = #{bankBranch,jdbcType=VARCHAR}
			</if>
			<if test="qrCode != null">
			AND `qr_code` = #{qrCode,jdbcType=VARCHAR}
			</if>
			<if test="status != null">
			AND `status` = #{status,jdbcType=INTEGER}
			</if>
			<if test="displaySetting != null">
			AND `display_setting` = #{displaySetting,jdbcType=INTEGER}
			</if>
			<if test="belongCurrency != null">
			AND `belong_currency` = #{belongCurrency,jdbcType=VARCHAR}
			</if>
			<if test="createTime != null">
			AND `create_time` = #{createTime,jdbcType=TIMESTAMP}
			</if>
			<if test="updateTime != null">
			AND `update_time` = #{updateTime,jdbcType=TIMESTAMP}
			</if>
			<include refid="sql_WHERE_forProperty"></include>
		</where>
	</select>
	
	<select id="gets" resultType="com.bittrade.pojo.model.TPaymentMode">
		SELECT 
			<include refid="Base_Column_List"></include>
		FROM t_payment_mode
	</select>
	
	<select id="getCntBy" resultType="int">
		SELECT COUNT(1)
		FROM t_payment_mode
		<where>
		<if test="tPaymentMode != null">
			<if test="tPaymentMode.userId != null">
			AND `user_id` = #{tPaymentMode.userId,jdbcType=BIGINT}
			</if>
			<if test="tPaymentMode.type != null">
			AND `type` = #{tPaymentMode.type,jdbcType=INTEGER}
			</if>
			<if test="tPaymentMode.trueName != null">
			AND `true_name` = #{tPaymentMode.trueName,jdbcType=VARCHAR}
			</if>
			<if test="tPaymentMode.card != null">
			AND `card` = #{tPaymentMode.card,jdbcType=VARCHAR}
			</if>
			<if test="tPaymentMode.bankName != null">
			AND `bank_name` = #{tPaymentMode.bankName,jdbcType=VARCHAR}
			</if>
			<if test="tPaymentMode.bankBranch != null">
			AND `bank_branch` = #{tPaymentMode.bankBranch,jdbcType=VARCHAR}
			</if>
			<if test="tPaymentMode.qrCode != null">
			AND `qr_code` = #{tPaymentMode.qrCode,jdbcType=VARCHAR}
			</if>
			<if test="tPaymentMode.status != null">
			AND `status` = #{tPaymentMode.status,jdbcType=INTEGER}
			</if>
			<if test="tPaymentMode.displaySetting != null">
			AND `display_setting` = #{tPaymentMode.displaySetting,jdbcType=INTEGER}
			</if>
			<if test="tPaymentMode.belongCurrency != null">
			AND `belong_currency` = #{tPaymentMode.belongCurrency,jdbcType=VARCHAR}
			</if>
			<if test="tPaymentMode.createTime != null">
			AND `create_time` = #{tPaymentMode.createTime,jdbcType=TIMESTAMP}
			</if>
			<if test="tPaymentMode.updateTime != null">
			AND `update_time` = #{tPaymentMode.updateTime,jdbcType=TIMESTAMP}
			</if>
			<include refid="sql_WHERE_forObject"></include>
		</if>
		</where>
	</select>
	
	<select id="getsByPage" resultType="com.bittrade.pojo.model.TPaymentMode">
		SELECT 
			`id`, 
			`user_id`, 
			`type`, 
			`true_name`, 
			`card`, 
			`bank_name`, 
			`bank_branch`, 
			`qr_code`, 
			`status`, 
			`display_setting`, 
			`belong_currency`, 
			`create_time`, 
			`update_time`
		FROM t_payment_mode
		<where>
		<if test="tPaymentMode != null">
			<if test="tPaymentMode.userId != null">
			AND `user_id` = #{tPaymentMode.userId,jdbcType=BIGINT}
			</if>
			<if test="tPaymentMode.type != null">
			AND `type` = #{tPaymentMode.type,jdbcType=INTEGER}
			</if>
			<if test="tPaymentMode.trueName != null">
			AND `true_name` = #{tPaymentMode.trueName,jdbcType=VARCHAR}
			</if>
			<if test="tPaymentMode.card != null">
			AND `card` = #{tPaymentMode.card,jdbcType=VARCHAR}
			</if>
			<if test="tPaymentMode.bankName != null">
			AND `bank_name` = #{tPaymentMode.bankName,jdbcType=VARCHAR}
			</if>
			<if test="tPaymentMode.bankBranch != null">
			AND `bank_branch` = #{tPaymentMode.bankBranch,jdbcType=VARCHAR}
			</if>
			<if test="tPaymentMode.qrCode != null">
			AND `qr_code` = #{tPaymentMode.qrCode,jdbcType=VARCHAR}
			</if>
			<if test="tPaymentMode.status != null">
			AND `status` = #{tPaymentMode.status,jdbcType=INTEGER}
			</if>
			<if test="tPaymentMode.displaySetting != null">
			AND `display_setting` = #{tPaymentMode.displaySetting,jdbcType=INTEGER}
			</if>
			<if test="tPaymentMode.belongCurrency != null">
			AND `belong_currency` = #{tPaymentMode.belongCurrency,jdbcType=VARCHAR}
			</if>
			<if test="tPaymentMode.createTime != null">
			AND `create_time` = #{tPaymentMode.createTime,jdbcType=TIMESTAMP}
			</if>
			<if test="tPaymentMode.updateTime != null">
			AND `update_time` = #{tPaymentMode.updateTime,jdbcType=TIMESTAMP}
			</if>
			<include refid="sql_WHERE_forObject"></include>
		</if>
		</where>
		LIMIT #{page}, #{size}
	</select>
	
	<select id="getDTOBy" resultType="com.bittrade.pojo.dto.TPaymentModeDTO">
		SELECT 
			`id`, 
			`user_id`, 
			`type`, 
			`true_name`, 
			`card`, 
			`bank_name`, 
			`bank_branch`, 
			`qr_code`, 
			`status`, 
			`display_setting`, 
			`belong_currency`, 
			`create_time`, 
			`update_time`
		FROM t_payment_mode
		<where>
			<if test="userId != null">
			AND `user_id` = #{userId,jdbcType=BIGINT}
			</if>
			<if test="type != null">
			AND `type` = #{type,jdbcType=INTEGER}
			</if>
			<if test="trueName != null">
			AND `true_name` = #{trueName,jdbcType=VARCHAR}
			</if>
			<if test="card != null">
			AND `card` = #{card,jdbcType=VARCHAR}
			</if>
			<if test="bankName != null">
			AND `bank_name` = #{bankName,jdbcType=VARCHAR}
			</if>
			<if test="bankBranch != null">
			AND `bank_branch` = #{bankBranch,jdbcType=VARCHAR}
			</if>
			<if test="qrCode != null">
			AND `qr_code` = #{qrCode,jdbcType=VARCHAR}
			</if>
			<if test="status != null">
			AND `status` = #{status,jdbcType=INTEGER}
			</if>
			<if test="displaySetting != null">
			AND `display_setting` = #{displaySetting,jdbcType=INTEGER}
			</if>
			<if test="belongCurrency != null">
			AND `belong_currency` = #{belongCurrency,jdbcType=VARCHAR}
			</if>
			<if test="createTime != null">
			AND `create_time` = #{createTime,jdbcType=TIMESTAMP}
			</if>
			<if test="updateTime != null">
			AND `update_time` = #{updateTime,jdbcType=TIMESTAMP}
			</if>
		</where>
		LIMIT 1
	</select>
	
	<select id="getsDTOBy" resultType="com.bittrade.pojo.dto.TPaymentModeDTO">
		SELECT 
			<include refid="sql_Column_forObject"></include>
		FROM t_payment_mode
		<where>
			<include refid="sql_WHERE_forObject"></include>
		</where>
	</select>

</mapper>