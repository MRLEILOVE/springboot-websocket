<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
	This code is generated automatically. Please do not edit it.
	现在字段也可以要彻底动态？
-->
<mapper namespace="com.bittrade.__default.DAO.IDefaultTCurrencyDAO">

	<!-- 通用查询映射结果 -->
	<resultMap id="BaseResultMap" type="com.bittrade.pojo.model.TCurrency">
		<id javaType="Integer" property="id" jdbcType="INTEGER" column="id" />
		<result javaType="String" property="name" jdbcType="VARCHAR" column="name" />
		<result javaType="String" property="shortName" jdbcType="VARCHAR" column="short_name" />
		<result javaType="Byte" property="status" jdbcType="INTEGER" column="status" />
		<result javaType="Byte" property="type" jdbcType="INTEGER" column="type" />
		<result javaType="String" property="desc" jdbcType="VARCHAR" column="desc" />
		<result javaType="java.time.LocalDateTime" property="createTime" jdbcType="TIMESTAMP" column="create_time" />
	</resultMap>

	<!--
		通用查询结果列
		其他类似的类似，也可以公用（共用）引用。
	-->
	<sql id="Base_Column_List">
		<choose>
			<when test="strArr_field != null">
		<foreach collection="strArr_field" index="index" item="item" open="" separator="," close="">
			`${item}`
		</foreach>
			</when>
			<otherwise>
		`id` AS `id`, 
		`name` AS `name`, 
		`short_name` AS `shortName`, 
		`status` AS `status`, 
		`type` AS `type`, 
		`desc` AS `desc`, 
		`create_time` AS `createTime`
			</otherwise>
		</choose>
	</sql>
	
	<!-- 其他的也可以类似的加， yes， 类似蕾丝的。 -->
	<sql id="sql_WHERE_forProperty">
		<choose>
			<when test="map_in != null">
			
		<foreach collection="map_in.entrySet()" index="map_index" item="map_item">
		AND `${map_index}` IN 
		<foreach collection="map_item" index="arr_index" item="arr_item" open="(" separator="," close=")">
			#{arr_item}
		</foreach>
		</foreach>
			
			</when>
			<!--
			<when test="_parameter != null and _parameter.TCurrency != null and TCurrency.map_in != null">
			</when>
			<otherwise>
			</otherwise>
			-->
		</choose>
	</sql>
	<sql id="sql_WHERE_forObject">
		<choose>
			<when test="tCurrency.map_in != null">
			
		<foreach collection="tCurrency.map_in.entrySet()" index="map_index" item="map_item">
		AND `${map_index}` IN 
		<foreach collection="map_item" index="arr_index" item="arr_item" open="(" separator="," close=")">
			#{arr_item}
		</foreach>
		</foreach>
			
			</when>
		</choose>
	</sql>
	
	
	<insert id="add" parameterType="com.bittrade.pojo.model.TCurrency" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO t_currency(`name`, `short_name`, `status`, `type`, `desc`, `create_time`)
		VALUES(#{name,jdbcType=VARCHAR}, #{shortName,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{desc,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP})
	</insert>
	
	<insert id="addWithSelective" parameterType="com.bittrade.pojo.model.TCurrency" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO t_currency(
			<if test="name != null">
			`name`, 
			</if>
			<if test="shortName != null">
			`short_name`, 
			</if>
			<if test="status != null">
			`status`, 
			</if>
			<if test="type != null">
			`type`, 
			</if>
			<if test="desc != null">
			`desc`, 
			</if>
			<if test="createTime != null">
			`create_time`
			</if>
		)
		VALUES(
			<if test="name != null">
			#{name,jdbcType=VARCHAR}, 
			</if>
			<if test="shortName != null">
			#{shortName,jdbcType=VARCHAR}, 
			</if>
			<if test="status != null">
			#{status,jdbcType=INTEGER}, 
			</if>
			<if test="type != null">
			#{type,jdbcType=INTEGER}, 
			</if>
			<if test="desc != null">
			#{desc,jdbcType=VARCHAR}, 
			</if>
			<if test="createTime != null">
			#{createTime,jdbcType=TIMESTAMP}
			</if>
		)
	</insert>
	
	<delete id="removeByPK">
		DELETE FROM t_currency
		<where>
			AND `id` = #{id,jdbcType=INTEGER}
		</where>
	</delete>
	
	<delete id="removeBy" parameterType="com.bittrade.pojo.model.TCurrency">
		DELETE FROM t_currency
		<where>
			<if test="name != null">
			AND `name` = #{name,jdbcType=VARCHAR}
			</if>
			<if test="shortName != null">
			AND `short_name` = #{shortName,jdbcType=VARCHAR}
			</if>
			<if test="status != null">
			AND `status` = #{status,jdbcType=INTEGER}
			</if>
			<if test="type != null">
			AND `type` = #{type,jdbcType=INTEGER}
			</if>
			<if test="desc != null">
			AND `desc` = #{desc,jdbcType=VARCHAR}
			</if>
			<if test="createTime != null">
			AND `create_time` = #{createTime,jdbcType=TIMESTAMP}
			</if>
		</where>
	</delete>
	
	<update id="modifyByPK" parameterType="com.bittrade.pojo.model.TCurrency">
		UPDATE t_currency
		<set>
			`name` = #{name,jdbcType=VARCHAR}, 
			`short_name` = #{shortName,jdbcType=VARCHAR}, 
			`status` = #{status,jdbcType=INTEGER}, 
			`type` = #{type,jdbcType=INTEGER}, 
			`desc` = #{desc,jdbcType=VARCHAR}, 
			`create_time` = #{createTime,jdbcType=TIMESTAMP}, 
		</set>
		<where>
			AND `id` = #{id,jdbcType=INTEGER}
		</where>
	</update>
	
	<update id="modifyWithSelectiveByPK" parameterType="com.bittrade.pojo.model.TCurrency">
		UPDATE t_currency
		<set>
			<if test="name != null">
			`name` = #{name,jdbcType=VARCHAR}, 
			</if>
			<if test="shortName != null">
			`short_name` = #{shortName,jdbcType=VARCHAR}, 
			</if>
			<if test="status != null">
			`status` = #{status,jdbcType=INTEGER}, 
			</if>
			<if test="type != null">
			`type` = #{type,jdbcType=INTEGER}, 
			</if>
			<if test="desc != null">
			`desc` = #{desc,jdbcType=VARCHAR}, 
			</if>
			<if test="createTime != null">
			`create_time` = #{createTime,jdbcType=TIMESTAMP}, 
			</if>
		</set>
		<where>
			AND `id` = #{id,jdbcType=INTEGER}
		</where>
	</update>
	
	<update id="modifyBy">
		UPDATE t_currency
		<set>
			`name` = #{tCurrency.name,jdbcType=VARCHAR}, 
			`short_name` = #{tCurrency.shortName,jdbcType=VARCHAR}, 
			`status` = #{tCurrency.status,jdbcType=INTEGER}, 
			`type` = #{tCurrency.type,jdbcType=INTEGER}, 
			`desc` = #{tCurrency.desc,jdbcType=VARCHAR}, 
			`create_time` = #{tCurrency.createTime,jdbcType=TIMESTAMP}, 
		</set>
		<where>
		<if test="condiTCurrency != null">
			<if test="condiTCurrency.id != null">
			AND `id` = #{condiTCurrency.id,jdbcType=INTEGER}
			</if>
			<if test="condiTCurrency.name != null">
			AND `name` = #{condiTCurrency.name,jdbcType=VARCHAR}
			</if>
			<if test="condiTCurrency.shortName != null">
			AND `short_name` = #{condiTCurrency.shortName,jdbcType=VARCHAR}
			</if>
			<if test="condiTCurrency.status != null">
			AND `status` = #{condiTCurrency.status,jdbcType=INTEGER}
			</if>
			<if test="condiTCurrency.type != null">
			AND `type` = #{condiTCurrency.type,jdbcType=INTEGER}
			</if>
			<if test="condiTCurrency.desc != null">
			AND `desc` = #{condiTCurrency.desc,jdbcType=VARCHAR}
			</if>
			<if test="condiTCurrency.createTime != null">
			AND `create_time` = #{condiTCurrency.createTime,jdbcType=TIMESTAMP}
			</if>
		</if>
		</where>
	</update>
	
	<update id="modifyWithSelectiveBy">
		UPDATE t_currency
		<set>
		<if test="tCurrency != null">
			<if test="tCurrency.name != null">
			`name` = #{tCurrency.name,jdbcType=VARCHAR}, 
			</if>
			<if test="tCurrency.shortName != null">
			`short_name` = #{tCurrency.shortName,jdbcType=VARCHAR}, 
			</if>
			<if test="tCurrency.status != null">
			`status` = #{tCurrency.status,jdbcType=INTEGER}, 
			</if>
			<if test="tCurrency.type != null">
			`type` = #{tCurrency.type,jdbcType=INTEGER}, 
			</if>
			<if test="tCurrency.desc != null">
			`desc` = #{tCurrency.desc,jdbcType=VARCHAR}, 
			</if>
			<if test="tCurrency.createTime != null">
			`create_time` = #{tCurrency.createTime,jdbcType=TIMESTAMP}, 
			</if>
		</if>
		</set>
		<where>
		<if test="condiTCurrency != null">
			<if test="condiTCurrency.id != null">
			AND `id` = #{condiTCurrency.id,jdbcType=INTEGER}
			</if>
			<if test="condiTCurrency.name != null">
			AND `name` = #{condiTCurrency.name,jdbcType=VARCHAR}
			</if>
			<if test="condiTCurrency.shortName != null">
			AND `short_name` = #{condiTCurrency.shortName,jdbcType=VARCHAR}
			</if>
			<if test="condiTCurrency.status != null">
			AND `status` = #{condiTCurrency.status,jdbcType=INTEGER}
			</if>
			<if test="condiTCurrency.type != null">
			AND `type` = #{condiTCurrency.type,jdbcType=INTEGER}
			</if>
			<if test="condiTCurrency.desc != null">
			AND `desc` = #{condiTCurrency.desc,jdbcType=VARCHAR}
			</if>
			<if test="condiTCurrency.createTime != null">
			AND `create_time` = #{condiTCurrency.createTime,jdbcType=TIMESTAMP}
			</if>
		</if>
		</where>
	</update>
	
	<select id="getByPK" resultType="com.bittrade.pojo.model.TCurrency">
		SELECT 
			`id`, 
			`name`, 
			`short_name`, 
			`status`, 
			`type`, 
			`desc`, 
			`create_time`
		FROM t_currency
		<where>
			AND `id` = #{id,jdbcType=INTEGER}
		</where>
	</select>
	
	<select id="getBy" resultType="com.bittrade.pojo.model.TCurrency">
		SELECT 
			`id`, 
			`name`, 
			`short_name`, 
			`status`, 
			`type`, 
			`desc`, 
			`create_time`
		FROM t_currency
		<where>
			<if test="name != null">
			AND `name` = #{name,jdbcType=VARCHAR}
			</if>
			<if test="shortName != null">
			AND `short_name` = #{shortName,jdbcType=VARCHAR}
			</if>
			<if test="status != null">
			AND `status` = #{status,jdbcType=INTEGER}
			</if>
			<if test="type != null">
			AND `type` = #{type,jdbcType=INTEGER}
			</if>
			<if test="desc != null">
			AND `desc` = #{desc,jdbcType=VARCHAR}
			</if>
			<if test="createTime != null">
			AND `create_time` = #{createTime,jdbcType=TIMESTAMP}
			</if>
		</where>
		LIMIT 1
	</select>
	
	<select id="get" resultType="com.bittrade.pojo.model.TCurrency">
		SELECT 
			`id`, 
			`name`, 
			`short_name`, 
			`status`, 
			`type`, 
			`desc`, 
			`create_time`
		FROM t_currency
		LIMIT 1
	</select>
	
	<select id="getsBy" resultType="com.bittrade.pojo.model.TCurrency">
		SELECT 
			<include refid="Base_Column_List"></include>
		FROM t_currency
		<where>
			<if test="name != null">
			AND `name` = #{name,jdbcType=VARCHAR}
			</if>
			<if test="shortName != null">
			AND `short_name` = #{shortName,jdbcType=VARCHAR}
			</if>
			<if test="status != null">
			AND `status` = #{status,jdbcType=INTEGER}
			</if>
			<if test="type != null">
			AND `type` = #{type,jdbcType=INTEGER}
			</if>
			<if test="desc != null">
			AND `desc` = #{desc,jdbcType=VARCHAR}
			</if>
			<if test="createTime != null">
			AND `create_time` = #{createTime,jdbcType=TIMESTAMP}
			</if>
			<include refid="sql_WHERE_forProperty"></include>
		</where>
	</select>
	
	<select id="gets" resultType="com.bittrade.pojo.model.TCurrency">
		SELECT 
			<include refid="Base_Column_List"></include>
		FROM t_currency
	</select>
	
	<select id="getCntBy" resultType="int">
		SELECT COUNT(1)
		FROM t_currency
		<where>
		<if test="tCurrency != null">
			<if test="tCurrency.name != null">
			AND `name` = #{tCurrency.name,jdbcType=VARCHAR}
			</if>
			<if test="tCurrency.shortName != null">
			AND `short_name` = #{tCurrency.shortName,jdbcType=VARCHAR}
			</if>
			<if test="tCurrency.status != null">
			AND `status` = #{tCurrency.status,jdbcType=INTEGER}
			</if>
			<if test="tCurrency.type != null">
			AND `type` = #{tCurrency.type,jdbcType=INTEGER}
			</if>
			<if test="tCurrency.desc != null">
			AND `desc` = #{tCurrency.desc,jdbcType=VARCHAR}
			</if>
			<if test="tCurrency.createTime != null">
			AND `create_time` = #{tCurrency.createTime,jdbcType=TIMESTAMP}
			</if>
			<include refid="sql_WHERE_forObject"></include>
		</if>
		</where>
	</select>
	
	<select id="getsByPage" resultType="com.bittrade.pojo.model.TCurrency">
		SELECT 
			`id`, 
			`name`, 
			`short_name`, 
			`status`, 
			`type`, 
			`desc`, 
			`create_time`
		FROM t_currency
		<where>
		<if test="tCurrency != null">
			<if test="tCurrency.name != null">
			AND `name` = #{tCurrency.name,jdbcType=VARCHAR}
			</if>
			<if test="tCurrency.shortName != null">
			AND `short_name` = #{tCurrency.shortName,jdbcType=VARCHAR}
			</if>
			<if test="tCurrency.status != null">
			AND `status` = #{tCurrency.status,jdbcType=INTEGER}
			</if>
			<if test="tCurrency.type != null">
			AND `type` = #{tCurrency.type,jdbcType=INTEGER}
			</if>
			<if test="tCurrency.desc != null">
			AND `desc` = #{tCurrency.desc,jdbcType=VARCHAR}
			</if>
			<if test="tCurrency.createTime != null">
			AND `create_time` = #{tCurrency.createTime,jdbcType=TIMESTAMP}
			</if>
			<include refid="sql_WHERE_forObject"></include>
		</if>
		</where>
		LIMIT #{page}, #{size}
	</select>
	
	<select id="getDTOBy" resultType="com.bittrade.pojo.dto.TCurrencyDTO">
		SELECT 
			`id`, 
			`name`, 
			`short_name`, 
			`status`, 
			`type`, 
			`desc`, 
			`create_time`
		FROM t_currency
		<where>
			<if test="name != null">
			AND `name` = #{name,jdbcType=VARCHAR}
			</if>
			<if test="shortName != null">
			AND `short_name` = #{shortName,jdbcType=VARCHAR}
			</if>
			<if test="status != null">
			AND `status` = #{status,jdbcType=INTEGER}
			</if>
			<if test="type != null">
			AND `type` = #{type,jdbcType=INTEGER}
			</if>
			<if test="desc != null">
			AND `desc` = #{desc,jdbcType=VARCHAR}
			</if>
			<if test="createTime != null">
			AND `create_time` = #{createTime,jdbcType=TIMESTAMP}
			</if>
		</where>
		LIMIT 1
	</select>
	
	<select id="getsDTOBy" resultType="com.bittrade.pojo.dto.TCurrencyDTO">
		SELECT 
			<include refid="Base_Column_List"></include>
		FROM t_currency
		<where>
			<if test="name != null">
			AND `name` = #{name,jdbcType=VARCHAR}
			</if>
			<if test="shortName != null">
			AND `short_name` = #{shortName,jdbcType=VARCHAR}
			</if>
			<if test="status != null">
			AND `status` = #{status,jdbcType=INTEGER}
			</if>
			<if test="type != null">
			AND `type` = #{type,jdbcType=INTEGER}
			</if>
			<if test="desc != null">
			AND `desc` = #{desc,jdbcType=VARCHAR}
			</if>
			<if test="createTime != null">
			AND `create_time` = #{createTime,jdbcType=TIMESTAMP}
			</if>
			<include refid="sql_WHERE_forProperty"></include>
		</where>
	</select>

</mapper>