<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
	This code is generated automatically. Please do not edit it.
	现在字段也可以要彻底动态？
-->
<mapper namespace="com.bittrade.__default.DAO.IDefaultWWalletAccountDAO">

	<!-- 通用查询映射结果 -->
	<resultMap id="BaseResultMap" type="com.bittrade.pojo.model.WWalletAccount">
		<id javaType="Long" property="id" jdbcType="BIGINT" column="id" />
		<result javaType="Long" property="userId" jdbcType="BIGINT" column="user_id" />
		<result javaType="Integer" property="currencyId" jdbcType="INTEGER" column="currency_id" />
		<result javaType="java.math.BigDecimal" property="total" jdbcType="DECIMAL" column="total" />
		<result javaType="java.math.BigDecimal" property="tradeFrozen" jdbcType="DECIMAL" column="trade_frozen" />
		<result javaType="java.math.BigDecimal" property="transferFrozen" jdbcType="DECIMAL" column="transfer_frozen" />
		<result javaType="Integer" property="version" jdbcType="INTEGER" column="version" />
		<result javaType="java.time.LocalDateTime" property="createTime" jdbcType="TIMESTAMP" column="create_time" />
		<result javaType="java.time.LocalDateTime" property="updateTime" jdbcType="TIMESTAMP" column="update_time" />
	</resultMap>

	<!--
		通用查询结果列
		其他类似的类似，也可以公用（共用）引用。
	-->
	<sql id="Base_Column_List">
		<choose>
			<when test="strArr_field != null">
		<foreach collection="strArr_field" index="index" item="item" open="" separator="," close="">
			`${item}`
		</foreach>
			</when>
			<otherwise>
		`id` AS `id`, 
		`user_id` AS `userId`, 
		`currency_id` AS `currencyId`, 
		`total` AS `total`, 
		`trade_frozen` AS `tradeFrozen`, 
		`transfer_frozen` AS `transferFrozen`, 
		`version` AS `version`, 
		`create_time` AS `createTime`, 
		`update_time` AS `updateTime`
			</otherwise>
		</choose>
	</sql>
	
	<!-- 其他的也可以类似的加， yes， 类似蕾丝的。 -->
	<sql id="sql_WHERE_forProperty">
		<choose>
			<when test="map_in != null">
			
		<foreach collection="map_in.entrySet()" index="map_index" item="map_item">
		AND `${map_index}` IN 
		<foreach collection="map_item" index="arr_index" item="arr_item" open="(" separator="," close=")">
			#{arr_item}
		</foreach>
		</foreach>
			
			</when>
			<!--
			<when test="_parameter != null and _parameter.WWalletAccount != null and WWalletAccount.map_in != null">
			</when>
			<otherwise>
			</otherwise>
			-->
		</choose>
	</sql>
	<sql id="sql_WHERE_forObject">
		<choose>
			<when test="wWalletAccount.map_in != null">
			
		<foreach collection="wWalletAccount.map_in.entrySet()" index="map_index" item="map_item">
		AND `${map_index}` IN 
		<foreach collection="map_item" index="arr_index" item="arr_item" open="(" separator="," close=")">
			#{arr_item}
		</foreach>
		</foreach>
			
			</when>
		</choose>
	</sql>
	
	
	<insert id="add" parameterType="com.bittrade.pojo.model.WWalletAccount">
		INSERT INTO w_wallet_account(`id`, `user_id`, `currency_id`, `total`, `trade_frozen`, `transfer_frozen`, `version`, `create_time`, `update_time`)
		VALUES(#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{currencyId,jdbcType=INTEGER}, #{total,jdbcType=DECIMAL}, #{tradeFrozen,jdbcType=DECIMAL}, #{transferFrozen,jdbcType=DECIMAL}, #{version,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
	</insert>
	
	<insert id="addWithSelective" parameterType="com.bittrade.pojo.model.WWalletAccount">
		INSERT INTO w_wallet_account(
			<if test="id != null">
			`id`, 
			</if>
			<if test="userId != null">
			`user_id`, 
			</if>
			<if test="currencyId != null">
			`currency_id`, 
			</if>
			<if test="total != null">
			`total`, 
			</if>
			<if test="tradeFrozen != null">
			`trade_frozen`, 
			</if>
			<if test="transferFrozen != null">
			`transfer_frozen`, 
			</if>
			<if test="version != null">
			`version`, 
			</if>
			<if test="createTime != null">
			`create_time`, 
			</if>
			<if test="updateTime != null">
			`update_time`
			</if>
		)
		VALUES(
			<if test="id != null">
			#{id,jdbcType=BIGINT}, 
			</if>
			<if test="userId != null">
			#{userId,jdbcType=BIGINT}, 
			</if>
			<if test="currencyId != null">
			#{currencyId,jdbcType=INTEGER}, 
			</if>
			<if test="total != null">
			#{total,jdbcType=DECIMAL}, 
			</if>
			<if test="tradeFrozen != null">
			#{tradeFrozen,jdbcType=DECIMAL}, 
			</if>
			<if test="transferFrozen != null">
			#{transferFrozen,jdbcType=DECIMAL}, 
			</if>
			<if test="version != null">
			#{version,jdbcType=INTEGER}, 
			</if>
			<if test="createTime != null">
			#{createTime,jdbcType=TIMESTAMP}, 
			</if>
			<if test="updateTime != null">
			#{updateTime,jdbcType=TIMESTAMP}
			</if>
		)
	</insert>
	
	<delete id="removeByPK">
		DELETE FROM w_wallet_account
		<where>
			AND `id` = #{id,jdbcType=BIGINT}
		</where>
	</delete>
	
	<delete id="removeBy" parameterType="com.bittrade.pojo.model.WWalletAccount">
		DELETE FROM w_wallet_account
		<where>
			<if test="userId != null">
			AND `user_id` = #{userId,jdbcType=BIGINT}
			</if>
			<if test="currencyId != null">
			AND `currency_id` = #{currencyId,jdbcType=INTEGER}
			</if>
			<if test="total != null">
			AND `total` = #{total,jdbcType=DECIMAL}
			</if>
			<if test="tradeFrozen != null">
			AND `trade_frozen` = #{tradeFrozen,jdbcType=DECIMAL}
			</if>
			<if test="transferFrozen != null">
			AND `transfer_frozen` = #{transferFrozen,jdbcType=DECIMAL}
			</if>
			<if test="version != null">
			AND `version` = #{version,jdbcType=INTEGER}
			</if>
			<if test="createTime != null">
			AND `create_time` = #{createTime,jdbcType=TIMESTAMP}
			</if>
			<if test="updateTime != null">
			AND `update_time` = #{updateTime,jdbcType=TIMESTAMP}
			</if>
		</where>
	</delete>
	
	<update id="modifyByPK" parameterType="com.bittrade.pojo.model.WWalletAccount">
		UPDATE w_wallet_account
		<set>
			`user_id` = #{userId,jdbcType=BIGINT}, 
			`currency_id` = #{currencyId,jdbcType=INTEGER}, 
			`total` = #{total,jdbcType=DECIMAL}, 
			`trade_frozen` = #{tradeFrozen,jdbcType=DECIMAL}, 
			`transfer_frozen` = #{transferFrozen,jdbcType=DECIMAL}, 
			`version` = #{version,jdbcType=INTEGER}, 
			`create_time` = #{createTime,jdbcType=TIMESTAMP}, 
			`update_time` = #{updateTime,jdbcType=TIMESTAMP}, 
		</set>
		<where>
			AND `id` = #{id,jdbcType=BIGINT}
		</where>
	</update>
	
	<update id="modifyWithSelectiveByPK" parameterType="com.bittrade.pojo.model.WWalletAccount">
		UPDATE w_wallet_account
		<set>
			<if test="userId != null">
			`user_id` = #{userId,jdbcType=BIGINT}, 
			</if>
			<if test="currencyId != null">
			`currency_id` = #{currencyId,jdbcType=INTEGER}, 
			</if>
			<if test="total != null">
			`total` = #{total,jdbcType=DECIMAL}, 
			</if>
			<if test="tradeFrozen != null">
			`trade_frozen` = #{tradeFrozen,jdbcType=DECIMAL}, 
			</if>
			<if test="transferFrozen != null">
			`transfer_frozen` = #{transferFrozen,jdbcType=DECIMAL}, 
			</if>
			<if test="version != null">
			`version` = #{version,jdbcType=INTEGER}, 
			</if>
			<if test="createTime != null">
			`create_time` = #{createTime,jdbcType=TIMESTAMP}, 
			</if>
			<if test="updateTime != null">
			`update_time` = #{updateTime,jdbcType=TIMESTAMP}, 
			</if>
		</set>
		<where>
			AND `id` = #{id,jdbcType=BIGINT}
		</where>
	</update>
	
	<update id="modifyBy">
		UPDATE w_wallet_account
		<set>
			`user_id` = #{wWalletAccount.userId,jdbcType=BIGINT}, 
			`currency_id` = #{wWalletAccount.currencyId,jdbcType=INTEGER}, 
			`total` = #{wWalletAccount.total,jdbcType=DECIMAL}, 
			`trade_frozen` = #{wWalletAccount.tradeFrozen,jdbcType=DECIMAL}, 
			`transfer_frozen` = #{wWalletAccount.transferFrozen,jdbcType=DECIMAL}, 
			`version` = #{wWalletAccount.version,jdbcType=INTEGER}, 
			`create_time` = #{wWalletAccount.createTime,jdbcType=TIMESTAMP}, 
			`update_time` = #{wWalletAccount.updateTime,jdbcType=TIMESTAMP}, 
		</set>
		<where>
		<if test="condiWWalletAccount != null">
			<if test="condiWWalletAccount.id != null">
			AND `id` = #{condiWWalletAccount.id,jdbcType=BIGINT}
			</if>
			<if test="condiWWalletAccount.userId != null">
			AND `user_id` = #{condiWWalletAccount.userId,jdbcType=BIGINT}
			</if>
			<if test="condiWWalletAccount.currencyId != null">
			AND `currency_id` = #{condiWWalletAccount.currencyId,jdbcType=INTEGER}
			</if>
			<if test="condiWWalletAccount.total != null">
			AND `total` = #{condiWWalletAccount.total,jdbcType=DECIMAL}
			</if>
			<if test="condiWWalletAccount.tradeFrozen != null">
			AND `trade_frozen` = #{condiWWalletAccount.tradeFrozen,jdbcType=DECIMAL}
			</if>
			<if test="condiWWalletAccount.transferFrozen != null">
			AND `transfer_frozen` = #{condiWWalletAccount.transferFrozen,jdbcType=DECIMAL}
			</if>
			<if test="condiWWalletAccount.version != null">
			AND `version` = #{condiWWalletAccount.version,jdbcType=INTEGER}
			</if>
			<if test="condiWWalletAccount.createTime != null">
			AND `create_time` = #{condiWWalletAccount.createTime,jdbcType=TIMESTAMP}
			</if>
			<if test="condiWWalletAccount.updateTime != null">
			AND `update_time` = #{condiWWalletAccount.updateTime,jdbcType=TIMESTAMP}
			</if>
		</if>
		</where>
	</update>
	
	<update id="modifyWithSelectiveBy">
		UPDATE w_wallet_account
		<set>
		<if test="wWalletAccount != null">
			<if test="wWalletAccount.userId != null">
			`user_id` = #{wWalletAccount.userId,jdbcType=BIGINT}, 
			</if>
			<if test="wWalletAccount.currencyId != null">
			`currency_id` = #{wWalletAccount.currencyId,jdbcType=INTEGER}, 
			</if>
			<if test="wWalletAccount.total != null">
			`total` = #{wWalletAccount.total,jdbcType=DECIMAL}, 
			</if>
			<if test="wWalletAccount.tradeFrozen != null">
			`trade_frozen` = #{wWalletAccount.tradeFrozen,jdbcType=DECIMAL}, 
			</if>
			<if test="wWalletAccount.transferFrozen != null">
			`transfer_frozen` = #{wWalletAccount.transferFrozen,jdbcType=DECIMAL}, 
			</if>
			<if test="wWalletAccount.version != null">
			`version` = #{wWalletAccount.version,jdbcType=INTEGER}, 
			</if>
			<if test="wWalletAccount.createTime != null">
			`create_time` = #{wWalletAccount.createTime,jdbcType=TIMESTAMP}, 
			</if>
			<if test="wWalletAccount.updateTime != null">
			`update_time` = #{wWalletAccount.updateTime,jdbcType=TIMESTAMP}, 
			</if>
		</if>
		</set>
		<where>
		<if test="condiWWalletAccount != null">
			<if test="condiWWalletAccount.id != null">
			AND `id` = #{condiWWalletAccount.id,jdbcType=BIGINT}
			</if>
			<if test="condiWWalletAccount.userId != null">
			AND `user_id` = #{condiWWalletAccount.userId,jdbcType=BIGINT}
			</if>
			<if test="condiWWalletAccount.currencyId != null">
			AND `currency_id` = #{condiWWalletAccount.currencyId,jdbcType=INTEGER}
			</if>
			<if test="condiWWalletAccount.total != null">
			AND `total` = #{condiWWalletAccount.total,jdbcType=DECIMAL}
			</if>
			<if test="condiWWalletAccount.tradeFrozen != null">
			AND `trade_frozen` = #{condiWWalletAccount.tradeFrozen,jdbcType=DECIMAL}
			</if>
			<if test="condiWWalletAccount.transferFrozen != null">
			AND `transfer_frozen` = #{condiWWalletAccount.transferFrozen,jdbcType=DECIMAL}
			</if>
			<if test="condiWWalletAccount.version != null">
			AND `version` = #{condiWWalletAccount.version,jdbcType=INTEGER}
			</if>
			<if test="condiWWalletAccount.createTime != null">
			AND `create_time` = #{condiWWalletAccount.createTime,jdbcType=TIMESTAMP}
			</if>
			<if test="condiWWalletAccount.updateTime != null">
			AND `update_time` = #{condiWWalletAccount.updateTime,jdbcType=TIMESTAMP}
			</if>
		</if>
		</where>
	</update>
	
	<select id="getByPK" resultType="com.bittrade.pojo.model.WWalletAccount">
		SELECT 
			`id`, 
			`user_id`, 
			`currency_id`, 
			`total`, 
			`trade_frozen`, 
			`transfer_frozen`, 
			`version`, 
			`create_time`, 
			`update_time`
		FROM w_wallet_account
		<where>
			AND `id` = #{id,jdbcType=BIGINT}
		</where>
	</select>
	
	<select id="getBy" resultType="com.bittrade.pojo.model.WWalletAccount">
		SELECT 
			`id`, 
			`user_id`, 
			`currency_id`, 
			`total`, 
			`trade_frozen`, 
			`transfer_frozen`, 
			`version`, 
			`create_time`, 
			`update_time`
		FROM w_wallet_account
		<where>
			<if test="userId != null">
			AND `user_id` = #{userId,jdbcType=BIGINT}
			</if>
			<if test="currencyId != null">
			AND `currency_id` = #{currencyId,jdbcType=INTEGER}
			</if>
			<if test="total != null">
			AND `total` = #{total,jdbcType=DECIMAL}
			</if>
			<if test="tradeFrozen != null">
			AND `trade_frozen` = #{tradeFrozen,jdbcType=DECIMAL}
			</if>
			<if test="transferFrozen != null">
			AND `transfer_frozen` = #{transferFrozen,jdbcType=DECIMAL}
			</if>
			<if test="version != null">
			AND `version` = #{version,jdbcType=INTEGER}
			</if>
			<if test="createTime != null">
			AND `create_time` = #{createTime,jdbcType=TIMESTAMP}
			</if>
			<if test="updateTime != null">
			AND `update_time` = #{updateTime,jdbcType=TIMESTAMP}
			</if>
		</where>
		LIMIT 1
	</select>
	
	<select id="get" resultType="com.bittrade.pojo.model.WWalletAccount">
		SELECT 
			`id`, 
			`user_id`, 
			`currency_id`, 
			`total`, 
			`trade_frozen`, 
			`transfer_frozen`, 
			`version`, 
			`create_time`, 
			`update_time`
		FROM w_wallet_account
		LIMIT 1
	</select>
	
	<select id="getsBy" resultType="com.bittrade.pojo.model.WWalletAccount">
		SELECT 
			<include refid="Base_Column_List"></include>
		FROM w_wallet_account
		<where>
			<if test="userId != null">
			AND `user_id` = #{userId,jdbcType=BIGINT}
			</if>
			<if test="currencyId != null">
			AND `currency_id` = #{currencyId,jdbcType=INTEGER}
			</if>
			<if test="total != null">
			AND `total` = #{total,jdbcType=DECIMAL}
			</if>
			<if test="tradeFrozen != null">
			AND `trade_frozen` = #{tradeFrozen,jdbcType=DECIMAL}
			</if>
			<if test="transferFrozen != null">
			AND `transfer_frozen` = #{transferFrozen,jdbcType=DECIMAL}
			</if>
			<if test="version != null">
			AND `version` = #{version,jdbcType=INTEGER}
			</if>
			<if test="createTime != null">
			AND `create_time` = #{createTime,jdbcType=TIMESTAMP}
			</if>
			<if test="updateTime != null">
			AND `update_time` = #{updateTime,jdbcType=TIMESTAMP}
			</if>
			<include refid="sql_WHERE_forProperty"></include>
		</where>
	</select>
	
	<select id="gets" resultType="com.bittrade.pojo.model.WWalletAccount">
		SELECT 
			<include refid="Base_Column_List"></include>
		FROM w_wallet_account
	</select>
	
	<select id="getCntBy" resultType="int">
		SELECT COUNT(1)
		FROM w_wallet_account
		<where>
		<if test="wWalletAccount != null">
			<if test="wWalletAccount.userId != null">
			AND `user_id` = #{wWalletAccount.userId,jdbcType=BIGINT}
			</if>
			<if test="wWalletAccount.currencyId != null">
			AND `currency_id` = #{wWalletAccount.currencyId,jdbcType=INTEGER}
			</if>
			<if test="wWalletAccount.total != null">
			AND `total` = #{wWalletAccount.total,jdbcType=DECIMAL}
			</if>
			<if test="wWalletAccount.tradeFrozen != null">
			AND `trade_frozen` = #{wWalletAccount.tradeFrozen,jdbcType=DECIMAL}
			</if>
			<if test="wWalletAccount.transferFrozen != null">
			AND `transfer_frozen` = #{wWalletAccount.transferFrozen,jdbcType=DECIMAL}
			</if>
			<if test="wWalletAccount.version != null">
			AND `version` = #{wWalletAccount.version,jdbcType=INTEGER}
			</if>
			<if test="wWalletAccount.createTime != null">
			AND `create_time` = #{wWalletAccount.createTime,jdbcType=TIMESTAMP}
			</if>
			<if test="wWalletAccount.updateTime != null">
			AND `update_time` = #{wWalletAccount.updateTime,jdbcType=TIMESTAMP}
			</if>
			<include refid="sql_WHERE_forObject"></include>
		</if>
		</where>
	</select>
	
	<select id="getsByPage" resultType="com.bittrade.pojo.model.WWalletAccount">
		SELECT 
			`id`, 
			`user_id`, 
			`currency_id`, 
			`total`, 
			`trade_frozen`, 
			`transfer_frozen`, 
			`version`, 
			`create_time`, 
			`update_time`
		FROM w_wallet_account
		<where>
		<if test="wWalletAccount != null">
			<if test="wWalletAccount.userId != null">
			AND `user_id` = #{wWalletAccount.userId,jdbcType=BIGINT}
			</if>
			<if test="wWalletAccount.currencyId != null">
			AND `currency_id` = #{wWalletAccount.currencyId,jdbcType=INTEGER}
			</if>
			<if test="wWalletAccount.total != null">
			AND `total` = #{wWalletAccount.total,jdbcType=DECIMAL}
			</if>
			<if test="wWalletAccount.tradeFrozen != null">
			AND `trade_frozen` = #{wWalletAccount.tradeFrozen,jdbcType=DECIMAL}
			</if>
			<if test="wWalletAccount.transferFrozen != null">
			AND `transfer_frozen` = #{wWalletAccount.transferFrozen,jdbcType=DECIMAL}
			</if>
			<if test="wWalletAccount.version != null">
			AND `version` = #{wWalletAccount.version,jdbcType=INTEGER}
			</if>
			<if test="wWalletAccount.createTime != null">
			AND `create_time` = #{wWalletAccount.createTime,jdbcType=TIMESTAMP}
			</if>
			<if test="wWalletAccount.updateTime != null">
			AND `update_time` = #{wWalletAccount.updateTime,jdbcType=TIMESTAMP}
			</if>
			<include refid="sql_WHERE_forObject"></include>
		</if>
		</where>
		LIMIT #{page}, #{size}
	</select>

</mapper>