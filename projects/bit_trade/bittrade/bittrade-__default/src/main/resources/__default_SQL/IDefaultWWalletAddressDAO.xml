<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
	This code is generated automatically. Please do not edit it.
	现在字段也可以要彻底动态？
-->
<mapper namespace="com.bittrade.__default.DAO.IDefaultWWalletAddressDAO">

	<!-- 通用查询映射结果 -->
	<resultMap id="BaseResultMap" type="com.bittrade.pojo.model.WWalletAddress">
		<id javaType="Integer" property="id" jdbcType="INTEGER" column="id" />
		<result javaType="Long" property="userId" jdbcType="BIGINT" column="user_id" />
		<result javaType="String" property="name" jdbcType="VARCHAR" column="name" />
		<result javaType="String" property="tokenType" jdbcType="VARCHAR" column="token_type" />
		<result javaType="Integer" property="currencyId" jdbcType="INTEGER" column="currency_id" />
		<result javaType="String" property="address" jdbcType="VARCHAR" column="address" />
		<result javaType="Byte" property="status" jdbcType="INTEGER" column="status" />
		<result javaType="java.time.LocalDateTime" property="createTime" jdbcType="TIMESTAMP" column="create_time" />
		<result javaType="java.time.LocalDateTime" property="updateTime" jdbcType="TIMESTAMP" column="update_time" />
	</resultMap>

	<!--
		通用查询结果列
		其他类似的类似，也可以公用（共用）引用。
	-->
	<sql id="Base_Column_List">
		`id` AS `id`, 
		`user_id` AS `userId`, 
		`name` AS `name`, 
		`token_type` AS `tokenType`, 
		`currency_id` AS `currencyId`, 
		`address` AS `address`, 
		`status` AS `status`, 
		`create_time` AS `createTime`, 
		`update_time` AS `updateTime`
	</sql>
	
	<!-- 其他的也可以类似的加， yes， 类似蕾丝的。 -->
	<sql id="sql_Column_forObject">
		<choose>
			<when test="wWalletAddress != null and wWalletAddress.strArr_field != null">
		<foreach collection="wWalletAddress.strArr_field" index="index" item="item" open="" separator="," close="">
			`${item}`
		</foreach>
			</when>
			<otherwise>
		<include refid="Base_Column_List"></include>
			</otherwise>
		</choose>
	</sql>
	
	<!-- 其他的也可以类似的加， yes， 类似蕾丝的。 -->
	<sql id="sql_WHERE_forProperty">
		<choose>
			<when test="map_in != null">
			
		<foreach collection="map_in.entrySet()" index="map_index" item="map_item">
		AND `${map_index}` IN 
		<foreach collection="map_item" index="arr_index" item="arr_item" open="(" separator="," close=")">
			#{arr_item}
		</foreach>
		</foreach>
			
			</when>
			<!--
			<when test="_parameter != null and _parameter.WWalletAddress != null and WWalletAddress.map_in != null">
			</when>
			<otherwise>
			</otherwise>
			-->
		</choose>
	</sql>
	<sql id="sql_WHERE_forObject">
		<if test="wWalletAddress != null and wWalletAddress.map_in != null">
		<foreach collection="wWalletAddress.map_in.entrySet()" index="map_index" item="map_item">
		AND `${map_index}` IN 
		<foreach collection="map_item" index="arr_index" item="arr_item" open="(" separator="," close=")">
			#{arr_item}
		</foreach>
		</foreach>
		</if>
		<if test="wWalletAddress != null and wWalletAddress.map_eq != null">
		<foreach collection="wWalletAddress.map_eq.entrySet()" index="map_index" item="map_item">
		AND `${map_index}` = #{map_item}
		</foreach>
		</if>
		<if test="wWalletAddress != null and wWalletAddress.map_le != null">
		<foreach collection="wWalletAddress.map_le.entrySet()" index="map_index" item="map_item">
		AND `${map_index}` &lt;= #{map_item}
		</foreach>
		</if>
		<if test="wWalletAddress != null and wWalletAddress.map_ge != null">
		<foreach collection="wWalletAddress.map_ge.entrySet()" index="map_index" item="map_item">
		AND `${map_index}` &gt;= #{map_item}
		</foreach>
		</if>
	</sql>
	
	
	<insert id="add" parameterType="com.bittrade.pojo.model.WWalletAddress" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO w_wallet_address(`user_id`, `name`, `token_type`, `currency_id`, `address`, `status`, `create_time`, `update_time`)
		VALUES(#{userId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{tokenType,jdbcType=VARCHAR}, #{currencyId,jdbcType=INTEGER}, #{address,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
	</insert>
	
	<insert id="addWithSelective" parameterType="com.bittrade.pojo.model.WWalletAddress" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO w_wallet_address(
			<if test="userId != null">
			`user_id`, 
			</if>
			<if test="name != null">
			`name`, 
			</if>
			<if test="tokenType != null">
			`token_type`, 
			</if>
			<if test="currencyId != null">
			`currency_id`, 
			</if>
			<if test="address != null">
			`address`, 
			</if>
			<if test="status != null">
			`status`, 
			</if>
			<if test="createTime != null">
			`create_time`, 
			</if>
			<if test="updateTime != null">
			`update_time`
			</if>
		)
		VALUES(
			<if test="userId != null">
			#{userId,jdbcType=BIGINT}, 
			</if>
			<if test="name != null">
			#{name,jdbcType=VARCHAR}, 
			</if>
			<if test="tokenType != null">
			#{tokenType,jdbcType=VARCHAR}, 
			</if>
			<if test="currencyId != null">
			#{currencyId,jdbcType=INTEGER}, 
			</if>
			<if test="address != null">
			#{address,jdbcType=VARCHAR}, 
			</if>
			<if test="status != null">
			#{status,jdbcType=INTEGER}, 
			</if>
			<if test="createTime != null">
			#{createTime,jdbcType=TIMESTAMP}, 
			</if>
			<if test="updateTime != null">
			#{updateTime,jdbcType=TIMESTAMP}
			</if>
		)
	</insert>
	
	<delete id="removeByPK">
		DELETE FROM w_wallet_address
		<where>
			AND `id` = #{id,jdbcType=INTEGER}
		</where>
	</delete>
	
	<delete id="removeBy" parameterType="com.bittrade.pojo.model.WWalletAddress">
		DELETE FROM w_wallet_address
		<where>
			<if test="userId != null">
			AND `user_id` = #{userId,jdbcType=BIGINT}
			</if>
			<if test="name != null">
			AND `name` = #{name,jdbcType=VARCHAR}
			</if>
			<if test="tokenType != null">
			AND `token_type` = #{tokenType,jdbcType=VARCHAR}
			</if>
			<if test="currencyId != null">
			AND `currency_id` = #{currencyId,jdbcType=INTEGER}
			</if>
			<if test="address != null">
			AND `address` = #{address,jdbcType=VARCHAR}
			</if>
			<if test="status != null">
			AND `status` = #{status,jdbcType=INTEGER}
			</if>
			<if test="createTime != null">
			AND `create_time` = #{createTime,jdbcType=TIMESTAMP}
			</if>
			<if test="updateTime != null">
			AND `update_time` = #{updateTime,jdbcType=TIMESTAMP}
			</if>
		</where>
	</delete>
	
	<update id="modifyByPK" parameterType="com.bittrade.pojo.model.WWalletAddress">
		UPDATE w_wallet_address
		<set>
			`user_id` = #{userId,jdbcType=BIGINT}, 
			`name` = #{name,jdbcType=VARCHAR}, 
			`token_type` = #{tokenType,jdbcType=VARCHAR}, 
			`currency_id` = #{currencyId,jdbcType=INTEGER}, 
			`address` = #{address,jdbcType=VARCHAR}, 
			`status` = #{status,jdbcType=INTEGER}, 
			`create_time` = #{createTime,jdbcType=TIMESTAMP}, 
			`update_time` = #{updateTime,jdbcType=TIMESTAMP}, 
		</set>
		<where>
			AND `id` = #{id,jdbcType=INTEGER}
		</where>
	</update>
	
	<update id="modifyWithSelectiveByPK" parameterType="com.bittrade.pojo.model.WWalletAddress">
		UPDATE w_wallet_address
		<set>
			<if test="userId != null">
			`user_id` = #{userId,jdbcType=BIGINT}, 
			</if>
			<if test="name != null">
			`name` = #{name,jdbcType=VARCHAR}, 
			</if>
			<if test="tokenType != null">
			`token_type` = #{tokenType,jdbcType=VARCHAR}, 
			</if>
			<if test="currencyId != null">
			`currency_id` = #{currencyId,jdbcType=INTEGER}, 
			</if>
			<if test="address != null">
			`address` = #{address,jdbcType=VARCHAR}, 
			</if>
			<if test="status != null">
			`status` = #{status,jdbcType=INTEGER}, 
			</if>
			<if test="createTime != null">
			`create_time` = #{createTime,jdbcType=TIMESTAMP}, 
			</if>
			<if test="updateTime != null">
			`update_time` = #{updateTime,jdbcType=TIMESTAMP}, 
			</if>
		</set>
		<where>
			AND `id` = #{id,jdbcType=INTEGER}
		</where>
	</update>
	
	<update id="modifyBy">
		UPDATE w_wallet_address
		<set>
			`user_id` = #{wWalletAddress.userId,jdbcType=BIGINT}, 
			`name` = #{wWalletAddress.name,jdbcType=VARCHAR}, 
			`token_type` = #{wWalletAddress.tokenType,jdbcType=VARCHAR}, 
			`currency_id` = #{wWalletAddress.currencyId,jdbcType=INTEGER}, 
			`address` = #{wWalletAddress.address,jdbcType=VARCHAR}, 
			`status` = #{wWalletAddress.status,jdbcType=INTEGER}, 
			`create_time` = #{wWalletAddress.createTime,jdbcType=TIMESTAMP}, 
			`update_time` = #{wWalletAddress.updateTime,jdbcType=TIMESTAMP}, 
		</set>
		<where>
		<if test="condiWWalletAddress != null">
			<if test="condiWWalletAddress.id != null">
			AND `id` = #{condiWWalletAddress.id,jdbcType=INTEGER}
			</if>
			<if test="condiWWalletAddress.userId != null">
			AND `user_id` = #{condiWWalletAddress.userId,jdbcType=BIGINT}
			</if>
			<if test="condiWWalletAddress.name != null">
			AND `name` = #{condiWWalletAddress.name,jdbcType=VARCHAR}
			</if>
			<if test="condiWWalletAddress.tokenType != null">
			AND `token_type` = #{condiWWalletAddress.tokenType,jdbcType=VARCHAR}
			</if>
			<if test="condiWWalletAddress.currencyId != null">
			AND `currency_id` = #{condiWWalletAddress.currencyId,jdbcType=INTEGER}
			</if>
			<if test="condiWWalletAddress.address != null">
			AND `address` = #{condiWWalletAddress.address,jdbcType=VARCHAR}
			</if>
			<if test="condiWWalletAddress.status != null">
			AND `status` = #{condiWWalletAddress.status,jdbcType=INTEGER}
			</if>
			<if test="condiWWalletAddress.createTime != null">
			AND `create_time` = #{condiWWalletAddress.createTime,jdbcType=TIMESTAMP}
			</if>
			<if test="condiWWalletAddress.updateTime != null">
			AND `update_time` = #{condiWWalletAddress.updateTime,jdbcType=TIMESTAMP}
			</if>
		</if>
		</where>
	</update>
	
	<update id="modifyWithSelectiveBy">
		UPDATE w_wallet_address
		<set>
		<if test="wWalletAddress != null">
			<if test="wWalletAddress.userId != null">
			`user_id` = #{wWalletAddress.userId,jdbcType=BIGINT}, 
			</if>
			<if test="wWalletAddress.name != null">
			`name` = #{wWalletAddress.name,jdbcType=VARCHAR}, 
			</if>
			<if test="wWalletAddress.tokenType != null">
			`token_type` = #{wWalletAddress.tokenType,jdbcType=VARCHAR}, 
			</if>
			<if test="wWalletAddress.currencyId != null">
			`currency_id` = #{wWalletAddress.currencyId,jdbcType=INTEGER}, 
			</if>
			<if test="wWalletAddress.address != null">
			`address` = #{wWalletAddress.address,jdbcType=VARCHAR}, 
			</if>
			<if test="wWalletAddress.status != null">
			`status` = #{wWalletAddress.status,jdbcType=INTEGER}, 
			</if>
			<if test="wWalletAddress.createTime != null">
			`create_time` = #{wWalletAddress.createTime,jdbcType=TIMESTAMP}, 
			</if>
			<if test="wWalletAddress.updateTime != null">
			`update_time` = #{wWalletAddress.updateTime,jdbcType=TIMESTAMP}, 
			</if>
		</if>
		</set>
		<where>
		<if test="condiWWalletAddress != null">
			<if test="condiWWalletAddress.id != null">
			AND `id` = #{condiWWalletAddress.id,jdbcType=INTEGER}
			</if>
			<if test="condiWWalletAddress.userId != null">
			AND `user_id` = #{condiWWalletAddress.userId,jdbcType=BIGINT}
			</if>
			<if test="condiWWalletAddress.name != null">
			AND `name` = #{condiWWalletAddress.name,jdbcType=VARCHAR}
			</if>
			<if test="condiWWalletAddress.tokenType != null">
			AND `token_type` = #{condiWWalletAddress.tokenType,jdbcType=VARCHAR}
			</if>
			<if test="condiWWalletAddress.currencyId != null">
			AND `currency_id` = #{condiWWalletAddress.currencyId,jdbcType=INTEGER}
			</if>
			<if test="condiWWalletAddress.address != null">
			AND `address` = #{condiWWalletAddress.address,jdbcType=VARCHAR}
			</if>
			<if test="condiWWalletAddress.status != null">
			AND `status` = #{condiWWalletAddress.status,jdbcType=INTEGER}
			</if>
			<if test="condiWWalletAddress.createTime != null">
			AND `create_time` = #{condiWWalletAddress.createTime,jdbcType=TIMESTAMP}
			</if>
			<if test="condiWWalletAddress.updateTime != null">
			AND `update_time` = #{condiWWalletAddress.updateTime,jdbcType=TIMESTAMP}
			</if>
		</if>
		</where>
	</update>
	
	<select id="getByPK" resultType="com.bittrade.pojo.model.WWalletAddress">
		SELECT 
			`id`, 
			`user_id`, 
			`name`, 
			`token_type`, 
			`currency_id`, 
			`address`, 
			`status`, 
			`create_time`, 
			`update_time`
		FROM w_wallet_address
		<where>
			AND `id` = #{id,jdbcType=INTEGER}
		</where>
	</select>
	
	<select id="getBy" resultType="com.bittrade.pojo.model.WWalletAddress">
		SELECT 
			`id`, 
			`user_id`, 
			`name`, 
			`token_type`, 
			`currency_id`, 
			`address`, 
			`status`, 
			`create_time`, 
			`update_time`
		FROM w_wallet_address
		<where>
			<if test="userId != null">
			AND `user_id` = #{userId,jdbcType=BIGINT}
			</if>
			<if test="name != null">
			AND `name` = #{name,jdbcType=VARCHAR}
			</if>
			<if test="tokenType != null">
			AND `token_type` = #{tokenType,jdbcType=VARCHAR}
			</if>
			<if test="currencyId != null">
			AND `currency_id` = #{currencyId,jdbcType=INTEGER}
			</if>
			<if test="address != null">
			AND `address` = #{address,jdbcType=VARCHAR}
			</if>
			<if test="status != null">
			AND `status` = #{status,jdbcType=INTEGER}
			</if>
			<if test="createTime != null">
			AND `create_time` = #{createTime,jdbcType=TIMESTAMP}
			</if>
			<if test="updateTime != null">
			AND `update_time` = #{updateTime,jdbcType=TIMESTAMP}
			</if>
		</where>
		LIMIT 1
	</select>
	
	<select id="get" resultType="com.bittrade.pojo.model.WWalletAddress">
		SELECT 
			`id`, 
			`user_id`, 
			`name`, 
			`token_type`, 
			`currency_id`, 
			`address`, 
			`status`, 
			`create_time`, 
			`update_time`
		FROM w_wallet_address
		LIMIT 1
	</select>
	
	<select id="getsBy" resultType="com.bittrade.pojo.model.WWalletAddress">
		SELECT 
			<include refid="Base_Column_List"></include>
		FROM w_wallet_address
		<where>
			<if test="userId != null">
			AND `user_id` = #{userId,jdbcType=BIGINT}
			</if>
			<if test="name != null">
			AND `name` = #{name,jdbcType=VARCHAR}
			</if>
			<if test="tokenType != null">
			AND `token_type` = #{tokenType,jdbcType=VARCHAR}
			</if>
			<if test="currencyId != null">
			AND `currency_id` = #{currencyId,jdbcType=INTEGER}
			</if>
			<if test="address != null">
			AND `address` = #{address,jdbcType=VARCHAR}
			</if>
			<if test="status != null">
			AND `status` = #{status,jdbcType=INTEGER}
			</if>
			<if test="createTime != null">
			AND `create_time` = #{createTime,jdbcType=TIMESTAMP}
			</if>
			<if test="updateTime != null">
			AND `update_time` = #{updateTime,jdbcType=TIMESTAMP}
			</if>
			<include refid="sql_WHERE_forProperty"></include>
		</where>
	</select>
	
	<select id="gets" resultType="com.bittrade.pojo.model.WWalletAddress">
		SELECT 
			<include refid="Base_Column_List"></include>
		FROM w_wallet_address
	</select>
	
	<select id="getCntBy" resultType="int">
		SELECT COUNT(1)
		FROM w_wallet_address
		<where>
		<if test="wWalletAddress != null">
			<if test="wWalletAddress.userId != null">
			AND `user_id` = #{wWalletAddress.userId,jdbcType=BIGINT}
			</if>
			<if test="wWalletAddress.name != null">
			AND `name` = #{wWalletAddress.name,jdbcType=VARCHAR}
			</if>
			<if test="wWalletAddress.tokenType != null">
			AND `token_type` = #{wWalletAddress.tokenType,jdbcType=VARCHAR}
			</if>
			<if test="wWalletAddress.currencyId != null">
			AND `currency_id` = #{wWalletAddress.currencyId,jdbcType=INTEGER}
			</if>
			<if test="wWalletAddress.address != null">
			AND `address` = #{wWalletAddress.address,jdbcType=VARCHAR}
			</if>
			<if test="wWalletAddress.status != null">
			AND `status` = #{wWalletAddress.status,jdbcType=INTEGER}
			</if>
			<if test="wWalletAddress.createTime != null">
			AND `create_time` = #{wWalletAddress.createTime,jdbcType=TIMESTAMP}
			</if>
			<if test="wWalletAddress.updateTime != null">
			AND `update_time` = #{wWalletAddress.updateTime,jdbcType=TIMESTAMP}
			</if>
			<include refid="sql_WHERE_forObject"></include>
		</if>
		</where>
	</select>
	
	<select id="getsByPage" resultType="com.bittrade.pojo.model.WWalletAddress">
		SELECT 
			`id`, 
			`user_id`, 
			`name`, 
			`token_type`, 
			`currency_id`, 
			`address`, 
			`status`, 
			`create_time`, 
			`update_time`
		FROM w_wallet_address
		<where>
		<if test="wWalletAddress != null">
			<if test="wWalletAddress.userId != null">
			AND `user_id` = #{wWalletAddress.userId,jdbcType=BIGINT}
			</if>
			<if test="wWalletAddress.name != null">
			AND `name` = #{wWalletAddress.name,jdbcType=VARCHAR}
			</if>
			<if test="wWalletAddress.tokenType != null">
			AND `token_type` = #{wWalletAddress.tokenType,jdbcType=VARCHAR}
			</if>
			<if test="wWalletAddress.currencyId != null">
			AND `currency_id` = #{wWalletAddress.currencyId,jdbcType=INTEGER}
			</if>
			<if test="wWalletAddress.address != null">
			AND `address` = #{wWalletAddress.address,jdbcType=VARCHAR}
			</if>
			<if test="wWalletAddress.status != null">
			AND `status` = #{wWalletAddress.status,jdbcType=INTEGER}
			</if>
			<if test="wWalletAddress.createTime != null">
			AND `create_time` = #{wWalletAddress.createTime,jdbcType=TIMESTAMP}
			</if>
			<if test="wWalletAddress.updateTime != null">
			AND `update_time` = #{wWalletAddress.updateTime,jdbcType=TIMESTAMP}
			</if>
			<include refid="sql_WHERE_forObject"></include>
		</if>
		</where>
		LIMIT #{page}, #{size}
	</select>
	
	<select id="getDTOBy" resultType="com.bittrade.pojo.dto.WWalletAddressDTO">
		SELECT 
			`id`, 
			`user_id`, 
			`name`, 
			`token_type`, 
			`currency_id`, 
			`address`, 
			`status`, 
			`create_time`, 
			`update_time`
		FROM w_wallet_address
		<where>
			<if test="userId != null">
			AND `user_id` = #{userId,jdbcType=BIGINT}
			</if>
			<if test="name != null">
			AND `name` = #{name,jdbcType=VARCHAR}
			</if>
			<if test="tokenType != null">
			AND `token_type` = #{tokenType,jdbcType=VARCHAR}
			</if>
			<if test="currencyId != null">
			AND `currency_id` = #{currencyId,jdbcType=INTEGER}
			</if>
			<if test="address != null">
			AND `address` = #{address,jdbcType=VARCHAR}
			</if>
			<if test="status != null">
			AND `status` = #{status,jdbcType=INTEGER}
			</if>
			<if test="createTime != null">
			AND `create_time` = #{createTime,jdbcType=TIMESTAMP}
			</if>
			<if test="updateTime != null">
			AND `update_time` = #{updateTime,jdbcType=TIMESTAMP}
			</if>
		</where>
		LIMIT 1
	</select>
	
	<select id="getsDTOBy" resultType="com.bittrade.pojo.dto.WWalletAddressDTO">
		SELECT 
			<include refid="sql_Column_forObject"></include>
		FROM w_wallet_address
		<where>
			<include refid="sql_WHERE_forObject"></include>
		</where>
	</select>

</mapper>