<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
	This code is generated automatically. Please do not edit it.
	现在字段也可以要彻底动态？
-->
<mapper namespace="com.bittrade.__default.DAO.IDefaultWCoinConfigDAO">

	<!-- 通用查询映射结果 -->
	<resultMap id="BaseResultMap" type="com.bittrade.pojo.model.WCoinConfig">
		<id javaType="Long" property="id" jdbcType="BIGINT" column="id" />
		<result javaType="String" property="coinType" jdbcType="VARCHAR" column="coin_type" />
		<result javaType="String" property="token" jdbcType="VARCHAR" column="token" />
		<result javaType="String" property="contract" jdbcType="VARCHAR" column="contract" />
		<result javaType="Long" property="scanBlock" jdbcType="BIGINT" column="scan_block" />
		<result javaType="Integer" property="baseMultiple" jdbcType="INTEGER" column="base_multiple" />
		<result javaType="Integer" property="minConfirm" jdbcType="INTEGER" column="min_confirm" />
		<result javaType="String" property="bossAddress" jdbcType="VARCHAR" column="boss_address" />
		<result javaType="java.math.BigDecimal" property="minCollectionAmount" jdbcType="DECIMAL" column="min_collection_amount" />
		<result javaType="String" property="valid" jdbcType="CHAR" column="valid" />
		<result javaType="String" property="remark" jdbcType="VARCHAR" column="remark" />
		<result javaType="java.time.LocalDateTime" property="createTime" jdbcType="TIMESTAMP" column="create_time" />
		<result javaType="java.time.LocalDateTime" property="updateTime" jdbcType="TIMESTAMP" column="update_time" />
	</resultMap>

	<!-- 通用查询结果列 -->
	<sql id="Base_Column_List">
		`id` AS id, 
		`coin_type` AS coinType, 
		`token` AS token, 
		`contract` AS contract, 
		`scan_block` AS scanBlock, 
		`base_multiple` AS baseMultiple, 
		`min_confirm` AS minConfirm, 
		`boss_address` AS bossAddress, 
		`min_collection_amount` AS minCollectionAmount, 
		`valid` AS valid, 
		`remark` AS remark, 
		`create_time` AS createTime, 
		`update_time` AS updateTime
	</sql>
	
	<!-- 其他的也可以类似的加， yes， 类似蕾丝的。 -->
	<sql id="sql_WHERE">
		<if test="wCoinConfig.map_in != null">
		<foreach collection="wCoinConfig.map_in.entrySet()" index="map_index" item="map_item">
		AND `${map_index}` IN 
		<foreach collection="map_item" index="arr_index" item="arr_item" open="(" separator="," close=")">
			#{arr_item}
		</foreach>
		</foreach>
		</if>
	</sql>
	
	
	<insert id="add" parameterType="com.bittrade.pojo.model.WCoinConfig" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO w_coin_config(`coin_type`, `token`, `contract`, `scan_block`, `base_multiple`, `min_confirm`, `boss_address`, `min_collection_amount`, `valid`, `remark`, `create_time`, `update_time`)
		VALUES(#{coinType,jdbcType=VARCHAR}, #{token,jdbcType=VARCHAR}, #{contract,jdbcType=VARCHAR}, #{scanBlock,jdbcType=BIGINT}, #{baseMultiple,jdbcType=INTEGER}, #{minConfirm,jdbcType=INTEGER}, #{bossAddress,jdbcType=VARCHAR}, #{minCollectionAmount,jdbcType=DECIMAL}, #{valid,jdbcType=CHAR}, #{remark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
	</insert>
	
	<insert id="addWithSelective" parameterType="com.bittrade.pojo.model.WCoinConfig" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO w_coin_config(
			<if test="coinType != null">
			`coin_type`, 
			</if>
			<if test="token != null">
			`token`, 
			</if>
			<if test="contract != null">
			`contract`, 
			</if>
			<if test="scanBlock != null">
			`scan_block`, 
			</if>
			<if test="baseMultiple != null">
			`base_multiple`, 
			</if>
			<if test="minConfirm != null">
			`min_confirm`, 
			</if>
			<if test="bossAddress != null">
			`boss_address`, 
			</if>
			<if test="minCollectionAmount != null">
			`min_collection_amount`, 
			</if>
			<if test="valid != null">
			`valid`, 
			</if>
			<if test="remark != null">
			`remark`, 
			</if>
			<if test="createTime != null">
			`create_time`, 
			</if>
			<if test="updateTime != null">
			`update_time`
			</if>
		)
		VALUES(
			<if test="coinType != null">
			#{coinType,jdbcType=VARCHAR}, 
			</if>
			<if test="token != null">
			#{token,jdbcType=VARCHAR}, 
			</if>
			<if test="contract != null">
			#{contract,jdbcType=VARCHAR}, 
			</if>
			<if test="scanBlock != null">
			#{scanBlock,jdbcType=BIGINT}, 
			</if>
			<if test="baseMultiple != null">
			#{baseMultiple,jdbcType=INTEGER}, 
			</if>
			<if test="minConfirm != null">
			#{minConfirm,jdbcType=INTEGER}, 
			</if>
			<if test="bossAddress != null">
			#{bossAddress,jdbcType=VARCHAR}, 
			</if>
			<if test="minCollectionAmount != null">
			#{minCollectionAmount,jdbcType=DECIMAL}, 
			</if>
			<if test="valid != null">
			#{valid,jdbcType=CHAR}, 
			</if>
			<if test="remark != null">
			#{remark,jdbcType=VARCHAR}, 
			</if>
			<if test="createTime != null">
			#{createTime,jdbcType=TIMESTAMP}, 
			</if>
			<if test="updateTime != null">
			#{updateTime,jdbcType=TIMESTAMP}
			</if>
		)
	</insert>
	
	<delete id="removeByPK">
		DELETE FROM w_coin_config
		<where>
			AND `id` = #{id,jdbcType=BIGINT}
		</where>
	</delete>
	
	<delete id="removeBy" parameterType="com.bittrade.pojo.model.WCoinConfig">
		DELETE FROM w_coin_config
		<where>
			<if test="coinType != null">
			AND `coin_type` = #{coinType,jdbcType=VARCHAR}
			</if>
			<if test="token != null">
			AND `token` = #{token,jdbcType=VARCHAR}
			</if>
			<if test="contract != null">
			AND `contract` = #{contract,jdbcType=VARCHAR}
			</if>
			<if test="scanBlock != null">
			AND `scan_block` = #{scanBlock,jdbcType=BIGINT}
			</if>
			<if test="baseMultiple != null">
			AND `base_multiple` = #{baseMultiple,jdbcType=INTEGER}
			</if>
			<if test="minConfirm != null">
			AND `min_confirm` = #{minConfirm,jdbcType=INTEGER}
			</if>
			<if test="bossAddress != null">
			AND `boss_address` = #{bossAddress,jdbcType=VARCHAR}
			</if>
			<if test="minCollectionAmount != null">
			AND `min_collection_amount` = #{minCollectionAmount,jdbcType=DECIMAL}
			</if>
			<if test="valid != null">
			AND `valid` = #{valid,jdbcType=CHAR}
			</if>
			<if test="remark != null">
			AND `remark` = #{remark,jdbcType=VARCHAR}
			</if>
			<if test="createTime != null">
			AND `create_time` = #{createTime,jdbcType=TIMESTAMP}
			</if>
			<if test="updateTime != null">
			AND `update_time` = #{updateTime,jdbcType=TIMESTAMP}
			</if>
		</where>
	</delete>
	
	<update id="modifyByPK" parameterType="com.bittrade.pojo.model.WCoinConfig">
		UPDATE w_coin_config
		<set>
			`coin_type` = #{coinType,jdbcType=VARCHAR}, 
			`token` = #{token,jdbcType=VARCHAR}, 
			`contract` = #{contract,jdbcType=VARCHAR}, 
			`scan_block` = #{scanBlock,jdbcType=BIGINT}, 
			`base_multiple` = #{baseMultiple,jdbcType=INTEGER}, 
			`min_confirm` = #{minConfirm,jdbcType=INTEGER}, 
			`boss_address` = #{bossAddress,jdbcType=VARCHAR}, 
			`min_collection_amount` = #{minCollectionAmount,jdbcType=DECIMAL}, 
			`valid` = #{valid,jdbcType=CHAR}, 
			`remark` = #{remark,jdbcType=VARCHAR}, 
			`create_time` = #{createTime,jdbcType=TIMESTAMP}, 
			`update_time` = #{updateTime,jdbcType=TIMESTAMP}, 
		</set>
		<where>
			AND `id` = #{id,jdbcType=BIGINT}
		</where>
	</update>
	
	<update id="modifyWithSelectiveByPK" parameterType="com.bittrade.pojo.model.WCoinConfig">
		UPDATE w_coin_config
		<set>
			<if test="coinType != null">
			`coin_type` = #{coinType,jdbcType=VARCHAR}, 
			</if>
			<if test="token != null">
			`token` = #{token,jdbcType=VARCHAR}, 
			</if>
			<if test="contract != null">
			`contract` = #{contract,jdbcType=VARCHAR}, 
			</if>
			<if test="scanBlock != null">
			`scan_block` = #{scanBlock,jdbcType=BIGINT}, 
			</if>
			<if test="baseMultiple != null">
			`base_multiple` = #{baseMultiple,jdbcType=INTEGER}, 
			</if>
			<if test="minConfirm != null">
			`min_confirm` = #{minConfirm,jdbcType=INTEGER}, 
			</if>
			<if test="bossAddress != null">
			`boss_address` = #{bossAddress,jdbcType=VARCHAR}, 
			</if>
			<if test="minCollectionAmount != null">
			`min_collection_amount` = #{minCollectionAmount,jdbcType=DECIMAL}, 
			</if>
			<if test="valid != null">
			`valid` = #{valid,jdbcType=CHAR}, 
			</if>
			<if test="remark != null">
			`remark` = #{remark,jdbcType=VARCHAR}, 
			</if>
			<if test="createTime != null">
			`create_time` = #{createTime,jdbcType=TIMESTAMP}, 
			</if>
			<if test="updateTime != null">
			`update_time` = #{updateTime,jdbcType=TIMESTAMP}, 
			</if>
		</set>
		<where>
			AND `id` = #{id,jdbcType=BIGINT}
		</where>
	</update>
	
	<update id="modifyBy">
		UPDATE w_coin_config
		<set>
			`coin_type` = #{wCoinConfig.coinType,jdbcType=VARCHAR}, 
			`token` = #{wCoinConfig.token,jdbcType=VARCHAR}, 
			`contract` = #{wCoinConfig.contract,jdbcType=VARCHAR}, 
			`scan_block` = #{wCoinConfig.scanBlock,jdbcType=BIGINT}, 
			`base_multiple` = #{wCoinConfig.baseMultiple,jdbcType=INTEGER}, 
			`min_confirm` = #{wCoinConfig.minConfirm,jdbcType=INTEGER}, 
			`boss_address` = #{wCoinConfig.bossAddress,jdbcType=VARCHAR}, 
			`min_collection_amount` = #{wCoinConfig.minCollectionAmount,jdbcType=DECIMAL}, 
			`valid` = #{wCoinConfig.valid,jdbcType=CHAR}, 
			`remark` = #{wCoinConfig.remark,jdbcType=VARCHAR}, 
			`create_time` = #{wCoinConfig.createTime,jdbcType=TIMESTAMP}, 
			`update_time` = #{wCoinConfig.updateTime,jdbcType=TIMESTAMP}, 
		</set>
		<where>
		<if test="condiWCoinConfig != null">
			<if test="condiWCoinConfig.id != null">
			AND `id` = #{condiWCoinConfig.id,jdbcType=BIGINT}
			</if>
			<if test="condiWCoinConfig.coinType != null">
			AND `coin_type` = #{condiWCoinConfig.coinType,jdbcType=VARCHAR}
			</if>
			<if test="condiWCoinConfig.token != null">
			AND `token` = #{condiWCoinConfig.token,jdbcType=VARCHAR}
			</if>
			<if test="condiWCoinConfig.contract != null">
			AND `contract` = #{condiWCoinConfig.contract,jdbcType=VARCHAR}
			</if>
			<if test="condiWCoinConfig.scanBlock != null">
			AND `scan_block` = #{condiWCoinConfig.scanBlock,jdbcType=BIGINT}
			</if>
			<if test="condiWCoinConfig.baseMultiple != null">
			AND `base_multiple` = #{condiWCoinConfig.baseMultiple,jdbcType=INTEGER}
			</if>
			<if test="condiWCoinConfig.minConfirm != null">
			AND `min_confirm` = #{condiWCoinConfig.minConfirm,jdbcType=INTEGER}
			</if>
			<if test="condiWCoinConfig.bossAddress != null">
			AND `boss_address` = #{condiWCoinConfig.bossAddress,jdbcType=VARCHAR}
			</if>
			<if test="condiWCoinConfig.minCollectionAmount != null">
			AND `min_collection_amount` = #{condiWCoinConfig.minCollectionAmount,jdbcType=DECIMAL}
			</if>
			<if test="condiWCoinConfig.valid != null">
			AND `valid` = #{condiWCoinConfig.valid,jdbcType=CHAR}
			</if>
			<if test="condiWCoinConfig.remark != null">
			AND `remark` = #{condiWCoinConfig.remark,jdbcType=VARCHAR}
			</if>
			<if test="condiWCoinConfig.createTime != null">
			AND `create_time` = #{condiWCoinConfig.createTime,jdbcType=TIMESTAMP}
			</if>
			<if test="condiWCoinConfig.updateTime != null">
			AND `update_time` = #{condiWCoinConfig.updateTime,jdbcType=TIMESTAMP}
			</if>
		</if>
		</where>
	</update>
	
	<update id="modifyWithSelectiveBy">
		UPDATE w_coin_config
		<set>
		<if test="wCoinConfig != null">
			<if test="wCoinConfig.coinType != null">
			`coin_type` = #{wCoinConfig.coinType,jdbcType=VARCHAR}, 
			</if>
			<if test="wCoinConfig.token != null">
			`token` = #{wCoinConfig.token,jdbcType=VARCHAR}, 
			</if>
			<if test="wCoinConfig.contract != null">
			`contract` = #{wCoinConfig.contract,jdbcType=VARCHAR}, 
			</if>
			<if test="wCoinConfig.scanBlock != null">
			`scan_block` = #{wCoinConfig.scanBlock,jdbcType=BIGINT}, 
			</if>
			<if test="wCoinConfig.baseMultiple != null">
			`base_multiple` = #{wCoinConfig.baseMultiple,jdbcType=INTEGER}, 
			</if>
			<if test="wCoinConfig.minConfirm != null">
			`min_confirm` = #{wCoinConfig.minConfirm,jdbcType=INTEGER}, 
			</if>
			<if test="wCoinConfig.bossAddress != null">
			`boss_address` = #{wCoinConfig.bossAddress,jdbcType=VARCHAR}, 
			</if>
			<if test="wCoinConfig.minCollectionAmount != null">
			`min_collection_amount` = #{wCoinConfig.minCollectionAmount,jdbcType=DECIMAL}, 
			</if>
			<if test="wCoinConfig.valid != null">
			`valid` = #{wCoinConfig.valid,jdbcType=CHAR}, 
			</if>
			<if test="wCoinConfig.remark != null">
			`remark` = #{wCoinConfig.remark,jdbcType=VARCHAR}, 
			</if>
			<if test="wCoinConfig.createTime != null">
			`create_time` = #{wCoinConfig.createTime,jdbcType=TIMESTAMP}, 
			</if>
			<if test="wCoinConfig.updateTime != null">
			`update_time` = #{wCoinConfig.updateTime,jdbcType=TIMESTAMP}, 
			</if>
		</if>
		</set>
		<where>
		<if test="condiWCoinConfig != null">
			<if test="condiWCoinConfig.id != null">
			AND `id` = #{condiWCoinConfig.id,jdbcType=BIGINT}
			</if>
			<if test="condiWCoinConfig.coinType != null">
			AND `coin_type` = #{condiWCoinConfig.coinType,jdbcType=VARCHAR}
			</if>
			<if test="condiWCoinConfig.token != null">
			AND `token` = #{condiWCoinConfig.token,jdbcType=VARCHAR}
			</if>
			<if test="condiWCoinConfig.contract != null">
			AND `contract` = #{condiWCoinConfig.contract,jdbcType=VARCHAR}
			</if>
			<if test="condiWCoinConfig.scanBlock != null">
			AND `scan_block` = #{condiWCoinConfig.scanBlock,jdbcType=BIGINT}
			</if>
			<if test="condiWCoinConfig.baseMultiple != null">
			AND `base_multiple` = #{condiWCoinConfig.baseMultiple,jdbcType=INTEGER}
			</if>
			<if test="condiWCoinConfig.minConfirm != null">
			AND `min_confirm` = #{condiWCoinConfig.minConfirm,jdbcType=INTEGER}
			</if>
			<if test="condiWCoinConfig.bossAddress != null">
			AND `boss_address` = #{condiWCoinConfig.bossAddress,jdbcType=VARCHAR}
			</if>
			<if test="condiWCoinConfig.minCollectionAmount != null">
			AND `min_collection_amount` = #{condiWCoinConfig.minCollectionAmount,jdbcType=DECIMAL}
			</if>
			<if test="condiWCoinConfig.valid != null">
			AND `valid` = #{condiWCoinConfig.valid,jdbcType=CHAR}
			</if>
			<if test="condiWCoinConfig.remark != null">
			AND `remark` = #{condiWCoinConfig.remark,jdbcType=VARCHAR}
			</if>
			<if test="condiWCoinConfig.createTime != null">
			AND `create_time` = #{condiWCoinConfig.createTime,jdbcType=TIMESTAMP}
			</if>
			<if test="condiWCoinConfig.updateTime != null">
			AND `update_time` = #{condiWCoinConfig.updateTime,jdbcType=TIMESTAMP}
			</if>
		</if>
		</where>
	</update>
	
	<select id="getByPK" resultType="com.bittrade.pojo.model.WCoinConfig">
		SELECT 
			`id`, 
			`coin_type`, 
			`token`, 
			`contract`, 
			`scan_block`, 
			`base_multiple`, 
			`min_confirm`, 
			`boss_address`, 
			`min_collection_amount`, 
			`valid`, 
			`remark`, 
			`create_time`, 
			`update_time`
		FROM w_coin_config
		<where>
			AND `id` = #{id,jdbcType=BIGINT}
		</where>
	</select>
	
	<select id="getBy" resultType="com.bittrade.pojo.model.WCoinConfig">
		SELECT 
			`id`, 
			`coin_type`, 
			`token`, 
			`contract`, 
			`scan_block`, 
			`base_multiple`, 
			`min_confirm`, 
			`boss_address`, 
			`min_collection_amount`, 
			`valid`, 
			`remark`, 
			`create_time`, 
			`update_time`
		FROM w_coin_config
		<where>
			<if test="coinType != null">
			AND `coin_type` = #{coinType,jdbcType=VARCHAR}
			</if>
			<if test="token != null">
			AND `token` = #{token,jdbcType=VARCHAR}
			</if>
			<if test="contract != null">
			AND `contract` = #{contract,jdbcType=VARCHAR}
			</if>
			<if test="scanBlock != null">
			AND `scan_block` = #{scanBlock,jdbcType=BIGINT}
			</if>
			<if test="baseMultiple != null">
			AND `base_multiple` = #{baseMultiple,jdbcType=INTEGER}
			</if>
			<if test="minConfirm != null">
			AND `min_confirm` = #{minConfirm,jdbcType=INTEGER}
			</if>
			<if test="bossAddress != null">
			AND `boss_address` = #{bossAddress,jdbcType=VARCHAR}
			</if>
			<if test="minCollectionAmount != null">
			AND `min_collection_amount` = #{minCollectionAmount,jdbcType=DECIMAL}
			</if>
			<if test="valid != null">
			AND `valid` = #{valid,jdbcType=CHAR}
			</if>
			<if test="remark != null">
			AND `remark` = #{remark,jdbcType=VARCHAR}
			</if>
			<if test="createTime != null">
			AND `create_time` = #{createTime,jdbcType=TIMESTAMP}
			</if>
			<if test="updateTime != null">
			AND `update_time` = #{updateTime,jdbcType=TIMESTAMP}
			</if>
		</where>
		LIMIT 1
	</select>
	
	<select id="get" resultType="com.bittrade.pojo.model.WCoinConfig">
		SELECT 
			`id`, 
			`coin_type`, 
			`token`, 
			`contract`, 
			`scan_block`, 
			`base_multiple`, 
			`min_confirm`, 
			`boss_address`, 
			`min_collection_amount`, 
			`valid`, 
			`remark`, 
			`create_time`, 
			`update_time`
		FROM w_coin_config
		LIMIT 1
	</select>
	
	<select id="getsBy" resultType="com.bittrade.pojo.model.WCoinConfig">
		SELECT 
			`id`, 
			`coin_type`, 
			`token`, 
			`contract`, 
			`scan_block`, 
			`base_multiple`, 
			`min_confirm`, 
			`boss_address`, 
			`min_collection_amount`, 
			`valid`, 
			`remark`, 
			`create_time`, 
			`update_time`
		FROM w_coin_config
		<where>
			<if test="coinType != null">
			AND `coin_type` = #{coinType,jdbcType=VARCHAR}
			</if>
			<if test="token != null">
			AND `token` = #{token,jdbcType=VARCHAR}
			</if>
			<if test="contract != null">
			AND `contract` = #{contract,jdbcType=VARCHAR}
			</if>
			<if test="scanBlock != null">
			AND `scan_block` = #{scanBlock,jdbcType=BIGINT}
			</if>
			<if test="baseMultiple != null">
			AND `base_multiple` = #{baseMultiple,jdbcType=INTEGER}
			</if>
			<if test="minConfirm != null">
			AND `min_confirm` = #{minConfirm,jdbcType=INTEGER}
			</if>
			<if test="bossAddress != null">
			AND `boss_address` = #{bossAddress,jdbcType=VARCHAR}
			</if>
			<if test="minCollectionAmount != null">
			AND `min_collection_amount` = #{minCollectionAmount,jdbcType=DECIMAL}
			</if>
			<if test="valid != null">
			AND `valid` = #{valid,jdbcType=CHAR}
			</if>
			<if test="remark != null">
			AND `remark` = #{remark,jdbcType=VARCHAR}
			</if>
			<if test="createTime != null">
			AND `create_time` = #{createTime,jdbcType=TIMESTAMP}
			</if>
			<if test="updateTime != null">
			AND `update_time` = #{updateTime,jdbcType=TIMESTAMP}
			</if>
		</where>
	</select>
	
	<select id="gets" resultType="com.bittrade.pojo.model.WCoinConfig">
		SELECT 
			`id`, 
			`coin_type`, 
			`token`, 
			`contract`, 
			`scan_block`, 
			`base_multiple`, 
			`min_confirm`, 
			`boss_address`, 
			`min_collection_amount`, 
			`valid`, 
			`remark`, 
			`create_time`, 
			`update_time`
		FROM w_coin_config
	</select>
	
	<select id="getCntBy" resultType="int">
		SELECT COUNT(1)
		FROM w_coin_config
		<where>
		<if test="wCoinConfig != null">
			<if test="wCoinConfig.coinType != null">
			AND `coin_type` = #{wCoinConfig.coinType,jdbcType=VARCHAR}
			</if>
			<if test="wCoinConfig.token != null">
			AND `token` = #{wCoinConfig.token,jdbcType=VARCHAR}
			</if>
			<if test="wCoinConfig.contract != null">
			AND `contract` = #{wCoinConfig.contract,jdbcType=VARCHAR}
			</if>
			<if test="wCoinConfig.scanBlock != null">
			AND `scan_block` = #{wCoinConfig.scanBlock,jdbcType=BIGINT}
			</if>
			<if test="wCoinConfig.baseMultiple != null">
			AND `base_multiple` = #{wCoinConfig.baseMultiple,jdbcType=INTEGER}
			</if>
			<if test="wCoinConfig.minConfirm != null">
			AND `min_confirm` = #{wCoinConfig.minConfirm,jdbcType=INTEGER}
			</if>
			<if test="wCoinConfig.bossAddress != null">
			AND `boss_address` = #{wCoinConfig.bossAddress,jdbcType=VARCHAR}
			</if>
			<if test="wCoinConfig.minCollectionAmount != null">
			AND `min_collection_amount` = #{wCoinConfig.minCollectionAmount,jdbcType=DECIMAL}
			</if>
			<if test="wCoinConfig.valid != null">
			AND `valid` = #{wCoinConfig.valid,jdbcType=CHAR}
			</if>
			<if test="wCoinConfig.remark != null">
			AND `remark` = #{wCoinConfig.remark,jdbcType=VARCHAR}
			</if>
			<if test="wCoinConfig.createTime != null">
			AND `create_time` = #{wCoinConfig.createTime,jdbcType=TIMESTAMP}
			</if>
			<if test="wCoinConfig.updateTime != null">
			AND `update_time` = #{wCoinConfig.updateTime,jdbcType=TIMESTAMP}
			</if>
			<include refid="sql_WHERE"></include>
		</if>
		</where>
	</select>
	
	<select id="getsByPage" resultType="com.bittrade.pojo.model.WCoinConfig">
		SELECT 
			`id`, 
			`coin_type`, 
			`token`, 
			`contract`, 
			`scan_block`, 
			`base_multiple`, 
			`min_confirm`, 
			`boss_address`, 
			`min_collection_amount`, 
			`valid`, 
			`remark`, 
			`create_time`, 
			`update_time`
		FROM w_coin_config
		<where>
		<if test="wCoinConfig != null">
			<if test="wCoinConfig.coinType != null">
			AND `coin_type` = #{wCoinConfig.coinType,jdbcType=VARCHAR}
			</if>
			<if test="wCoinConfig.token != null">
			AND `token` = #{wCoinConfig.token,jdbcType=VARCHAR}
			</if>
			<if test="wCoinConfig.contract != null">
			AND `contract` = #{wCoinConfig.contract,jdbcType=VARCHAR}
			</if>
			<if test="wCoinConfig.scanBlock != null">
			AND `scan_block` = #{wCoinConfig.scanBlock,jdbcType=BIGINT}
			</if>
			<if test="wCoinConfig.baseMultiple != null">
			AND `base_multiple` = #{wCoinConfig.baseMultiple,jdbcType=INTEGER}
			</if>
			<if test="wCoinConfig.minConfirm != null">
			AND `min_confirm` = #{wCoinConfig.minConfirm,jdbcType=INTEGER}
			</if>
			<if test="wCoinConfig.bossAddress != null">
			AND `boss_address` = #{wCoinConfig.bossAddress,jdbcType=VARCHAR}
			</if>
			<if test="wCoinConfig.minCollectionAmount != null">
			AND `min_collection_amount` = #{wCoinConfig.minCollectionAmount,jdbcType=DECIMAL}
			</if>
			<if test="wCoinConfig.valid != null">
			AND `valid` = #{wCoinConfig.valid,jdbcType=CHAR}
			</if>
			<if test="wCoinConfig.remark != null">
			AND `remark` = #{wCoinConfig.remark,jdbcType=VARCHAR}
			</if>
			<if test="wCoinConfig.createTime != null">
			AND `create_time` = #{wCoinConfig.createTime,jdbcType=TIMESTAMP}
			</if>
			<if test="wCoinConfig.updateTime != null">
			AND `update_time` = #{wCoinConfig.updateTime,jdbcType=TIMESTAMP}
			</if>
			<include refid="sql_WHERE"></include>
		</if>
		</where>
		LIMIT #{page}, #{size}
	</select>

</mapper>