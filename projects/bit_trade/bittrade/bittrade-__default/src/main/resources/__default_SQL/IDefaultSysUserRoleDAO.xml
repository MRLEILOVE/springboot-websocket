<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
	This code is generated automatically. Please do not edit it.
	现在字段也可以要彻底动态？
-->
<mapper namespace="com.bittrade.__default.DAO.IDefaultSysUserRoleDAO">

	<!-- 通用查询映射结果 -->
	<resultMap id="BaseResultMap" type="com.bittrade.pojo.model.SysUserRole">
		<id javaType="Integer" property="userId" jdbcType="INTEGER" column="user_id" />
		<id javaType="Integer" property="roleId" jdbcType="INTEGER" column="role_id" />
	</resultMap>

	<!--
		通用查询结果列
		其他类似的类似，也可以公用（共用）引用。
	-->
	<sql id="Base_Column_List">
		<choose>
			<when test="strArr_field != null">
		<foreach collection="strArr_field" index="index" item="item" open="" separator="," close="">
			`${item}`
		</foreach>
			</when>
			<otherwise>
		`user_id` AS `userId`, 
		`role_id` AS `roleId`, 
			</otherwise>
		</choose>
	</sql>
	
	<!-- 其他的也可以类似的加， yes， 类似蕾丝的。 -->
	<sql id="sql_WHERE_forProperty">
		<choose>
			<when test="map_in != null">
			
		<foreach collection="map_in.entrySet()" index="map_index" item="map_item">
		AND `${map_index}` IN 
		<foreach collection="map_item" index="arr_index" item="arr_item" open="(" separator="," close=")">
			#{arr_item}
		</foreach>
		</foreach>
			
			</when>
			<!--
			<when test="_parameter != null and _parameter.SysUserRole != null and SysUserRole.map_in != null">
			</when>
			<otherwise>
			</otherwise>
			-->
		</choose>
	</sql>
	<sql id="sql_WHERE_forObject">
		<choose>
			<when test="sysUserRole.map_in != null">
			
		<foreach collection="sysUserRole.map_in.entrySet()" index="map_index" item="map_item">
		AND `${map_index}` IN 
		<foreach collection="map_item" index="arr_index" item="arr_item" open="(" separator="," close=")">
			#{arr_item}
		</foreach>
		</foreach>
			
			</when>
		</choose>
	</sql>
	
	
	<insert id="add" parameterType="com.bittrade.pojo.model.SysUserRole">
		INSERT INTO sys_user_role(`user_id`, `role_id`, )
		VALUES(#{userId,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, )
	</insert>
	
	<insert id="addWithSelective" parameterType="com.bittrade.pojo.model.SysUserRole">
		INSERT INTO sys_user_role(
			<if test="userId != null">
			`user_id`, 
			</if>
			<if test="roleId != null">
			`role_id`, 
			</if>
		)
		VALUES(
			<if test="userId != null">
			#{userId,jdbcType=INTEGER}, 
			</if>
			<if test="roleId != null">
			#{roleId,jdbcType=INTEGER}, 
			</if>
		)
	</insert>
	
	<delete id="removeByPK">
		DELETE FROM sys_user_role
		<where>
			AND `user_id` = #{userId,jdbcType=INTEGER}
			AND `role_id` = #{roleId,jdbcType=INTEGER}
		</where>
	</delete>
	
	<delete id="removeBy" parameterType="com.bittrade.pojo.model.SysUserRole">
		DELETE FROM sys_user_role
		<where>
		</where>
	</delete>
	
	<update id="modifyByPK" parameterType="com.bittrade.pojo.model.SysUserRole">
		UPDATE sys_user_role
		<set>
		</set>
		<where>
			AND `user_id` = #{userId,jdbcType=INTEGER}
			AND `role_id` = #{roleId,jdbcType=INTEGER}
		</where>
	</update>
	
	<update id="modifyWithSelectiveByPK" parameterType="com.bittrade.pojo.model.SysUserRole">
		UPDATE sys_user_role
		<set>
		</set>
		<where>
			AND `user_id` = #{userId,jdbcType=INTEGER}
			AND `role_id` = #{roleId,jdbcType=INTEGER}
		</where>
	</update>
	
	<update id="modifyBy">
		UPDATE sys_user_role
		<set>
		</set>
		<where>
		<if test="condiSysUserRole != null">
			<if test="condiSysUserRole.userId != null">
			AND `user_id` = #{condiSysUserRole.userId,jdbcType=INTEGER}
			</if>
			<if test="condiSysUserRole.roleId != null">
			AND `role_id` = #{condiSysUserRole.roleId,jdbcType=INTEGER}
			</if>
		</if>
		</where>
	</update>
	
	<update id="modifyWithSelectiveBy">
		UPDATE sys_user_role
		<set>
		<if test="sysUserRole != null">
		</if>
		</set>
		<where>
		<if test="condiSysUserRole != null">
			<if test="condiSysUserRole.userId != null">
			AND `user_id` = #{condiSysUserRole.userId,jdbcType=INTEGER}
			</if>
			<if test="condiSysUserRole.roleId != null">
			AND `role_id` = #{condiSysUserRole.roleId,jdbcType=INTEGER}
			</if>
		</if>
		</where>
	</update>
	
	<select id="getByPK" resultType="com.bittrade.pojo.model.SysUserRole">
		SELECT 
			`user_id`, 
			`role_id`, 
		FROM sys_user_role
		<where>
			AND `user_id` = #{userId,jdbcType=INTEGER}
			AND `role_id` = #{roleId,jdbcType=INTEGER}
		</where>
	</select>
	
	<select id="getBy" resultType="com.bittrade.pojo.model.SysUserRole">
		SELECT 
			`user_id`, 
			`role_id`, 
		FROM sys_user_role
		<where>
		</where>
		LIMIT 1
	</select>
	
	<select id="get" resultType="com.bittrade.pojo.model.SysUserRole">
		SELECT 
			`user_id`, 
			`role_id`, 
		FROM sys_user_role
		LIMIT 1
	</select>
	
	<select id="getsBy" resultType="com.bittrade.pojo.model.SysUserRole">
		SELECT 
			<include refid="Base_Column_List"></include>
		FROM sys_user_role
		<where>
			<include refid="sql_WHERE_forProperty"></include>
		</where>
	</select>
	
	<select id="gets" resultType="com.bittrade.pojo.model.SysUserRole">
		SELECT 
			<include refid="Base_Column_List"></include>
		FROM sys_user_role
	</select>
	
	<select id="getCntBy" resultType="int">
		SELECT COUNT(1)
		FROM sys_user_role
		<where>
		<if test="sysUserRole != null">
			<include refid="sql_WHERE_forObject"></include>
		</if>
		</where>
	</select>
	
	<select id="getsByPage" resultType="com.bittrade.pojo.model.SysUserRole">
		SELECT 
			`user_id`, 
			`role_id`, 
		FROM sys_user_role
		<where>
		<if test="sysUserRole != null">
			<include refid="sql_WHERE_forObject"></include>
		</if>
		</where>
		LIMIT #{page}, #{size}
	</select>
	
	<select id="getDTOBy" resultType="com.bittrade.pojo.dto.SysUserRoleDTO">
		SELECT 
			`user_id`, 
			`role_id`, 
		FROM sys_user_role
		<where>
		</where>
		LIMIT 1
	</select>
	
	<select id="getsDTOBy" resultType="com.bittrade.pojo.dto.SysUserRoleDTO">
		SELECT 
			<include refid="Base_Column_List"></include>
		FROM sys_user_role
		<where>
			<include refid="sql_WHERE_forProperty"></include>
		</where>
	</select>

</mapper>