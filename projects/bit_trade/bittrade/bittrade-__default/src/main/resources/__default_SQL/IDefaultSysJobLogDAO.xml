<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
	This code is generated automatically. Please do not edit it.
	现在字段也可以要彻底动态？
-->
<mapper namespace="com.bittrade.__default.DAO.IDefaultSysJobLogDAO">

	<!-- 通用查询映射结果 -->
	<resultMap id="BaseResultMap" type="com.bittrade.pojo.model.SysJobLog">
		<id javaType="Long" property="jobLogId" jdbcType="BIGINT" column="job_log_id" />
		<result javaType="String" property="jobName" jdbcType="VARCHAR" column="job_name" />
		<result javaType="String" property="jobGroup" jdbcType="VARCHAR" column="job_group" />
		<result javaType="String" property="methodName" jdbcType="VARCHAR" column="method_name" />
		<result javaType="String" property="methodParams" jdbcType="VARCHAR" column="method_params" />
		<result javaType="String" property="jobMessage" jdbcType="VARCHAR" column="job_message" />
		<result javaType="String" property="status" jdbcType="CHAR" column="status" />
		<result javaType="String" property="exceptionInfo" jdbcType="VARCHAR" column="exception_info" />
		<result javaType="java.time.LocalDateTime" property="createTime" jdbcType="TIMESTAMP" column="create_time" />
	</resultMap>

	<!--
		通用查询结果列
		其他类似的类似，也可以公用（共用）引用。
	-->
	<sql id="Base_Column_List">
		`job_log_id` AS `jobLogId`, 
		`job_name` AS `jobName`, 
		`job_group` AS `jobGroup`, 
		`method_name` AS `methodName`, 
		`method_params` AS `methodParams`, 
		`job_message` AS `jobMessage`, 
		`status` AS `status`, 
		`exception_info` AS `exceptionInfo`, 
		`create_time` AS `createTime`
	</sql>
	
	<!-- 其他的也可以类似的加， yes， 类似蕾丝的。 -->
	<sql id="sql_Column_forObject">
		<choose>
			<when test="sysJobLog.strArr_field != null">
		<foreach collection="sysJobLog.strArr_field" index="index" item="item" open="" separator="," close="">
			`${item}`
		</foreach>
			</when>
			<otherwise>
		<include refid="Base_Column_List"></include>
			</otherwise>
		</choose>
	</sql>
	
	<!-- 其他的也可以类似的加， yes， 类似蕾丝的。 -->
	<sql id="sql_WHERE_forProperty">
		<choose>
			<when test="map_in != null">
			
		<foreach collection="map_in.entrySet()" index="map_index" item="map_item">
		AND `${map_index}` IN 
		<foreach collection="map_item" index="arr_index" item="arr_item" open="(" separator="," close=")">
			#{arr_item}
		</foreach>
		</foreach>
			
			</when>
			<!--
			<when test="_parameter != null and _parameter.SysJobLog != null and SysJobLog.map_in != null">
			</when>
			<otherwise>
			</otherwise>
			-->
		</choose>
	</sql>
	<sql id="sql_WHERE_forObject">
		<if test="sysJobLog.map_in != null">
		<foreach collection="sysJobLog.map_in.entrySet()" index="map_index" item="map_item">
		AND `${map_index}` IN 
		<foreach collection="map_item" index="arr_index" item="arr_item" open="(" separator="," close=")">
			#{arr_item}
		</foreach>
		</foreach>
		</if>
		<if test="sysJobLog.map_eq != null">
		<foreach collection="sysJobLog.map_eq.entrySet()" index="map_index" item="map_item">
		AND `${map_index}` = #{map_item}
		</foreach>
		</if>
		<if test="sysJobLog.map_le != null">
		<foreach collection="sysJobLog.map_le.entrySet()" index="map_index" item="map_item">
		AND `${map_index}` &lt;= #{map_item}
		</foreach>
		</if>
		<if test="sysJobLog.map_ge != null">
		<foreach collection="sysJobLog.map_ge.entrySet()" index="map_index" item="map_item">
		AND `${map_index}` &gt;= #{map_item}
		</foreach>
		</if>
	</sql>
	
	
	<insert id="add" parameterType="com.bittrade.pojo.model.SysJobLog" useGeneratedKeys="true" keyProperty="jobLogId">
		INSERT INTO sys_job_log(`job_name`, `job_group`, `method_name`, `method_params`, `job_message`, `status`, `exception_info`, `create_time`)
		VALUES(#{jobName,jdbcType=VARCHAR}, #{jobGroup,jdbcType=VARCHAR}, #{methodName,jdbcType=VARCHAR}, #{methodParams,jdbcType=VARCHAR}, #{jobMessage,jdbcType=VARCHAR}, #{status,jdbcType=CHAR}, #{exceptionInfo,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP})
	</insert>
	
	<insert id="addWithSelective" parameterType="com.bittrade.pojo.model.SysJobLog" useGeneratedKeys="true" keyProperty="jobLogId">
		INSERT INTO sys_job_log(
			<if test="jobName != null">
			`job_name`, 
			</if>
			<if test="jobGroup != null">
			`job_group`, 
			</if>
			<if test="methodName != null">
			`method_name`, 
			</if>
			<if test="methodParams != null">
			`method_params`, 
			</if>
			<if test="jobMessage != null">
			`job_message`, 
			</if>
			<if test="status != null">
			`status`, 
			</if>
			<if test="exceptionInfo != null">
			`exception_info`, 
			</if>
			<if test="createTime != null">
			`create_time`
			</if>
		)
		VALUES(
			<if test="jobName != null">
			#{jobName,jdbcType=VARCHAR}, 
			</if>
			<if test="jobGroup != null">
			#{jobGroup,jdbcType=VARCHAR}, 
			</if>
			<if test="methodName != null">
			#{methodName,jdbcType=VARCHAR}, 
			</if>
			<if test="methodParams != null">
			#{methodParams,jdbcType=VARCHAR}, 
			</if>
			<if test="jobMessage != null">
			#{jobMessage,jdbcType=VARCHAR}, 
			</if>
			<if test="status != null">
			#{status,jdbcType=CHAR}, 
			</if>
			<if test="exceptionInfo != null">
			#{exceptionInfo,jdbcType=VARCHAR}, 
			</if>
			<if test="createTime != null">
			#{createTime,jdbcType=TIMESTAMP}
			</if>
		)
	</insert>
	
	<delete id="removeByPK">
		DELETE FROM sys_job_log
		<where>
			AND `job_log_id` = #{jobLogId,jdbcType=BIGINT}
		</where>
	</delete>
	
	<delete id="removeBy" parameterType="com.bittrade.pojo.model.SysJobLog">
		DELETE FROM sys_job_log
		<where>
			<if test="jobName != null">
			AND `job_name` = #{jobName,jdbcType=VARCHAR}
			</if>
			<if test="jobGroup != null">
			AND `job_group` = #{jobGroup,jdbcType=VARCHAR}
			</if>
			<if test="methodName != null">
			AND `method_name` = #{methodName,jdbcType=VARCHAR}
			</if>
			<if test="methodParams != null">
			AND `method_params` = #{methodParams,jdbcType=VARCHAR}
			</if>
			<if test="jobMessage != null">
			AND `job_message` = #{jobMessage,jdbcType=VARCHAR}
			</if>
			<if test="status != null">
			AND `status` = #{status,jdbcType=CHAR}
			</if>
			<if test="exceptionInfo != null">
			AND `exception_info` = #{exceptionInfo,jdbcType=VARCHAR}
			</if>
			<if test="createTime != null">
			AND `create_time` = #{createTime,jdbcType=TIMESTAMP}
			</if>
		</where>
	</delete>
	
	<update id="modifyByPK" parameterType="com.bittrade.pojo.model.SysJobLog">
		UPDATE sys_job_log
		<set>
			`job_name` = #{jobName,jdbcType=VARCHAR}, 
			`job_group` = #{jobGroup,jdbcType=VARCHAR}, 
			`method_name` = #{methodName,jdbcType=VARCHAR}, 
			`method_params` = #{methodParams,jdbcType=VARCHAR}, 
			`job_message` = #{jobMessage,jdbcType=VARCHAR}, 
			`status` = #{status,jdbcType=CHAR}, 
			`exception_info` = #{exceptionInfo,jdbcType=VARCHAR}, 
			`create_time` = #{createTime,jdbcType=TIMESTAMP}, 
		</set>
		<where>
			AND `job_log_id` = #{jobLogId,jdbcType=BIGINT}
		</where>
	</update>
	
	<update id="modifyWithSelectiveByPK" parameterType="com.bittrade.pojo.model.SysJobLog">
		UPDATE sys_job_log
		<set>
			<if test="jobName != null">
			`job_name` = #{jobName,jdbcType=VARCHAR}, 
			</if>
			<if test="jobGroup != null">
			`job_group` = #{jobGroup,jdbcType=VARCHAR}, 
			</if>
			<if test="methodName != null">
			`method_name` = #{methodName,jdbcType=VARCHAR}, 
			</if>
			<if test="methodParams != null">
			`method_params` = #{methodParams,jdbcType=VARCHAR}, 
			</if>
			<if test="jobMessage != null">
			`job_message` = #{jobMessage,jdbcType=VARCHAR}, 
			</if>
			<if test="status != null">
			`status` = #{status,jdbcType=CHAR}, 
			</if>
			<if test="exceptionInfo != null">
			`exception_info` = #{exceptionInfo,jdbcType=VARCHAR}, 
			</if>
			<if test="createTime != null">
			`create_time` = #{createTime,jdbcType=TIMESTAMP}, 
			</if>
		</set>
		<where>
			AND `job_log_id` = #{jobLogId,jdbcType=BIGINT}
		</where>
	</update>
	
	<update id="modifyBy">
		UPDATE sys_job_log
		<set>
			`job_name` = #{sysJobLog.jobName,jdbcType=VARCHAR}, 
			`job_group` = #{sysJobLog.jobGroup,jdbcType=VARCHAR}, 
			`method_name` = #{sysJobLog.methodName,jdbcType=VARCHAR}, 
			`method_params` = #{sysJobLog.methodParams,jdbcType=VARCHAR}, 
			`job_message` = #{sysJobLog.jobMessage,jdbcType=VARCHAR}, 
			`status` = #{sysJobLog.status,jdbcType=CHAR}, 
			`exception_info` = #{sysJobLog.exceptionInfo,jdbcType=VARCHAR}, 
			`create_time` = #{sysJobLog.createTime,jdbcType=TIMESTAMP}, 
		</set>
		<where>
		<if test="condiSysJobLog != null">
			<if test="condiSysJobLog.jobLogId != null">
			AND `job_log_id` = #{condiSysJobLog.jobLogId,jdbcType=BIGINT}
			</if>
			<if test="condiSysJobLog.jobName != null">
			AND `job_name` = #{condiSysJobLog.jobName,jdbcType=VARCHAR}
			</if>
			<if test="condiSysJobLog.jobGroup != null">
			AND `job_group` = #{condiSysJobLog.jobGroup,jdbcType=VARCHAR}
			</if>
			<if test="condiSysJobLog.methodName != null">
			AND `method_name` = #{condiSysJobLog.methodName,jdbcType=VARCHAR}
			</if>
			<if test="condiSysJobLog.methodParams != null">
			AND `method_params` = #{condiSysJobLog.methodParams,jdbcType=VARCHAR}
			</if>
			<if test="condiSysJobLog.jobMessage != null">
			AND `job_message` = #{condiSysJobLog.jobMessage,jdbcType=VARCHAR}
			</if>
			<if test="condiSysJobLog.status != null">
			AND `status` = #{condiSysJobLog.status,jdbcType=CHAR}
			</if>
			<if test="condiSysJobLog.exceptionInfo != null">
			AND `exception_info` = #{condiSysJobLog.exceptionInfo,jdbcType=VARCHAR}
			</if>
			<if test="condiSysJobLog.createTime != null">
			AND `create_time` = #{condiSysJobLog.createTime,jdbcType=TIMESTAMP}
			</if>
		</if>
		</where>
	</update>
	
	<update id="modifyWithSelectiveBy">
		UPDATE sys_job_log
		<set>
		<if test="sysJobLog != null">
			<if test="sysJobLog.jobName != null">
			`job_name` = #{sysJobLog.jobName,jdbcType=VARCHAR}, 
			</if>
			<if test="sysJobLog.jobGroup != null">
			`job_group` = #{sysJobLog.jobGroup,jdbcType=VARCHAR}, 
			</if>
			<if test="sysJobLog.methodName != null">
			`method_name` = #{sysJobLog.methodName,jdbcType=VARCHAR}, 
			</if>
			<if test="sysJobLog.methodParams != null">
			`method_params` = #{sysJobLog.methodParams,jdbcType=VARCHAR}, 
			</if>
			<if test="sysJobLog.jobMessage != null">
			`job_message` = #{sysJobLog.jobMessage,jdbcType=VARCHAR}, 
			</if>
			<if test="sysJobLog.status != null">
			`status` = #{sysJobLog.status,jdbcType=CHAR}, 
			</if>
			<if test="sysJobLog.exceptionInfo != null">
			`exception_info` = #{sysJobLog.exceptionInfo,jdbcType=VARCHAR}, 
			</if>
			<if test="sysJobLog.createTime != null">
			`create_time` = #{sysJobLog.createTime,jdbcType=TIMESTAMP}, 
			</if>
		</if>
		</set>
		<where>
		<if test="condiSysJobLog != null">
			<if test="condiSysJobLog.jobLogId != null">
			AND `job_log_id` = #{condiSysJobLog.jobLogId,jdbcType=BIGINT}
			</if>
			<if test="condiSysJobLog.jobName != null">
			AND `job_name` = #{condiSysJobLog.jobName,jdbcType=VARCHAR}
			</if>
			<if test="condiSysJobLog.jobGroup != null">
			AND `job_group` = #{condiSysJobLog.jobGroup,jdbcType=VARCHAR}
			</if>
			<if test="condiSysJobLog.methodName != null">
			AND `method_name` = #{condiSysJobLog.methodName,jdbcType=VARCHAR}
			</if>
			<if test="condiSysJobLog.methodParams != null">
			AND `method_params` = #{condiSysJobLog.methodParams,jdbcType=VARCHAR}
			</if>
			<if test="condiSysJobLog.jobMessage != null">
			AND `job_message` = #{condiSysJobLog.jobMessage,jdbcType=VARCHAR}
			</if>
			<if test="condiSysJobLog.status != null">
			AND `status` = #{condiSysJobLog.status,jdbcType=CHAR}
			</if>
			<if test="condiSysJobLog.exceptionInfo != null">
			AND `exception_info` = #{condiSysJobLog.exceptionInfo,jdbcType=VARCHAR}
			</if>
			<if test="condiSysJobLog.createTime != null">
			AND `create_time` = #{condiSysJobLog.createTime,jdbcType=TIMESTAMP}
			</if>
		</if>
		</where>
	</update>
	
	<select id="getByPK" resultType="com.bittrade.pojo.model.SysJobLog">
		SELECT 
			`job_log_id`, 
			`job_name`, 
			`job_group`, 
			`method_name`, 
			`method_params`, 
			`job_message`, 
			`status`, 
			`exception_info`, 
			`create_time`
		FROM sys_job_log
		<where>
			AND `job_log_id` = #{jobLogId,jdbcType=BIGINT}
		</where>
	</select>
	
	<select id="getBy" resultType="com.bittrade.pojo.model.SysJobLog">
		SELECT 
			`job_log_id`, 
			`job_name`, 
			`job_group`, 
			`method_name`, 
			`method_params`, 
			`job_message`, 
			`status`, 
			`exception_info`, 
			`create_time`
		FROM sys_job_log
		<where>
			<if test="jobName != null">
			AND `job_name` = #{jobName,jdbcType=VARCHAR}
			</if>
			<if test="jobGroup != null">
			AND `job_group` = #{jobGroup,jdbcType=VARCHAR}
			</if>
			<if test="methodName != null">
			AND `method_name` = #{methodName,jdbcType=VARCHAR}
			</if>
			<if test="methodParams != null">
			AND `method_params` = #{methodParams,jdbcType=VARCHAR}
			</if>
			<if test="jobMessage != null">
			AND `job_message` = #{jobMessage,jdbcType=VARCHAR}
			</if>
			<if test="status != null">
			AND `status` = #{status,jdbcType=CHAR}
			</if>
			<if test="exceptionInfo != null">
			AND `exception_info` = #{exceptionInfo,jdbcType=VARCHAR}
			</if>
			<if test="createTime != null">
			AND `create_time` = #{createTime,jdbcType=TIMESTAMP}
			</if>
		</where>
		LIMIT 1
	</select>
	
	<select id="get" resultType="com.bittrade.pojo.model.SysJobLog">
		SELECT 
			`job_log_id`, 
			`job_name`, 
			`job_group`, 
			`method_name`, 
			`method_params`, 
			`job_message`, 
			`status`, 
			`exception_info`, 
			`create_time`
		FROM sys_job_log
		LIMIT 1
	</select>
	
	<select id="getsBy" resultType="com.bittrade.pojo.model.SysJobLog">
		SELECT 
			<include refid="Base_Column_List"></include>
		FROM sys_job_log
		<where>
			<if test="jobName != null">
			AND `job_name` = #{jobName,jdbcType=VARCHAR}
			</if>
			<if test="jobGroup != null">
			AND `job_group` = #{jobGroup,jdbcType=VARCHAR}
			</if>
			<if test="methodName != null">
			AND `method_name` = #{methodName,jdbcType=VARCHAR}
			</if>
			<if test="methodParams != null">
			AND `method_params` = #{methodParams,jdbcType=VARCHAR}
			</if>
			<if test="jobMessage != null">
			AND `job_message` = #{jobMessage,jdbcType=VARCHAR}
			</if>
			<if test="status != null">
			AND `status` = #{status,jdbcType=CHAR}
			</if>
			<if test="exceptionInfo != null">
			AND `exception_info` = #{exceptionInfo,jdbcType=VARCHAR}
			</if>
			<if test="createTime != null">
			AND `create_time` = #{createTime,jdbcType=TIMESTAMP}
			</if>
			<include refid="sql_WHERE_forProperty"></include>
		</where>
	</select>
	
	<select id="gets" resultType="com.bittrade.pojo.model.SysJobLog">
		SELECT 
			<include refid="Base_Column_List"></include>
		FROM sys_job_log
	</select>
	
	<select id="getCntBy" resultType="int">
		SELECT COUNT(1)
		FROM sys_job_log
		<where>
		<if test="sysJobLog != null">
			<if test="sysJobLog.jobName != null">
			AND `job_name` = #{sysJobLog.jobName,jdbcType=VARCHAR}
			</if>
			<if test="sysJobLog.jobGroup != null">
			AND `job_group` = #{sysJobLog.jobGroup,jdbcType=VARCHAR}
			</if>
			<if test="sysJobLog.methodName != null">
			AND `method_name` = #{sysJobLog.methodName,jdbcType=VARCHAR}
			</if>
			<if test="sysJobLog.methodParams != null">
			AND `method_params` = #{sysJobLog.methodParams,jdbcType=VARCHAR}
			</if>
			<if test="sysJobLog.jobMessage != null">
			AND `job_message` = #{sysJobLog.jobMessage,jdbcType=VARCHAR}
			</if>
			<if test="sysJobLog.status != null">
			AND `status` = #{sysJobLog.status,jdbcType=CHAR}
			</if>
			<if test="sysJobLog.exceptionInfo != null">
			AND `exception_info` = #{sysJobLog.exceptionInfo,jdbcType=VARCHAR}
			</if>
			<if test="sysJobLog.createTime != null">
			AND `create_time` = #{sysJobLog.createTime,jdbcType=TIMESTAMP}
			</if>
			<include refid="sql_WHERE_forObject"></include>
		</if>
		</where>
	</select>
	
	<select id="getsByPage" resultType="com.bittrade.pojo.model.SysJobLog">
		SELECT 
			`job_log_id`, 
			`job_name`, 
			`job_group`, 
			`method_name`, 
			`method_params`, 
			`job_message`, 
			`status`, 
			`exception_info`, 
			`create_time`
		FROM sys_job_log
		<where>
		<if test="sysJobLog != null">
			<if test="sysJobLog.jobName != null">
			AND `job_name` = #{sysJobLog.jobName,jdbcType=VARCHAR}
			</if>
			<if test="sysJobLog.jobGroup != null">
			AND `job_group` = #{sysJobLog.jobGroup,jdbcType=VARCHAR}
			</if>
			<if test="sysJobLog.methodName != null">
			AND `method_name` = #{sysJobLog.methodName,jdbcType=VARCHAR}
			</if>
			<if test="sysJobLog.methodParams != null">
			AND `method_params` = #{sysJobLog.methodParams,jdbcType=VARCHAR}
			</if>
			<if test="sysJobLog.jobMessage != null">
			AND `job_message` = #{sysJobLog.jobMessage,jdbcType=VARCHAR}
			</if>
			<if test="sysJobLog.status != null">
			AND `status` = #{sysJobLog.status,jdbcType=CHAR}
			</if>
			<if test="sysJobLog.exceptionInfo != null">
			AND `exception_info` = #{sysJobLog.exceptionInfo,jdbcType=VARCHAR}
			</if>
			<if test="sysJobLog.createTime != null">
			AND `create_time` = #{sysJobLog.createTime,jdbcType=TIMESTAMP}
			</if>
			<include refid="sql_WHERE_forObject"></include>
		</if>
		</where>
		LIMIT #{page}, #{size}
	</select>
	
	<select id="getDTOBy" resultType="com.bittrade.pojo.dto.SysJobLogDTO">
		SELECT 
			`job_log_id`, 
			`job_name`, 
			`job_group`, 
			`method_name`, 
			`method_params`, 
			`job_message`, 
			`status`, 
			`exception_info`, 
			`create_time`
		FROM sys_job_log
		<where>
			<if test="jobName != null">
			AND `job_name` = #{jobName,jdbcType=VARCHAR}
			</if>
			<if test="jobGroup != null">
			AND `job_group` = #{jobGroup,jdbcType=VARCHAR}
			</if>
			<if test="methodName != null">
			AND `method_name` = #{methodName,jdbcType=VARCHAR}
			</if>
			<if test="methodParams != null">
			AND `method_params` = #{methodParams,jdbcType=VARCHAR}
			</if>
			<if test="jobMessage != null">
			AND `job_message` = #{jobMessage,jdbcType=VARCHAR}
			</if>
			<if test="status != null">
			AND `status` = #{status,jdbcType=CHAR}
			</if>
			<if test="exceptionInfo != null">
			AND `exception_info` = #{exceptionInfo,jdbcType=VARCHAR}
			</if>
			<if test="createTime != null">
			AND `create_time` = #{createTime,jdbcType=TIMESTAMP}
			</if>
		</where>
		LIMIT 1
	</select>
	
	<select id="getsDTOBy" resultType="com.bittrade.pojo.dto.SysJobLogDTO">
		SELECT 
			<include refid="sql_Column_forObject"></include>
		FROM sys_job_log
		<where>
			<include refid="sql_WHERE_forObject"></include>
		</where>
	</select>

</mapper>