<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bittrade.uac.mapper.UserAuthenticationMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.bittrade.uac.model.pojo.UserAuthentication">
        <id column="id" property="id" />
        <result column="user_id" property="userId" />
        <result column="real_name" property="realName" />
        <result column="identity_no" property="identityNo" />
        <result column="identity_type" property="identityType" />
        <result column="identity_front_url" property="identityFrontUrl" />
        <result column="identity_front_key" property="identityFrontKey" />
        <result column="identity_front_hash" property="identityFrontHash" />
        <result column="identity_back_url" property="identityBackUrl" />
        <result column="identity_back_key" property="identityBackKey" />
        <result column="identity_back_hash" property="identityBackHash" />
        <result column="post_real_validate" property="postRealValidate" />
        <result column="fhas_real_Validate" property="fhasRealValidate" />
        <result column="bank_card_no" property="bankCardNo" />
        <result column="bank_address" property="bankAddress" />
        <result column="bank_card_url" property="bankCardUrl" />
        <result column="bank_card_key" property="bankCardKey" />
        <result column="bank_card_hash" property="bankCardHash" />
        <result column="alipay_no" property="alipayNo" />
        <result column="status" property="status" />
        <result column="submit_time" property="submitTime" />
        <result column="auditor" property="auditor" />
        <result column="audit_time" property="auditTime" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, user_id AS userId, real_name AS realName, identity_no AS identityNo, identity_type AS identityType, identity_front_url AS identityFrontUrl, identity_front_key AS identityFrontKey, identity_front_hash AS identityFrontHash, identity_back_url AS identityBackUrl, identity_back_key AS identityBackKey, identity_back_hash AS identityBackHash, post_real_validate AS postRealValidate, fhas_real_Validate AS fhasRealValidate, bank_card_no AS bankCardNo, bank_address AS bankAddress, bank_card_url AS bankCardUrl, bank_card_key AS bankCardKey, bank_card_hash AS bankCardHash, alipay_no AS alipayNo, status, submit_time AS submitTime, auditor, audit_time AS auditTime, create_time AS createTime, update_time AS updateTime
    </sql>

    <select id="queryAuthenticationList" resultType="com.bittrade.uac.model.dto.AuthenticationDto">
        SELECT
          t1.user_id AS userId,
          t2.login_name AS loginName,
          t1.real_name AS realName,
          t1.fhas_real_Validate AS fhasRealValidate,
          t1.submit_time AS submitTime,
          t2.create_time AS registerTime,
          t1.auditor AS auditor,
          t1.audit_time AS auditTime
        FROM
          t_user_authentication t1
        LEFT JOIN t_user t2 ON t1.user_id = t2.id
        <where>
            <if test="status != null">AND t1.fhas_real_Validate = #{status}</if>
            <if test="keyWord != null">AND (t1.real_name LIKE CONCAT('%',#{keyWord},'%') OR t2.login_name LIKE CONCAT('%',#{keyWord},'%'))</if>
            <if test="beginTime != null">AND t1.submit_time >= #{beginTime}</if>
            <if test="closeTime != null">AND t1.submit_time &lt;= #{closeTime}</if>
        </where>
        ORDER BY t1.fhas_real_Validate DESC, t1.audit_time DESC
        LIMIT #{begin}, #{size}
    </select>

    <select id="queryAuthenticationCount" resultType="java.lang.Integer">
        SELECT count(t1.id)
        FROM
          t_user_authentication t1
        LEFT JOIN t_user t2 ON t1.user_id = t2.id
        <where>
            <if test="status != null">AND t1.fhas_real_Validate = #{status}</if>
            <if test="keyWord != null">AND (t1.real_name LIKE CONCAT('%',#{keyWord},'%') OR t2.login_name LIKE CONCAT('%',#{keyWord},'%'))</if>
            <if test="beginTime != null">AND t1.submit_time >= #{beginTime}</if>
            <if test="closeTime != null">AND t1.submit_time &lt;= #{closeTime}</if>
        </where>
    </select>

    <select id="queryRejectAuthenticationList" resultType="java.lang.Long">
        SELECT user_id  FROM t_user_authentication where fhas_real_Validate = 0
    </select>

    <select id="selectByUserId" resultType="com.bittrade.uac.model.dto.UserAuthenticationDto">
      SELECT
        t1.user_id AS userId,
        t1.real_name AS realName,
        t1.identity_no AS identityNo,
        t1.identity_type AS identityType,
        t1.identity_front_url AS identityFrontUrl,
        t1.identity_front_key AS identityFrontKey,
        t1.identity_front_hash AS identityFrontHash,
        t1.identity_back_url AS identityBackUrl,
        t1.identity_back_key AS identityBackKey,
        t1.identity_back_hash AS identityBackHash,
        t1.post_real_validate AS postRealValidate,
        t1.fhas_real_Validate AS fhasRealValidate,
        t1.bank_card_no AS bankCardNo,
        t1.bank_address AS bankAddress,
        t1.bank_card_url AS bankCardUrl,
        t1.bank_card_key AS bankCardKey,
        t1.bank_card_hash AS bankCardHash,
        t1.alipay_no AS alipayNo,
        t1.status,
        t1.submit_time AS submitTime,
        t1.audit_time AS auditTime,
        t1.create_time AS createTime,
        t1.update_time AS updateTime,
        t2.login_name AS loginName
      FROM
          t_user_authentication t1
      LEFT JOIN t_user t2 ON t1.user_id = t2.id
      WHERE t1.user_id = #{userId}
    </select>

    <update id="updateByUserId">
        update
          t_user_authentication
        set
          identity_front_url = #{identityFrontUrl},
          identity_back_url = #{identityBackUrl},
          bank_card_url = #{bankCardUrl}
        where
          user_id = #{userId}
    </update>
</mapper>
