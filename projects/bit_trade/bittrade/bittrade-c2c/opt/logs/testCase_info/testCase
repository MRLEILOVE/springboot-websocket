[2019-08-28 11:44:33.602] [INFO ] - [main][?#?:?] : using logger: com.alibaba.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[2019-08-28 11:44:33.610] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-28 11:44:33.615] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {}
[2019-08-28 11:44:33.899] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6c61a903: startup date [Wed Aug 28 11:44:33 CST 2019]; root of context hierarchy
[2019-08-28 11:44:34.303] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-28 11:44:34.374] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8b5327ea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:44:34.555] [INFO ] - [pool-1-thread-1][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$1.run(AwaitingNonWebApplicationListener.java:61)] :  [Dubbo] Current Spring Boot Application is await...
[2019-08-28 11:44:35.005] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-28 11:44:35.007] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {dubbo.application.id=service-consumer, dubbo.application.name=service-consumer, dubbo.consumer.check=false, dubbo.consumer.timeout=5000, dubbo.monitor=, dubbo.protocol.id=dubbo, dubbo.protocol.name=dubbo, dubbo.protocol.port=20884, dubbo.provider.timeout=5000, dubbo.registry.address=N/A, dubbo.registry.check=false, dubbo.registry.id=my-registry, dubbo.registry.protocol=zookeeper, dubbo.scan=}
[2019-08-28 11:44:35.063] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : The following profiles are active: common,data,eureka,dubbo_provider,dubbo_consumer
[2019-08-28 11:44:35.071] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Refreshing org.springframework.web.context.support.GenericWebApplicationContext@59fc684e: startup date [Wed Aug 28 11:44:35 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6c61a903
[2019-08-28 11:44:36.380] [WARN ] - [main][ org.mybatis.logging.Logger.warn(Logger.java:44)] : No MyBatis mapper was found in '[com.baomidou.cloud.service.*.mapper*]' package. Please check your configuration.
[2019-08-28 11:44:37.112] [INFO ] - [main][ org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:172)] : Multiple Spring Data modules found, entering strict repository configuration mode!
[2019-08-28 11:44:37.542] [WARN ] - [main][ com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans(ServiceAnnotationBeanPostProcessor.java:155)] :  [DUBBO] No Spring Bean annotating Dubbo's @Service was found under package[com.bittrade.c2c], dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 11:44:37.960] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : BeanFactory id=61352edb-e99a-3c04-9bd9-f50ca066a043
[2019-08-28 11:44:38.145] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-28 11:44:38.411] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:44:38.425] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionProperties' of type [com.core.framework.props.TransactionProperties$$EnhancerBySpringCGLIB$$8081e793] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:44:38.441] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$88e51a5f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:44:38.445] [INFO ] - [main][ com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource(DruidDataSourceAutoConfigure.java:56)] : Init DruidDataSource
[2019-08-28 11:44:38.554] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:44:38.680] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003)] : {dataSource-1} inited
[2019-08-28 11:44:38.681] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:44:38.712] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:44:38.727] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$$EnhancerBySpringCGLIB$$3ad1ff7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:44:38.747] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:44:38.753] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:44:38.762] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration$$EnhancerBySpringCGLIB$$1c39bd5c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:44:38.799] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:44:38.800] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionConfig' of type [com.core.framework.config.TransactionConfig$$EnhancerBySpringCGLIB$$753da238] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:44:38.824] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'defaultPointcutAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:44:38.843] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6f3924ed] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:44:39.139] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' of type [com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration$$EnhancerBySpringCGLIB$$7e3aca5f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:44:39.154] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:44:39.163] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:44:39.167] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:44:39.171] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:44:39.174] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:44:39.227] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8b5327ea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:44:43.765] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'clientInboundChannelExecutor'
[2019-08-28 11:44:43.796] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'clientOutboundChannelExecutor'
[2019-08-28 11:44:44.214] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService
[2019-08-28 11:44:44.473] [INFO ] - [main][ com.core.framework.config.redis.JedisClusterConfig.getJedisCluster(JedisClusterConfig.java:35)] : 进入redis集群初始化方法：访问集群地址为：[154.222.138.5:7000, 154.222.138.5:7001, 154.222.138.5:7002, 154.222.138.5:7003, 154.222.138.5:7004, 154.222.138.5:7005]
[2019-08-28 11:44:45.939] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyTradeServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 11:44:47.239] [WARN ] - [main][ com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:98)] :  [DUBBO] Failed to start NettyClient HAHE/192.168.1.12 connect to the server localhost/127.0.0.1:20881 (check == false, ignore and retry later!), cause: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=4612&register.ip=192.168.1.12&side=consumer&timestamp=1566963885940) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=4612&register.ip=192.168.1.12&side=consumer&timestamp=1566963885940) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:89)
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.<init>(NettyClient.java:59)
	at com.alibaba.dubbo.remoting.transport.netty.NettyTransporter.connect(NettyTransporter.java:37)
	at com.alibaba.dubbo.remoting.Transporter$Adaptive.connect(Transporter$Adaptive.java)
	at com.alibaba.dubbo.remoting.Transporters.connect(Transporters.java:75)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchanger.connect(HeaderExchanger.java:39)
	at com.alibaba.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:109)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.initClient(DubboProtocol.java:409)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getSharedClient(DubboProtocol.java:377)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getClients(DubboProtocol.java:354)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.refer(DubboProtocol.java:336)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:67)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:65)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:108)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:394)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:333)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:163)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:66)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceFieldElement.inject(ReferenceAnnotationBeanPostProcessor.java:367)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.postProcessPropertyValues(ReferenceAnnotationBeanPostProcessor.java:92)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:759)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:548)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:386)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:89)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:41)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:541)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:763)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:463)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:209)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-08-28 11:44:47.417] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 11:44:48.687] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-28 11:44:48.687] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-28 11:44:48.715] [INFO ] - [main][ com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281)] : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@295f2d1b
[2019-08-28 11:44:48.933] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/sendMessage],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.sendMessage(com.bittrade.c2c.vo.SendVo)
[2019-08-28 11:44:48.934] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/sendOrder],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.pullOrderDetail(com.bittrade.c2c.vo.SendOrderVo)
[2019-08-28 11:44:48.935] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/pullUnreadMessage],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.pullMessage(java.lang.Long)
[2019-08-28 11:44:48.946] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/publish_advert],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.publishAdvert(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.TAdvertInfoDTO)
[2019-08-28 11:44:48.947] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.listAdverts(com.core.common.DTO.PageDTO<com.bittrade.pojo.dto.TAdvertInfoDTO>,com.bittrade.pojo.vo.QueryAdvertVO,com.core.web.constant.entity.LoginUser)
[2019-08-28 11:44:48.948] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts/users/{coin_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.listAdvertsUsers(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.AdvertUserVO>,java.lang.Long,com.core.web.constant.entity.LoginUser)
[2019-08-28 11:44:48.949] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts/details/{advert_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.getAdvertDetails(java.lang.Long)
[2019-08-28 11:44:48.950] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/suspend],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.suspendAdverts(java.util.List<java.lang.Long>,com.core.web.constant.entity.LoginUser)
[2019-08-28 11:44:48.951] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/place_advert_order/{advert_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.placeAdvertOrder(java.lang.Long,java.math.BigDecimal,java.lang.String,com.core.web.constant.entity.LoginUser)
[2019-08-28 11:44:48.952] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/revoke/{advert_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.revokeAdverts(java.lang.Long,com.core.web.constant.entity.LoginUser)
[2019-08-28 11:44:48.952] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 11:44:48.953] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 11:44:48.954] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 11:44:48.955] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 11:44:48.955] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 11:44:48.956] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 11:44:48.957] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 11:44:48.958] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 11:44:48.959] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 11:44:48.960] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 11:44:48.961] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 11:44:48.962] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 11:44:48.962] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 11:44:48.963] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 11:44:48.964] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 11:44:48.971] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/details/{order_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.getAdvertOrderDetails(java.lang.Long)
[2019-08-28 11:44:48.972] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/click_already_paid/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.clickAlreadyPaid(java.lang.Long)
[2019-08-28 11:44:48.973] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/click_already_receipt/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.clickAlreadyReceipt(java.lang.Long)
[2019-08-28 11:44:48.974] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/already_complete],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.alreadyCompleteAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 11:44:48.975] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/already_cancel],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.alreadyCancelAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 11:44:48.975] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/cancel/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.cancelAdvertOrder(java.lang.Long)
[2019-08-28 11:44:48.976] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/no_complete],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.noCompleteAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 11:44:48.977] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 11:44:48.977] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 11:44:48.978] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 11:44:48.979] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 11:44:48.979] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 11:44:48.980] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 11:44:48.981] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 11:44:48.982] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 11:44:48.983] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 11:44:48.983] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 11:44:48.984] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 11:44:48.986] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 11:44:48.987] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 11:44:48.988] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 11:44:48.989] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 11:44:48.998] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/detail],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetsVO>> com.common.bittrade.controller.TLegalCurrencyAccountController.detail(com.core.web.constant.entity.LoginUser)
[2019-08-28 11:44:48.999] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/availableBalanceFeign],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.lang.String com.common.bittrade.controller.TLegalCurrencyAccountController.availableBalanceFeign(java.lang.Long,java.lang.String)
[2019-08-28 11:44:48.999] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/conversionTotal],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.ConversionVo> com.common.bittrade.controller.TLegalCurrencyAccountController.totalConversion(com.core.web.constant.entity.LoginUser)
[2019-08-28 11:44:49.000] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getAssetsFeign],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.math.BigDecimal com.common.bittrade.controller.TLegalCurrencyAccountController.getAssetsFeign(java.lang.Long)
[2019-08-28 11:44:49.001] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 11:44:49.001] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 11:44:49.002] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 11:44:49.003] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 11:44:49.003] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 11:44:49.004] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 11:44:49.005] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 11:44:49.005] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 11:44:49.006] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 11:44:49.007] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 11:44:49.007] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 11:44:49.008] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 11:44:49.009] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 11:44:49.009] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 11:44:49.010] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 11:44:49.014] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/legalCurrency_coins],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.common.bittrade.controller.TLegalCurrencyCoinController.listLegalCurrencyCoins()
[2019-08-28 11:44:49.015] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 11:44:49.016] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 11:44:49.016] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 11:44:49.017] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 11:44:49.018] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 11:44:49.018] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 11:44:49.019] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 11:44:49.020] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 11:44:49.020] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 11:44:49.021] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 11:44:49.022] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 11:44:49.022] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 11:44:49.023] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 11:44:49.024] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 11:44:49.024] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 11:44:49.029] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/queryAccountRecord],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.RecordVO>> com.common.bittrade.controller.TLegalCurrencyRecordController.queryAccountRecord(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.AccountTypeDto)
[2019-08-28 11:44:49.030] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/queryType],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetRecordTypeVO>> com.common.bittrade.controller.TLegalCurrencyRecordController.queryTypeForFund()
[2019-08-28 11:44:49.031] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 11:44:49.031] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 11:44:49.032] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 11:44:49.033] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 11:44:49.033] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 11:44:49.034] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 11:44:49.035] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 11:44:49.035] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 11:44:49.036] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 11:44:49.036] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 11:44:49.037] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 11:44:49.038] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 11:44:49.038] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 11:44:49.039] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 11:44:49.040] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 11:44:49.044] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/rechargecoinlist],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO com.common.bittrade.controller.WCoinController.rechargecoinlist()
[2019-08-28 11:44:49.045] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/getList],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.model.WCoin>> com.common.bittrade.controller.WCoinController.getList()
[2019-08-28 11:44:49.045] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/Withdrawcoinlist],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO com.common.bittrade.controller.WCoinController.withdrawcoinlist()
[2019-08-28 11:44:49.047] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccount/detail],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetsVO>> com.common.bittrade.controller.WWalletAccountController.detail(com.core.web.constant.entity.LoginUser)
[2019-08-28 11:44:49.047] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccount/conversionTotal],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.ConversionVo> com.common.bittrade.controller.WWalletAccountController.totalConversion(com.core.web.constant.entity.LoginUser)
[2019-08-28 11:44:49.049] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryFundAccountRecord],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.RecordVO>> com.common.bittrade.controller.WWalletAccountRecordController.queryFundAccountRecord(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.AccountTypeDto)
[2019-08-28 11:44:49.050] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryCurrencies],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.model.WCoin>> com.common.bittrade.controller.WWalletAccountRecordController.queryCurrencies()
[2019-08-28 11:44:49.051] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryTypeForFund],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetRecordTypeVO>> com.common.bittrade.controller.WWalletAccountRecordController.queryTypeForFund()
[2019-08-28 11:44:49.054] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
[2019-08-28 11:44:49.056] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
[2019-08-28 11:44:49.056] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
[2019-08-28 11:44:49.061] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2019-08-28 11:44:49.061] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2019-08-28 11:44:49.195] [WARN ] - [DubboClientReconnectTimer-thread-1][ com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:171)] :  [DUBBO] client reconnect to localhost:20881 find error . url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=4612&register.ip=192.168.1.12&side=consumer&timestamp=1566963885940, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=4612&register.ip=192.168.1.12&side=consumer&timestamp=1566963885940) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:156)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	... 3 common frames omitted
[2019-08-28 11:44:50.321] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Exposing 2 endpoint(s) beneath base path '/actuator'
[2019-08-28 11:44:50.350] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2019-08-28 11:44:50.352] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2019-08-28 11:44:50.353] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2019-08-28 11:44:50.659] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'messageBrokerTaskScheduler'
[2019-08-28 11:44:50.751] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped URL path [/c2c/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
[2019-08-28 11:44:50.776] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'brokerChannelExecutor'
[2019-08-28 11:44:51.101] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[2019-08-28 11:44:51.595] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@59fc684e: startup date [Wed Aug 28 11:44:35 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6c61a903
[2019-08-28 11:44:51.681] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Detected @ExceptionHandler methods in globalExceptionHandler
[2019-08-28 11:44:52.071] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-28 11:44:52.071] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-28 11:44:53.603] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting beans in phase 0
[2019-08-28 11:44:53.604] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting beans in phase 2147483647
[2019-08-28 11:44:53.604] [INFO ] - [main][ springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:151)] : Context refreshed
[2019-08-28 11:44:53.643] [INFO ] - [main][ springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:154)] : Found 1 custom documentation plugin(s)
[2019-08-28 11:44:53.703] [INFO ] - [main][ springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)] : Scanning for api listing references
[2019-08-28 11:44:54.181] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting...
[2019-08-28 11:44:54.182] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
[2019-08-28 11:44:54.184] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Started.
[2019-08-28 11:44:54.204] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Started AdvertInfoTester in 20.921 seconds (JVM running for 22.693)
[2019-08-28 11:44:54.440] [INFO ] - [Thread-2][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$2.run(AwaitingNonWebApplicationListener.java:83)] :  [Dubbo] Current Spring Boot Application is about to shutdown...
[2019-08-28 11:44:54.443] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:64)] :  [DUBBO] Close all registries [], dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 11:44:54.444] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(DubboProtocol.java:438)] :  [DUBBO] Close dubbo connect: 192.168.1.12:0-->localhost/127.0.0.1:20881, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 11:44:54.444] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:63)] :  [DUBBO] Destroy reference: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&default.check=false&default.timeout=5000&dubbo=2.6.2&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=4612&register.ip=192.168.1.12&side=consumer&timestamp=1566963885940, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 11:44:54.540] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:349)] : Initializing Eureka in region us-east-1
[2019-08-28 11:44:54.852] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70)] : Using JSON encoding codec LegacyJacksonJson
[2019-08-28 11:44:54.853] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71)] : Using JSON decoding codec LegacyJacksonJson
[2019-08-28 11:44:55.084] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80)] : Using XML encoding codec XStreamXml
[2019-08-28 11:44:55.085] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81)] : Using XML decoding codec XStreamXml
[2019-08-28 11:44:55.204] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:63)] :  [DUBBO] Destroy reference: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyService?application=service-consumer&default.check=false&default.timeout=5000&dubbo=2.6.2&interface=com.bittrade.currency.api.service.ITCurrencyService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getCurrencies,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,findAllLegalCurrency,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,findUsableCurrency,updateById,pageMaps,listByMap,getByPK&pid=4612&register.ip=192.168.1.12&side=consumer&timestamp=1566963887418, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 11:44:55.409] [INFO ] - [Thread-8][ com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] : Resolving eureka endpoints via configuration
[2019-08-28 11:44:55.445] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958)] : Disable delta property : false
[2019-08-28 11:44:55.445] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:959)] : Single vip registry refresh property : null
[2019-08-28 11:44:55.446] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960)] : Force full registry fetch : false
[2019-08-28 11:44:55.446] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:961)] : Application is null : false
[2019-08-28 11:44:55.446] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:962)] : Registered Applications size is zero : true
[2019-08-28 11:44:55.446] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:964)] : Application version is -1: true
[2019-08-28 11:44:55.447] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1047)] : Getting all instance registry info from the eureka server
[2019-08-28 11:44:57.575] [ERROR] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83)] : Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$92bc2109.CGLIB$eurekaClient$0(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$92bc2109$$FastClassBySpringCGLIB$$ad7d66e4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:365)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$92bc2109.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:583)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1246)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:535)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:193)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 65 common frames omitted
[2019-08-28 11:44:57.578] [WARN ] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:130)] : Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2019-08-28 11:44:57.579] [ERROR] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:972)] : DiscoveryClient_BITTRADE-C2C/192.168.1.12:-1:bittrade-c2c:@project.version@ - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$92bc2109.CGLIB$eurekaClient$0(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$92bc2109$$FastClassBySpringCGLIB$$ad7d66e4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:365)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$92bc2109.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:583)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1246)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:535)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:193)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
[2019-08-28 11:44:57.580] [WARN ] - [Thread-8][ com.netflix.discovery.DiscoveryClient$1.get(DiscoveryClient.java:290)] : Using default backup registry implementation which does not do anything.
[2019-08-28 11:44:57.584] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1264)] : Starting heartbeat executor: renew interval is: 30
[2019-08-28 11:44:57.591] [INFO ] - [Thread-8][ com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60)] : InstanceInfoReplicator onDemand update allowed rate per min is 4
[2019-08-28 11:44:57.601] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:449)] : Discovery Client initialized at timestamp 1566963897598 with initial instances count: 0
[2019-08-28 11:44:57.618] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:888)] : Shutting down DiscoveryClient ...
[2019-08-28 11:45:03.709] [INFO ] - [main][?#?:?] : using logger: com.alibaba.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[2019-08-28 11:45:03.718] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-28 11:45:03.726] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {}
[2019-08-28 11:45:04.000] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6c61a903: startup date [Wed Aug 28 11:45:03 CST 2019]; root of context hierarchy
[2019-08-28 11:45:04.392] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-28 11:45:04.462] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8b5327ea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:45:04.639] [INFO ] - [pool-1-thread-1][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$1.run(AwaitingNonWebApplicationListener.java:61)] :  [Dubbo] Current Spring Boot Application is await...
[2019-08-28 11:45:05.070] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-28 11:45:05.071] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {dubbo.application.id=service-consumer, dubbo.application.name=service-consumer, dubbo.consumer.check=false, dubbo.consumer.timeout=5000, dubbo.monitor=, dubbo.protocol.id=dubbo, dubbo.protocol.name=dubbo, dubbo.protocol.port=20884, dubbo.provider.timeout=5000, dubbo.registry.address=N/A, dubbo.registry.check=false, dubbo.registry.id=my-registry, dubbo.registry.protocol=zookeeper, dubbo.scan=}
[2019-08-28 11:45:05.114] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : The following profiles are active: common,data,eureka,dubbo_provider,dubbo_consumer
[2019-08-28 11:45:05.123] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Refreshing org.springframework.web.context.support.GenericWebApplicationContext@59fc684e: startup date [Wed Aug 28 11:45:05 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6c61a903
[2019-08-28 11:45:06.485] [WARN ] - [main][ org.mybatis.logging.Logger.warn(Logger.java:44)] : No MyBatis mapper was found in '[com.baomidou.cloud.service.*.mapper*]' package. Please check your configuration.
[2019-08-28 11:45:07.171] [INFO ] - [main][ org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:172)] : Multiple Spring Data modules found, entering strict repository configuration mode!
[2019-08-28 11:45:07.527] [WARN ] - [main][ com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans(ServiceAnnotationBeanPostProcessor.java:155)] :  [DUBBO] No Spring Bean annotating Dubbo's @Service was found under package[com.bittrade.c2c], dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 11:45:08.029] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : BeanFactory id=61352edb-e99a-3c04-9bd9-f50ca066a043
[2019-08-28 11:45:08.216] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-28 11:45:08.477] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:45:08.491] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionProperties' of type [com.core.framework.props.TransactionProperties$$EnhancerBySpringCGLIB$$8081e793] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:45:08.506] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$88e51a5f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:45:08.510] [INFO ] - [main][ com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource(DruidDataSourceAutoConfigure.java:56)] : Init DruidDataSource
[2019-08-28 11:45:08.614] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:45:08.738] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003)] : {dataSource-1} inited
[2019-08-28 11:45:08.739] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:45:08.770] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:45:08.782] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$$EnhancerBySpringCGLIB$$3ad1ff7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:45:08.800] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:45:08.808] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:45:08.819] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration$$EnhancerBySpringCGLIB$$1c39bd5c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:45:08.856] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:45:08.857] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionConfig' of type [com.core.framework.config.TransactionConfig$$EnhancerBySpringCGLIB$$753da238] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:45:08.881] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'defaultPointcutAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:45:08.900] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6f3924ed] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:45:09.193] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' of type [com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration$$EnhancerBySpringCGLIB$$7e3aca5f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:45:09.208] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:45:09.217] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:45:09.221] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:45:09.224] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:45:09.228] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:45:09.285] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8b5327ea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:45:13.704] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'clientInboundChannelExecutor'
[2019-08-28 11:45:13.732] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'clientOutboundChannelExecutor'
[2019-08-28 11:45:14.136] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService
[2019-08-28 11:45:14.362] [INFO ] - [main][ com.core.framework.config.redis.JedisClusterConfig.getJedisCluster(JedisClusterConfig.java:35)] : 进入redis集群初始化方法：访问集群地址为：[154.222.138.5:7000, 154.222.138.5:7001, 154.222.138.5:7002, 154.222.138.5:7003, 154.222.138.5:7004, 154.222.138.5:7005]
[2019-08-28 11:45:15.832] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyTradeServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 11:45:17.134] [WARN ] - [main][ com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:98)] :  [DUBBO] Failed to start NettyClient HAHE/192.168.1.12 connect to the server localhost/127.0.0.1:20881 (check == false, ignore and retry later!), cause: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=5184&register.ip=192.168.1.12&side=consumer&timestamp=1566963915833) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=5184&register.ip=192.168.1.12&side=consumer&timestamp=1566963915833) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:89)
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.<init>(NettyClient.java:59)
	at com.alibaba.dubbo.remoting.transport.netty.NettyTransporter.connect(NettyTransporter.java:37)
	at com.alibaba.dubbo.remoting.Transporter$Adaptive.connect(Transporter$Adaptive.java)
	at com.alibaba.dubbo.remoting.Transporters.connect(Transporters.java:75)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchanger.connect(HeaderExchanger.java:39)
	at com.alibaba.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:109)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.initClient(DubboProtocol.java:409)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getSharedClient(DubboProtocol.java:377)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getClients(DubboProtocol.java:354)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.refer(DubboProtocol.java:336)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:65)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:108)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:67)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:394)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:333)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:163)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:66)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceFieldElement.inject(ReferenceAnnotationBeanPostProcessor.java:367)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.postProcessPropertyValues(ReferenceAnnotationBeanPostProcessor.java:92)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:759)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:548)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:386)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:89)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:41)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:541)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:763)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:463)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:209)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-08-28 11:45:17.315] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 11:45:18.547] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-28 11:45:18.548] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-28 11:45:18.576] [INFO ] - [main][ com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281)] : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@57b33c29
[2019-08-28 11:45:18.818] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/sendMessage],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.sendMessage(com.bittrade.c2c.vo.SendVo)
[2019-08-28 11:45:18.820] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/pullUnreadMessage],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.pullMessage(java.lang.Long)
[2019-08-28 11:45:18.820] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/sendOrder],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.pullOrderDetail(com.bittrade.c2c.vo.SendOrderVo)
[2019-08-28 11:45:18.832] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/publish_advert],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.publishAdvert(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.TAdvertInfoDTO)
[2019-08-28 11:45:18.833] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/suspend],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.suspendAdverts(java.util.List<java.lang.Long>,com.core.web.constant.entity.LoginUser)
[2019-08-28 11:45:18.834] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/revoke/{advert_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.revokeAdverts(java.lang.Long,com.core.web.constant.entity.LoginUser)
[2019-08-28 11:45:18.835] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts/details/{advert_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.getAdvertDetails(java.lang.Long)
[2019-08-28 11:45:18.836] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/place_advert_order/{advert_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.placeAdvertOrder(java.lang.Long,java.math.BigDecimal,java.lang.String,com.core.web.constant.entity.LoginUser)
[2019-08-28 11:45:18.837] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.listAdverts(com.core.common.DTO.PageDTO<com.bittrade.pojo.dto.TAdvertInfoDTO>,com.bittrade.pojo.vo.QueryAdvertVO,com.core.web.constant.entity.LoginUser)
[2019-08-28 11:45:18.838] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts/users/{coin_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.listAdvertsUsers(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.AdvertUserVO>,java.lang.Long,com.core.web.constant.entity.LoginUser)
[2019-08-28 11:45:18.838] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 11:45:18.839] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 11:45:18.840] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 11:45:18.841] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 11:45:18.841] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 11:45:18.842] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 11:45:18.843] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 11:45:18.844] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 11:45:18.845] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 11:45:18.846] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 11:45:18.847] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 11:45:18.848] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 11:45:18.849] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 11:45:18.850] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 11:45:18.851] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 11:45:18.858] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/details/{order_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.getAdvertOrderDetails(java.lang.Long)
[2019-08-28 11:45:18.859] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/no_complete],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.noCompleteAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 11:45:18.859] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/already_cancel],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.alreadyCancelAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 11:45:18.860] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/cancel/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.cancelAdvertOrder(java.lang.Long)
[2019-08-28 11:45:18.861] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/click_already_receipt/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.clickAlreadyReceipt(java.lang.Long)
[2019-08-28 11:45:18.862] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/already_complete],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.alreadyCompleteAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 11:45:18.863] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/click_already_paid/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.clickAlreadyPaid(java.lang.Long)
[2019-08-28 11:45:18.864] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 11:45:18.865] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 11:45:18.865] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 11:45:18.866] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 11:45:18.867] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 11:45:18.867] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 11:45:18.868] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 11:45:18.869] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 11:45:18.870] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 11:45:18.871] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 11:45:18.871] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 11:45:18.872] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 11:45:18.873] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 11:45:18.873] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 11:45:18.874] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 11:45:18.880] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/availableBalanceFeign],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.lang.String com.common.bittrade.controller.TLegalCurrencyAccountController.availableBalanceFeign(java.lang.Long,java.lang.String)
[2019-08-28 11:45:18.881] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/detail],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetsVO>> com.common.bittrade.controller.TLegalCurrencyAccountController.detail(com.core.web.constant.entity.LoginUser)
[2019-08-28 11:45:18.882] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/conversionTotal],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.ConversionVo> com.common.bittrade.controller.TLegalCurrencyAccountController.totalConversion(com.core.web.constant.entity.LoginUser)
[2019-08-28 11:45:18.882] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getAssetsFeign],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.math.BigDecimal com.common.bittrade.controller.TLegalCurrencyAccountController.getAssetsFeign(java.lang.Long)
[2019-08-28 11:45:18.883] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 11:45:18.884] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 11:45:18.884] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 11:45:18.885] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 11:45:18.886] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 11:45:18.887] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 11:45:18.887] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 11:45:18.888] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 11:45:18.889] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 11:45:18.890] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 11:45:18.891] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 11:45:18.892] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 11:45:18.894] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 11:45:18.895] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 11:45:18.896] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 11:45:18.900] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/legalCurrency_coins],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.common.bittrade.controller.TLegalCurrencyCoinController.listLegalCurrencyCoins()
[2019-08-28 11:45:18.901] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 11:45:18.902] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 11:45:18.902] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 11:45:18.903] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 11:45:18.904] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 11:45:18.905] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 11:45:18.905] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 11:45:18.906] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 11:45:18.907] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 11:45:18.908] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 11:45:18.908] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 11:45:18.909] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 11:45:18.910] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 11:45:18.911] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 11:45:18.911] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 11:45:18.916] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/queryAccountRecord],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.RecordVO>> com.common.bittrade.controller.TLegalCurrencyRecordController.queryAccountRecord(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.AccountTypeDto)
[2019-08-28 11:45:18.917] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/queryType],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetRecordTypeVO>> com.common.bittrade.controller.TLegalCurrencyRecordController.queryTypeForFund()
[2019-08-28 11:45:18.918] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 11:45:18.919] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 11:45:18.920] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 11:45:18.921] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 11:45:18.921] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 11:45:18.922] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 11:45:18.923] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 11:45:18.923] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 11:45:18.924] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 11:45:18.925] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 11:45:18.926] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 11:45:18.927] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 11:45:18.928] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 11:45:18.929] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 11:45:18.930] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 11:45:18.935] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/getList],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.model.WCoin>> com.common.bittrade.controller.WCoinController.getList()
[2019-08-28 11:45:18.935] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/rechargecoinlist],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO com.common.bittrade.controller.WCoinController.rechargecoinlist()
[2019-08-28 11:45:18.936] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/Withdrawcoinlist],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO com.common.bittrade.controller.WCoinController.withdrawcoinlist()
[2019-08-28 11:45:18.938] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccount/detail],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetsVO>> com.common.bittrade.controller.WWalletAccountController.detail(com.core.web.constant.entity.LoginUser)
[2019-08-28 11:45:18.938] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccount/conversionTotal],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.ConversionVo> com.common.bittrade.controller.WWalletAccountController.totalConversion(com.core.web.constant.entity.LoginUser)
[2019-08-28 11:45:18.940] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryFundAccountRecord],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.RecordVO>> com.common.bittrade.controller.WWalletAccountRecordController.queryFundAccountRecord(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.AccountTypeDto)
[2019-08-28 11:45:18.941] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryTypeForFund],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetRecordTypeVO>> com.common.bittrade.controller.WWalletAccountRecordController.queryTypeForFund()
[2019-08-28 11:45:18.941] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryCurrencies],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.model.WCoin>> com.common.bittrade.controller.WWalletAccountRecordController.queryCurrencies()
[2019-08-28 11:45:18.945] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
[2019-08-28 11:45:18.946] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
[2019-08-28 11:45:18.947] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
[2019-08-28 11:45:18.952] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2019-08-28 11:45:18.953] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2019-08-28 11:45:19.077] [WARN ] - [DubboClientReconnectTimer-thread-1][ com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:171)] :  [DUBBO] client reconnect to localhost:20881 find error . url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=5184&register.ip=192.168.1.12&side=consumer&timestamp=1566963915833, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=5184&register.ip=192.168.1.12&side=consumer&timestamp=1566963915833) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:156)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	... 3 common frames omitted
[2019-08-28 11:45:20.281] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Exposing 2 endpoint(s) beneath base path '/actuator'
[2019-08-28 11:45:20.310] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2019-08-28 11:45:20.311] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2019-08-28 11:45:20.313] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2019-08-28 11:45:20.633] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'messageBrokerTaskScheduler'
[2019-08-28 11:45:20.734] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped URL path [/c2c/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
[2019-08-28 11:45:20.759] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'brokerChannelExecutor'
[2019-08-28 11:45:21.107] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[2019-08-28 11:45:21.610] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@59fc684e: startup date [Wed Aug 28 11:45:05 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6c61a903
[2019-08-28 11:45:21.695] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Detected @ExceptionHandler methods in globalExceptionHandler
[2019-08-28 11:45:22.047] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-28 11:45:22.048] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-28 11:45:23.500] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting beans in phase 0
[2019-08-28 11:45:23.501] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting beans in phase 2147483647
[2019-08-28 11:45:23.501] [INFO ] - [main][ springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:151)] : Context refreshed
[2019-08-28 11:45:23.536] [INFO ] - [main][ springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:154)] : Found 1 custom documentation plugin(s)
[2019-08-28 11:45:23.592] [INFO ] - [main][ springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)] : Scanning for api listing references
[2019-08-28 11:45:24.080] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting...
[2019-08-28 11:45:24.080] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
[2019-08-28 11:45:24.082] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Started.
[2019-08-28 11:45:24.103] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Started AdvertInfoTester in 20.711 seconds (JVM running for 22.27)
[2019-08-28 11:45:24.384] [INFO ] - [Thread-2][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$2.run(AwaitingNonWebApplicationListener.java:83)] :  [Dubbo] Current Spring Boot Application is about to shutdown...
[2019-08-28 11:45:24.386] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:64)] :  [DUBBO] Close all registries [], dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 11:45:24.387] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(DubboProtocol.java:438)] :  [DUBBO] Close dubbo connect: 192.168.1.12:0-->localhost/127.0.0.1:20881, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 11:45:24.387] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:63)] :  [DUBBO] Destroy reference: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&default.check=false&default.timeout=5000&dubbo=2.6.2&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=5184&register.ip=192.168.1.12&side=consumer&timestamp=1566963915833, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 11:45:24.484] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:349)] : Initializing Eureka in region us-east-1
[2019-08-28 11:45:24.789] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70)] : Using JSON encoding codec LegacyJacksonJson
[2019-08-28 11:45:24.789] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71)] : Using JSON decoding codec LegacyJacksonJson
[2019-08-28 11:45:25.014] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80)] : Using XML encoding codec XStreamXml
[2019-08-28 11:45:25.015] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81)] : Using XML decoding codec XStreamXml
[2019-08-28 11:45:25.091] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:63)] :  [DUBBO] Destroy reference: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyService?application=service-consumer&default.check=false&default.timeout=5000&dubbo=2.6.2&interface=com.bittrade.currency.api.service.ITCurrencyService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getCurrencies,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,findAllLegalCurrency,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,findUsableCurrency,updateById,pageMaps,listByMap,getByPK&pid=5184&register.ip=192.168.1.12&side=consumer&timestamp=1566963917316, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 11:45:25.325] [INFO ] - [Thread-8][ com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] : Resolving eureka endpoints via configuration
[2019-08-28 11:45:25.361] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958)] : Disable delta property : false
[2019-08-28 11:45:25.362] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:959)] : Single vip registry refresh property : null
[2019-08-28 11:45:25.362] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960)] : Force full registry fetch : false
[2019-08-28 11:45:25.362] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:961)] : Application is null : false
[2019-08-28 11:45:25.363] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:962)] : Registered Applications size is zero : true
[2019-08-28 11:45:25.363] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:964)] : Application version is -1: true
[2019-08-28 11:45:25.363] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1047)] : Getting all instance registry info from the eureka server
[2019-08-28 11:45:27.497] [ERROR] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83)] : Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$92bc2109.CGLIB$eurekaClient$0(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$92bc2109$$FastClassBySpringCGLIB$$ad7d66e4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:365)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$92bc2109.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:583)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1246)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:535)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:193)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 65 common frames omitted
[2019-08-28 11:45:27.499] [WARN ] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:130)] : Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2019-08-28 11:45:27.500] [ERROR] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:972)] : DiscoveryClient_BITTRADE-C2C/192.168.1.12:-1:bittrade-c2c:@project.version@ - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$92bc2109.CGLIB$eurekaClient$0(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$92bc2109$$FastClassBySpringCGLIB$$ad7d66e4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:365)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$92bc2109.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:583)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1246)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:535)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:193)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
[2019-08-28 11:45:27.501] [WARN ] - [Thread-8][ com.netflix.discovery.DiscoveryClient$1.get(DiscoveryClient.java:290)] : Using default backup registry implementation which does not do anything.
[2019-08-28 11:45:27.505] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1264)] : Starting heartbeat executor: renew interval is: 30
[2019-08-28 11:45:27.511] [INFO ] - [Thread-8][ com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60)] : InstanceInfoReplicator onDemand update allowed rate per min is 4
[2019-08-28 11:45:27.522] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:449)] : Discovery Client initialized at timestamp 1566963927518 with initial instances count: 0
[2019-08-28 11:45:27.546] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:888)] : Shutting down DiscoveryClient ...
[2019-08-28 11:45:30.549] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:922)] : Unregistering ...
[2019-08-28 11:45:32.577] [ERROR] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83)] : Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:923)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:901)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:246)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:494)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 46 common frames omitted
[2019-08-28 11:45:32.579] [WARN ] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:130)] : Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2019-08-28 11:45:32.580] [ERROR] - [Thread-8][ com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:926)] : DiscoveryClient_BITTRADE-C2C/192.168.1.12:-1:bittrade-c2c:@project.version@ - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:923)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:901)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:246)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:494)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
[2019-08-28 11:45:32.604] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:911)] : Completed shut down of DiscoveryClient
[2019-08-28 11:45:32.618] [INFO ] - [Thread-8][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:1948)] : {dataSource-1} closing ...
[2019-08-28 11:45:32.623] [INFO ] - [Thread-8][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:2020)] : {dataSource-1} closed
[2019-08-28 11:48:35.241] [INFO ] - [main][?#?:?] : using logger: com.alibaba.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[2019-08-28 11:48:35.254] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-28 11:48:35.261] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {}
[2019-08-28 11:48:35.701] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@41c07648: startup date [Wed Aug 28 11:48:35 CST 2019]; root of context hierarchy
[2019-08-28 11:48:36.239] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-28 11:48:36.327] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$df71c3ec] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:48:36.538] [INFO ] - [pool-1-thread-1][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$1.run(AwaitingNonWebApplicationListener.java:61)] :  [Dubbo] Current Spring Boot Application is await...
[2019-08-28 11:48:37.069] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-28 11:48:37.070] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {dubbo.application.id=service-consumer, dubbo.application.name=service-consumer, dubbo.consumer.check=false, dubbo.consumer.timeout=5000, dubbo.monitor=, dubbo.protocol.id=dubbo, dubbo.protocol.name=dubbo, dubbo.protocol.port=20884, dubbo.provider.timeout=5000, dubbo.registry.address=N/A, dubbo.registry.check=false, dubbo.registry.id=my-registry, dubbo.registry.protocol=zookeeper, dubbo.scan=}
[2019-08-28 11:48:37.144] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : The following profiles are active: common,data,eureka,dubbo_provider,dubbo_consumer
[2019-08-28 11:48:37.154] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Refreshing org.springframework.web.context.support.GenericWebApplicationContext@c2e3264: startup date [Wed Aug 28 11:48:37 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@41c07648
[2019-08-28 11:48:38.812] [WARN ] - [main][ org.mybatis.logging.Logger.warn(Logger.java:44)] : No MyBatis mapper was found in '[com.baomidou.cloud.service.*.mapper*]' package. Please check your configuration.
[2019-08-28 11:48:39.765] [INFO ] - [main][ org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:172)] : Multiple Spring Data modules found, entering strict repository configuration mode!
[2019-08-28 11:48:40.207] [WARN ] - [main][ com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans(ServiceAnnotationBeanPostProcessor.java:155)] :  [DUBBO] No Spring Bean annotating Dubbo's @Service was found under package[com.bittrade.c2c], dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 11:48:40.698] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : BeanFactory id=61352edb-e99a-3c04-9bd9-f50ca066a043
[2019-08-28 11:48:40.940] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-28 11:48:41.284] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:48:41.298] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionProperties' of type [com.core.framework.props.TransactionProperties$$EnhancerBySpringCGLIB$$d4a08395] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:48:41.321] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$dd03b661] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:48:41.328] [INFO ] - [main][ com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource(DruidDataSourceAutoConfigure.java:56)] : Init DruidDataSource
[2019-08-28 11:48:41.474] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:48:41.691] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003)] : {dataSource-1} inited
[2019-08-28 11:48:41.692] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:48:41.737] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:48:41.751] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$$EnhancerBySpringCGLIB$$57cbbbf9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:48:41.773] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:48:41.782] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:48:41.791] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration$$EnhancerBySpringCGLIB$$7058595e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:48:41.832] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:48:41.833] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionConfig' of type [com.core.framework.config.TransactionConfig$$EnhancerBySpringCGLIB$$c95c3e3a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:48:41.862] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'defaultPointcutAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:48:41.886] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c357c0ef] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:48:42.257] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' of type [com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration$$EnhancerBySpringCGLIB$$d2596661] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:48:42.283] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:48:42.293] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:48:42.298] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:48:42.302] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:48:42.306] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:48:42.386] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$df71c3ec] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 11:48:47.345] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'clientInboundChannelExecutor'
[2019-08-28 11:48:47.382] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'clientOutboundChannelExecutor'
[2019-08-28 11:48:47.912] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService
[2019-08-28 11:48:48.234] [INFO ] - [main][ com.core.framework.config.redis.JedisClusterConfig.getJedisCluster(JedisClusterConfig.java:35)] : 进入redis集群初始化方法：访问集群地址为：[154.222.138.5:7000, 154.222.138.5:7001, 154.222.138.5:7002, 154.222.138.5:7003, 154.222.138.5:7004, 154.222.138.5:7005]
[2019-08-28 11:48:50.014] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyTradeServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 11:48:51.667] [WARN ] - [main][ com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:98)] :  [DUBBO] Failed to start NettyClient HAHE/192.168.1.12 connect to the server localhost/127.0.0.1:20881 (check == false, ignore and retry later!), cause: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=5708&register.ip=192.168.1.12&side=consumer&timestamp=1566964130015) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=5708&register.ip=192.168.1.12&side=consumer&timestamp=1566964130015) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:89)
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.<init>(NettyClient.java:59)
	at com.alibaba.dubbo.remoting.transport.netty.NettyTransporter.connect(NettyTransporter.java:37)
	at com.alibaba.dubbo.remoting.Transporter$Adaptive.connect(Transporter$Adaptive.java)
	at com.alibaba.dubbo.remoting.Transporters.connect(Transporters.java:75)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchanger.connect(HeaderExchanger.java:39)
	at com.alibaba.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:109)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.initClient(DubboProtocol.java:409)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getSharedClient(DubboProtocol.java:377)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getClients(DubboProtocol.java:354)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.refer(DubboProtocol.java:336)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:65)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:108)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:67)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:394)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:333)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:163)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:66)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceFieldElement.inject(ReferenceAnnotationBeanPostProcessor.java:367)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.postProcessPropertyValues(ReferenceAnnotationBeanPostProcessor.java:92)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:759)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:548)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:386)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:89)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:41)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:541)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:763)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:463)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:209)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-08-28 11:48:51.856] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 11:48:53.072] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-28 11:48:53.073] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-28 11:48:53.109] [INFO ] - [main][ com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281)] : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@7b43f95c
[2019-08-28 11:48:53.459] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/sendMessage],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.sendMessage(com.bittrade.c2c.vo.SendVo)
[2019-08-28 11:48:53.461] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/pullUnreadMessage],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.pullMessage(java.lang.Long)
[2019-08-28 11:48:53.462] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/sendOrder],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.pullOrderDetail(com.bittrade.c2c.vo.SendOrderVo)
[2019-08-28 11:48:53.476] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.listAdverts(com.core.common.DTO.PageDTO<com.bittrade.pojo.dto.TAdvertInfoDTO>,com.bittrade.pojo.vo.QueryAdvertVO,com.core.web.constant.entity.LoginUser)
[2019-08-28 11:48:53.477] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/suspend],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.suspendAdverts(java.util.List<java.lang.Long>,com.core.web.constant.entity.LoginUser)
[2019-08-28 11:48:53.478] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts/users/{coin_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.listAdvertsUsers(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.AdvertUserVO>,java.lang.Long,com.core.web.constant.entity.LoginUser)
[2019-08-28 11:48:53.479] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/revoke/{advert_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.revokeAdverts(java.lang.Long,com.core.web.constant.entity.LoginUser)
[2019-08-28 11:48:53.480] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts/details/{advert_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.getAdvertDetails(java.lang.Long)
[2019-08-28 11:48:53.481] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/place_advert_order/{advert_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.placeAdvertOrder(java.lang.Long,java.math.BigDecimal,java.lang.String,com.core.web.constant.entity.LoginUser)
[2019-08-28 11:48:53.482] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/publish_advert],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.publishAdvert(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.TAdvertInfoDTO)
[2019-08-28 11:48:53.484] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 11:48:53.485] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 11:48:53.486] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 11:48:53.487] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 11:48:53.488] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 11:48:53.489] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 11:48:53.490] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 11:48:53.491] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 11:48:53.492] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 11:48:53.494] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 11:48:53.495] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 11:48:53.496] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 11:48:53.497] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 11:48:53.499] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 11:48:53.500] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 11:48:53.507] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/details/{order_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.getAdvertOrderDetails(java.lang.Long)
[2019-08-28 11:48:53.508] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/cancel/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.cancelAdvertOrder(java.lang.Long)
[2019-08-28 11:48:53.509] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/already_cancel],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.alreadyCancelAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 11:48:53.510] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/no_complete],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.noCompleteAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 11:48:53.511] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/already_complete],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.alreadyCompleteAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 11:48:53.512] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/click_already_receipt/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.clickAlreadyReceipt(java.lang.Long)
[2019-08-28 11:48:53.514] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/click_already_paid/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.clickAlreadyPaid(java.lang.Long)
[2019-08-28 11:48:53.515] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 11:48:53.516] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 11:48:53.517] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 11:48:53.518] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 11:48:53.519] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 11:48:53.519] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 11:48:53.520] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 11:48:53.521] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 11:48:53.522] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 11:48:53.523] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 11:48:53.524] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 11:48:53.525] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 11:48:53.526] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 11:48:53.526] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 11:48:53.527] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 11:48:53.534] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/detail],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetsVO>> com.common.bittrade.controller.TLegalCurrencyAccountController.detail(com.core.web.constant.entity.LoginUser)
[2019-08-28 11:48:53.535] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/availableBalanceFeign],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.lang.String com.common.bittrade.controller.TLegalCurrencyAccountController.availableBalanceFeign(java.lang.Long,java.lang.String)
[2019-08-28 11:48:53.536] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/conversionTotal],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.ConversionVo> com.common.bittrade.controller.TLegalCurrencyAccountController.totalConversion(com.core.web.constant.entity.LoginUser)
[2019-08-28 11:48:53.537] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getAssetsFeign],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.math.BigDecimal com.common.bittrade.controller.TLegalCurrencyAccountController.getAssetsFeign(java.lang.Long)
[2019-08-28 11:48:53.538] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 11:48:53.538] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 11:48:53.539] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 11:48:53.540] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 11:48:53.541] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 11:48:53.542] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 11:48:53.543] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 11:48:53.543] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 11:48:53.544] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 11:48:53.545] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 11:48:53.546] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 11:48:53.547] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 11:48:53.548] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 11:48:53.549] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 11:48:53.549] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 11:48:53.554] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/legalCurrency_coins],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.common.bittrade.controller.TLegalCurrencyCoinController.listLegalCurrencyCoins()
[2019-08-28 11:48:53.555] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 11:48:53.556] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 11:48:53.557] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 11:48:53.558] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 11:48:53.559] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 11:48:53.560] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 11:48:53.560] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 11:48:53.561] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 11:48:53.562] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 11:48:53.563] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 11:48:53.564] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 11:48:53.565] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 11:48:53.566] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 11:48:53.567] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 11:48:53.569] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 11:48:53.576] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/queryAccountRecord],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.RecordVO>> com.common.bittrade.controller.TLegalCurrencyRecordController.queryAccountRecord(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.AccountTypeDto)
[2019-08-28 11:48:53.577] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/queryType],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetRecordTypeVO>> com.common.bittrade.controller.TLegalCurrencyRecordController.queryTypeForFund()
[2019-08-28 11:48:53.578] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 11:48:53.579] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 11:48:53.580] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 11:48:53.581] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 11:48:53.582] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 11:48:53.582] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 11:48:53.583] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 11:48:53.584] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 11:48:53.585] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 11:48:53.586] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 11:48:53.586] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 11:48:53.588] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 11:48:53.589] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 11:48:53.590] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 11:48:53.591] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 11:48:53.596] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/rechargecoinlist],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO com.common.bittrade.controller.WCoinController.rechargecoinlist()
[2019-08-28 11:48:53.597] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/Withdrawcoinlist],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO com.common.bittrade.controller.WCoinController.withdrawcoinlist()
[2019-08-28 11:48:53.598] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/getList],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.model.WCoin>> com.common.bittrade.controller.WCoinController.getList()
[2019-08-28 11:48:53.600] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccount/detail],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetsVO>> com.common.bittrade.controller.WWalletAccountController.detail(com.core.web.constant.entity.LoginUser)
[2019-08-28 11:48:53.601] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccount/conversionTotal],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.ConversionVo> com.common.bittrade.controller.WWalletAccountController.totalConversion(com.core.web.constant.entity.LoginUser)
[2019-08-28 11:48:53.603] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryFundAccountRecord],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.RecordVO>> com.common.bittrade.controller.WWalletAccountRecordController.queryFundAccountRecord(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.AccountTypeDto)
[2019-08-28 11:48:53.604] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryCurrencies],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.model.WCoin>> com.common.bittrade.controller.WWalletAccountRecordController.queryCurrencies()
[2019-08-28 11:48:53.605] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryTypeForFund],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetRecordTypeVO>> com.common.bittrade.controller.WWalletAccountRecordController.queryTypeForFund()
[2019-08-28 11:48:53.611] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
[2019-08-28 11:48:53.613] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
[2019-08-28 11:48:53.615] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
[2019-08-28 11:48:53.618] [WARN ] - [DubboClientReconnectTimer-thread-1][ com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:171)] :  [DUBBO] client reconnect to localhost:20881 find error . url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=5708&register.ip=192.168.1.12&side=consumer&timestamp=1566964130015, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=5708&register.ip=192.168.1.12&side=consumer&timestamp=1566964130015) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:156)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	... 3 common frames omitted
[2019-08-28 11:48:53.623] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2019-08-28 11:48:53.624] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2019-08-28 11:48:55.415] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Exposing 2 endpoint(s) beneath base path '/actuator'
[2019-08-28 11:48:55.457] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2019-08-28 11:48:55.458] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2019-08-28 11:48:55.460] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2019-08-28 11:48:55.893] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'messageBrokerTaskScheduler'
[2019-08-28 11:48:56.025] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped URL path [/c2c/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
[2019-08-28 11:48:56.054] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'brokerChannelExecutor'
[2019-08-28 11:48:56.488] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[2019-08-28 11:48:57.126] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@c2e3264: startup date [Wed Aug 28 11:48:37 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@41c07648
[2019-08-28 11:48:57.239] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Detected @ExceptionHandler methods in globalExceptionHandler
[2019-08-28 11:48:57.721] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-28 11:48:57.722] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-28 11:48:59.874] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting beans in phase 0
[2019-08-28 11:48:59.874] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting beans in phase 2147483647
[2019-08-28 11:48:59.875] [INFO ] - [main][ springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:151)] : Context refreshed
[2019-08-28 11:48:59.924] [INFO ] - [main][ springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:154)] : Found 1 custom documentation plugin(s)
[2019-08-28 11:49:00.005] [INFO ] - [main][ springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)] : Scanning for api listing references
[2019-08-28 11:49:00.577] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting...
[2019-08-28 11:49:00.578] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
[2019-08-28 11:49:00.580] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Started.
[2019-08-28 11:49:00.604] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Started AdvertInfoTester in 25.741 seconds (JVM running for 28.332)
[2019-08-28 11:49:01.045] [INFO ] - [Thread-2][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$2.run(AwaitingNonWebApplicationListener.java:83)] :  [Dubbo] Current Spring Boot Application is about to shutdown...
[2019-08-28 11:49:01.050] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:64)] :  [DUBBO] Close all registries [], dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 11:49:01.051] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(DubboProtocol.java:438)] :  [DUBBO] Close dubbo connect: 192.168.1.12:0-->localhost/127.0.0.1:20881, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 11:49:01.052] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:63)] :  [DUBBO] Destroy reference: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&default.check=false&default.timeout=5000&dubbo=2.6.2&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=5708&register.ip=192.168.1.12&side=consumer&timestamp=1566964130015, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 11:49:01.064] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:63)] :  [DUBBO] Destroy reference: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyService?application=service-consumer&default.check=false&default.timeout=5000&dubbo=2.6.2&interface=com.bittrade.currency.api.service.ITCurrencyService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getCurrencies,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,findAllLegalCurrency,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,findUsableCurrency,updateById,pageMaps,listByMap,getByPK&pid=5708&register.ip=192.168.1.12&side=consumer&timestamp=1566964131856, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 11:49:01.169] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:349)] : Initializing Eureka in region us-east-1
[2019-08-28 11:49:01.449] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70)] : Using JSON encoding codec LegacyJacksonJson
[2019-08-28 11:49:01.450] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71)] : Using JSON decoding codec LegacyJacksonJson
[2019-08-28 11:49:01.721] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80)] : Using XML encoding codec XStreamXml
[2019-08-28 11:49:01.721] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81)] : Using XML decoding codec XStreamXml
[2019-08-28 11:49:02.218] [INFO ] - [Thread-8][ com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] : Resolving eureka endpoints via configuration
[2019-08-28 11:49:02.263] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958)] : Disable delta property : false
[2019-08-28 11:49:02.263] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:959)] : Single vip registry refresh property : null
[2019-08-28 11:49:02.263] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960)] : Force full registry fetch : false
[2019-08-28 11:49:02.264] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:961)] : Application is null : false
[2019-08-28 11:49:02.264] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:962)] : Registered Applications size is zero : true
[2019-08-28 11:49:02.264] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:964)] : Application version is -1: true
[2019-08-28 11:49:02.264] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1047)] : Getting all instance registry info from the eureka server
[2019-08-28 11:49:04.433] [ERROR] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83)] : Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$e6dabd0b.CGLIB$eurekaClient$0(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$e6dabd0b$$FastClassBySpringCGLIB$$5f2e1de4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:365)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$e6dabd0b.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:583)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1246)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:535)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:193)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 65 common frames omitted
[2019-08-28 11:49:04.435] [WARN ] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:130)] : Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2019-08-28 11:49:04.436] [ERROR] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:972)] : DiscoveryClient_BITTRADE-C2C/192.168.1.12:-1:bittrade-c2c:@project.version@ - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$e6dabd0b.CGLIB$eurekaClient$0(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$e6dabd0b$$FastClassBySpringCGLIB$$5f2e1de4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:365)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$e6dabd0b.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:583)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1246)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:535)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:193)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
[2019-08-28 11:49:04.438] [WARN ] - [Thread-8][ com.netflix.discovery.DiscoveryClient$1.get(DiscoveryClient.java:290)] : Using default backup registry implementation which does not do anything.
[2019-08-28 11:49:04.442] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1264)] : Starting heartbeat executor: renew interval is: 30
[2019-08-28 11:49:04.450] [INFO ] - [Thread-8][ com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60)] : InstanceInfoReplicator onDemand update allowed rate per min is 4
[2019-08-28 11:49:04.461] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:449)] : Discovery Client initialized at timestamp 1566964144457 with initial instances count: 0
[2019-08-28 11:49:04.481] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:888)] : Shutting down DiscoveryClient ...
[2019-08-28 11:49:07.482] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:922)] : Unregistering ...
[2019-08-28 11:49:09.513] [ERROR] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83)] : Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:923)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:901)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:246)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:494)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 46 common frames omitted
[2019-08-28 11:49:09.514] [WARN ] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:130)] : Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2019-08-28 11:49:09.514] [ERROR] - [Thread-8][ com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:926)] : DiscoveryClient_BITTRADE-C2C/192.168.1.12:-1:bittrade-c2c:@project.version@ - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:923)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:901)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:246)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:494)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
[2019-08-28 11:49:09.541] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:911)] : Completed shut down of DiscoveryClient
[2019-08-28 11:49:09.562] [INFO ] - [Thread-8][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:1948)] : {dataSource-1} closing ...
[2019-08-28 11:49:09.569] [INFO ] - [Thread-8][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:2020)] : {dataSource-1} closed
[2019-08-28 12:25:56.282] [INFO ] - [main][?#?:?] : using logger: com.alibaba.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[2019-08-28 12:25:56.291] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-28 12:25:56.298] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {}
[2019-08-28 12:25:56.578] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6c61a903: startup date [Wed Aug 28 12:25:56 CST 2019]; root of context hierarchy
[2019-08-28 12:25:56.976] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-28 12:25:57.045] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8b5327ea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:25:57.222] [INFO ] - [pool-1-thread-1][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$1.run(AwaitingNonWebApplicationListener.java:61)] :  [Dubbo] Current Spring Boot Application is await...
[2019-08-28 12:25:57.632] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-28 12:25:57.633] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {dubbo.application.id=service-consumer, dubbo.application.name=service-consumer, dubbo.consumer.check=false, dubbo.consumer.timeout=5000, dubbo.monitor=, dubbo.protocol.id=dubbo, dubbo.protocol.name=dubbo, dubbo.protocol.port=20884, dubbo.provider.timeout=5000, dubbo.registry.address=N/A, dubbo.registry.check=false, dubbo.registry.id=my-registry, dubbo.registry.protocol=zookeeper, dubbo.scan=}
[2019-08-28 12:25:57.679] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : The following profiles are active: common,data,eureka,dubbo_provider,dubbo_consumer
[2019-08-28 12:25:57.687] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Refreshing org.springframework.web.context.support.GenericWebApplicationContext@59fc684e: startup date [Wed Aug 28 12:25:57 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6c61a903
[2019-08-28 12:25:58.979] [WARN ] - [main][ org.mybatis.logging.Logger.warn(Logger.java:44)] : No MyBatis mapper was found in '[com.baomidou.cloud.service.*.mapper*]' package. Please check your configuration.
[2019-08-28 12:25:59.704] [INFO ] - [main][ org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:172)] : Multiple Spring Data modules found, entering strict repository configuration mode!
[2019-08-28 12:26:00.118] [WARN ] - [main][ com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans(ServiceAnnotationBeanPostProcessor.java:155)] :  [DUBBO] No Spring Bean annotating Dubbo's @Service was found under package[com.bittrade.c2c], dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 12:26:00.523] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : BeanFactory id=61352edb-e99a-3c04-9bd9-f50ca066a043
[2019-08-28 12:26:00.708] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-28 12:26:00.986] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:26:01.001] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionProperties' of type [com.core.framework.props.TransactionProperties$$EnhancerBySpringCGLIB$$8081e793] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:26:01.017] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$88e51a5f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:26:01.021] [INFO ] - [main][ com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource(DruidDataSourceAutoConfigure.java:56)] : Init DruidDataSource
[2019-08-28 12:26:01.130] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:26:01.263] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003)] : {dataSource-1} inited
[2019-08-28 12:26:01.264] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:26:01.299] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:26:01.310] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$$EnhancerBySpringCGLIB$$3ad1ff7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:26:01.328] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:26:01.335] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:26:01.343] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration$$EnhancerBySpringCGLIB$$1c39bd5c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:26:01.379] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:26:01.380] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionConfig' of type [com.core.framework.config.TransactionConfig$$EnhancerBySpringCGLIB$$753da238] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:26:01.404] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'defaultPointcutAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:26:01.422] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6f3924ed] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:26:01.705] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' of type [com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration$$EnhancerBySpringCGLIB$$7e3aca5f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:26:01.720] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:26:01.729] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:26:01.733] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:26:01.737] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:26:01.741] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:26:01.796] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8b5327ea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:26:06.271] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'clientInboundChannelExecutor'
[2019-08-28 12:26:06.298] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'clientOutboundChannelExecutor'
[2019-08-28 12:26:06.713] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService
[2019-08-28 12:26:06.809] [WARN ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'TAdvertInfoController': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'TAdvertInfoServiceImpl' defined in file [D:\work\git\git\projects\bit_trade\bittrade\bittrade-c2c\target\classes\com\bittrade\c2c\service\impl\TAdvertInfoServiceImpl.class]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.bittrade.c2c.service.impl.TAdvertInfoServiceImpl]: Constructor threw exception; nested exception is java.lang.Error: Unresolved compilation problems: 
	Incorrect number of arguments for type BaseDTO<Model,DTO>; it cannot be parameterized with arguments <DTO>
	Bound mismatch: The type DTO is not a valid substitute for the bounded parameter <DTO extends BaseDTO<Model,DTO>> of the type BaseServiceImpl<Model,DTO,VO,DAO>

[2019-08-28 12:26:06.812] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Shutting down ExecutorService
[2019-08-28 12:26:06.813] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Shutting down ExecutorService 'clientOutboundChannelExecutor'
[2019-08-28 12:26:06.813] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Shutting down ExecutorService 'clientInboundChannelExecutor'
[2019-08-28 12:26:06.814] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:1948)] : {dataSource-1} closing ...
[2019-08-28 12:26:06.818] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:2020)] : {dataSource-1} closed
[2019-08-28 12:26:06.850] [INFO ] - [Thread-2][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$2.run(AwaitingNonWebApplicationListener.java:83)] :  [Dubbo] Current Spring Boot Application is about to shutdown...
[2019-08-28 12:35:06.932] [INFO ] - [main][?#?:?] : using logger: com.alibaba.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[2019-08-28 12:35:06.940] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-28 12:35:06.946] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {}
[2019-08-28 12:35:07.219] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6c61a903: startup date [Wed Aug 28 12:35:07 CST 2019]; root of context hierarchy
[2019-08-28 12:35:07.610] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-28 12:35:07.681] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8b5327ea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:35:07.857] [INFO ] - [pool-1-thread-1][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$1.run(AwaitingNonWebApplicationListener.java:61)] :  [Dubbo] Current Spring Boot Application is await...
[2019-08-28 12:35:08.257] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-28 12:35:08.259] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {dubbo.application.id=service-consumer, dubbo.application.name=service-consumer, dubbo.consumer.check=false, dubbo.consumer.timeout=5000, dubbo.monitor=, dubbo.protocol.id=dubbo, dubbo.protocol.name=dubbo, dubbo.protocol.port=20884, dubbo.provider.timeout=5000, dubbo.registry.address=N/A, dubbo.registry.check=false, dubbo.registry.id=my-registry, dubbo.registry.protocol=zookeeper, dubbo.scan=}
[2019-08-28 12:35:08.301] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : The following profiles are active: common,data,eureka,dubbo_provider,dubbo_consumer
[2019-08-28 12:35:08.310] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Refreshing org.springframework.web.context.support.GenericWebApplicationContext@59fc684e: startup date [Wed Aug 28 12:35:08 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6c61a903
[2019-08-28 12:35:09.598] [WARN ] - [main][ org.mybatis.logging.Logger.warn(Logger.java:44)] : No MyBatis mapper was found in '[com.baomidou.cloud.service.*.mapper*]' package. Please check your configuration.
[2019-08-28 12:35:10.322] [INFO ] - [main][ org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:172)] : Multiple Spring Data modules found, entering strict repository configuration mode!
[2019-08-28 12:35:10.750] [WARN ] - [main][ com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans(ServiceAnnotationBeanPostProcessor.java:155)] :  [DUBBO] No Spring Bean annotating Dubbo's @Service was found under package[com.bittrade.c2c], dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 12:35:11.172] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : BeanFactory id=61352edb-e99a-3c04-9bd9-f50ca066a043
[2019-08-28 12:35:11.359] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-28 12:35:11.627] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:35:11.641] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionProperties' of type [com.core.framework.props.TransactionProperties$$EnhancerBySpringCGLIB$$8081e793] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:35:11.656] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$88e51a5f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:35:11.660] [INFO ] - [main][ com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource(DruidDataSourceAutoConfigure.java:56)] : Init DruidDataSource
[2019-08-28 12:35:11.767] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:35:11.890] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003)] : {dataSource-1} inited
[2019-08-28 12:35:11.891] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:35:11.919] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:35:11.930] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$$EnhancerBySpringCGLIB$$3ad1ff7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:35:11.948] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:35:11.954] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:35:11.962] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration$$EnhancerBySpringCGLIB$$1c39bd5c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:35:11.997] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:35:11.998] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionConfig' of type [com.core.framework.config.TransactionConfig$$EnhancerBySpringCGLIB$$753da238] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:35:12.021] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'defaultPointcutAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:35:12.039] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6f3924ed] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:35:12.328] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' of type [com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration$$EnhancerBySpringCGLIB$$7e3aca5f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:35:12.343] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:35:12.353] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:35:12.357] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:35:12.362] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:35:12.365] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:35:12.420] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8b5327ea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:35:16.730] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'clientInboundChannelExecutor'
[2019-08-28 12:35:16.756] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'clientOutboundChannelExecutor'
[2019-08-28 12:35:17.160] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService
[2019-08-28 12:35:17.421] [INFO ] - [main][ com.core.framework.config.redis.JedisClusterConfig.getJedisCluster(JedisClusterConfig.java:35)] : 进入redis集群初始化方法：访问集群地址为：[154.222.138.5:7000, 154.222.138.5:7001, 154.222.138.5:7002, 154.222.138.5:7003, 154.222.138.5:7004, 154.222.138.5:7005]
[2019-08-28 12:35:18.885] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyTradeServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 12:35:20.201] [WARN ] - [main][ com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:98)] :  [DUBBO] Failed to start NettyClient HAHE/192.168.1.12 connect to the server localhost/127.0.0.1:20881 (check == false, ignore and retry later!), cause: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=6056&register.ip=192.168.1.12&side=consumer&timestamp=1566966918886) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=6056&register.ip=192.168.1.12&side=consumer&timestamp=1566966918886) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:89)
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.<init>(NettyClient.java:59)
	at com.alibaba.dubbo.remoting.transport.netty.NettyTransporter.connect(NettyTransporter.java:37)
	at com.alibaba.dubbo.remoting.Transporter$Adaptive.connect(Transporter$Adaptive.java)
	at com.alibaba.dubbo.remoting.Transporters.connect(Transporters.java:75)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchanger.connect(HeaderExchanger.java:39)
	at com.alibaba.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:109)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.initClient(DubboProtocol.java:409)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getSharedClient(DubboProtocol.java:377)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getClients(DubboProtocol.java:354)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.refer(DubboProtocol.java:336)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:108)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:65)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:67)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:394)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:333)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:163)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:66)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceFieldElement.inject(ReferenceAnnotationBeanPostProcessor.java:367)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.postProcessPropertyValues(ReferenceAnnotationBeanPostProcessor.java:92)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:759)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:548)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:386)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:89)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:41)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:541)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:763)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:463)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:209)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-08-28 12:35:20.374] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 12:35:21.568] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-28 12:35:21.568] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-28 12:35:21.594] [INFO ] - [main][ com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281)] : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@148b6f95
[2019-08-28 12:35:21.826] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/sendMessage],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.sendMessage(com.bittrade.c2c.vo.SendVo)
[2019-08-28 12:35:21.828] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/sendOrder],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.pullOrderDetail(com.bittrade.c2c.vo.SendOrderVo)
[2019-08-28 12:35:21.829] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/pullUnreadMessage],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.pullMessage(java.lang.Long)
[2019-08-28 12:35:21.845] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.listAdverts(com.core.common.DTO.PageDTO<com.bittrade.pojo.dto.TAdvertInfoDTO>,com.bittrade.pojo.vo.QueryAdvertVO,com.core.web.constant.entity.LoginUser)
[2019-08-28 12:35:21.846] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/publish_advert],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.publishAdvert(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.TAdvertInfoDTO)
[2019-08-28 12:35:21.846] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/suspend],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.suspendAdverts(java.util.List<java.lang.Long>,com.core.web.constant.entity.LoginUser)
[2019-08-28 12:35:21.847] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts/details/{advert_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.getAdvertDetails(java.lang.Long)
[2019-08-28 12:35:21.848] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/place_advert_order/{advert_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.placeAdvertOrder(java.lang.Long,java.math.BigDecimal,java.lang.String,com.core.web.constant.entity.LoginUser)
[2019-08-28 12:35:21.849] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts/users/{coin_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.listAdvertsUsers(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.AdvertUserVO>,java.lang.Long,com.core.web.constant.entity.LoginUser)
[2019-08-28 12:35:21.850] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/revoke/{advert_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.revokeAdverts(java.lang.Long,com.core.web.constant.entity.LoginUser)
[2019-08-28 12:35:21.851] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 12:35:21.851] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 12:35:21.852] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 12:35:21.853] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 12:35:21.853] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 12:35:21.854] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 12:35:21.855] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 12:35:21.856] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 12:35:21.856] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 12:35:21.857] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 12:35:21.858] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 12:35:21.858] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 12:35:21.859] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 12:35:21.860] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 12:35:21.861] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 12:35:21.867] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/details/{order_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.getAdvertOrderDetails(java.lang.Long)
[2019-08-28 12:35:21.868] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/already_complete],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.alreadyCompleteAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 12:35:21.869] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/cancel/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.cancelAdvertOrder(java.lang.Long)
[2019-08-28 12:35:21.869] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/click_already_receipt/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.clickAlreadyReceipt(java.lang.Long)
[2019-08-28 12:35:21.870] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/already_cancel],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.alreadyCancelAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 12:35:21.871] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/no_complete],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.noCompleteAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 12:35:21.871] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/click_already_paid/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.clickAlreadyPaid(java.lang.Long)
[2019-08-28 12:35:21.872] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 12:35:21.873] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 12:35:21.874] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 12:35:21.874] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 12:35:21.875] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 12:35:21.875] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 12:35:21.876] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 12:35:21.877] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 12:35:21.878] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 12:35:21.879] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 12:35:21.880] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 12:35:21.881] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 12:35:21.882] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 12:35:21.883] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 12:35:21.885] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 12:35:21.892] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/detail],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetsVO>> com.common.bittrade.controller.TLegalCurrencyAccountController.detail(com.core.web.constant.entity.LoginUser)
[2019-08-28 12:35:21.893] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/availableBalanceFeign],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.lang.String com.common.bittrade.controller.TLegalCurrencyAccountController.availableBalanceFeign(java.lang.Long,java.lang.String)
[2019-08-28 12:35:21.893] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/conversionTotal],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.ConversionVo> com.common.bittrade.controller.TLegalCurrencyAccountController.totalConversion(com.core.web.constant.entity.LoginUser)
[2019-08-28 12:35:21.894] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getAssetsFeign],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.math.BigDecimal com.common.bittrade.controller.TLegalCurrencyAccountController.getAssetsFeign(java.lang.Long)
[2019-08-28 12:35:21.895] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 12:35:21.895] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 12:35:21.896] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 12:35:21.897] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 12:35:21.897] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 12:35:21.898] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 12:35:21.899] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 12:35:21.899] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 12:35:21.900] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 12:35:21.901] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 12:35:21.901] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 12:35:21.902] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 12:35:21.902] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 12:35:21.903] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 12:35:21.904] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 12:35:21.908] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/legalCurrency_coins],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.common.bittrade.controller.TLegalCurrencyCoinController.listLegalCurrencyCoins()
[2019-08-28 12:35:21.909] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 12:35:21.909] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 12:35:21.910] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 12:35:21.910] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 12:35:21.911] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 12:35:21.912] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 12:35:21.912] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 12:35:21.913] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 12:35:21.914] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 12:35:21.914] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 12:35:21.915] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 12:35:21.916] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 12:35:21.916] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 12:35:21.917] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 12:35:21.918] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 12:35:21.922] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/queryAccountRecord],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.RecordVO>> com.common.bittrade.controller.TLegalCurrencyRecordController.queryAccountRecord(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.AccountTypeDto)
[2019-08-28 12:35:21.923] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/queryType],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetRecordTypeVO>> com.common.bittrade.controller.TLegalCurrencyRecordController.queryTypeForFund()
[2019-08-28 12:35:21.924] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 12:35:21.924] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 12:35:21.925] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 12:35:21.926] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 12:35:21.926] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 12:35:21.927] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 12:35:21.928] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 12:35:21.928] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 12:35:21.929] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 12:35:21.930] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 12:35:21.930] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 12:35:21.931] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 12:35:21.932] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 12:35:21.933] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 12:35:21.933] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 12:35:21.938] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/getList],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.model.WCoin>> com.common.bittrade.controller.WCoinController.getList()
[2019-08-28 12:35:21.939] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/Withdrawcoinlist],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO com.common.bittrade.controller.WCoinController.withdrawcoinlist()
[2019-08-28 12:35:21.939] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/rechargecoinlist],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO com.common.bittrade.controller.WCoinController.rechargecoinlist()
[2019-08-28 12:35:21.941] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccount/detail],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetsVO>> com.common.bittrade.controller.WWalletAccountController.detail(com.core.web.constant.entity.LoginUser)
[2019-08-28 12:35:21.941] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccount/conversionTotal],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.ConversionVo> com.common.bittrade.controller.WWalletAccountController.totalConversion(com.core.web.constant.entity.LoginUser)
[2019-08-28 12:35:21.943] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryFundAccountRecord],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.RecordVO>> com.common.bittrade.controller.WWalletAccountRecordController.queryFundAccountRecord(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.AccountTypeDto)
[2019-08-28 12:35:21.944] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryTypeForFund],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetRecordTypeVO>> com.common.bittrade.controller.WWalletAccountRecordController.queryTypeForFund()
[2019-08-28 12:35:21.944] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryCurrencies],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.model.WCoin>> com.common.bittrade.controller.WWalletAccountRecordController.queryCurrencies()
[2019-08-28 12:35:21.948] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
[2019-08-28 12:35:21.949] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
[2019-08-28 12:35:21.950] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
[2019-08-28 12:35:21.955] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2019-08-28 12:35:21.956] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2019-08-28 12:35:22.141] [WARN ] - [DubboClientReconnectTimer-thread-1][ com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:171)] :  [DUBBO] client reconnect to localhost:20881 find error . url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=6056&register.ip=192.168.1.12&side=consumer&timestamp=1566966918886, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=6056&register.ip=192.168.1.12&side=consumer&timestamp=1566966918886) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:156)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	... 3 common frames omitted
[2019-08-28 12:35:23.242] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Exposing 2 endpoint(s) beneath base path '/actuator'
[2019-08-28 12:35:23.274] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2019-08-28 12:35:23.276] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2019-08-28 12:35:23.277] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2019-08-28 12:35:23.623] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'messageBrokerTaskScheduler'
[2019-08-28 12:35:23.717] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped URL path [/c2c/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
[2019-08-28 12:35:23.740] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'brokerChannelExecutor'
[2019-08-28 12:35:24.059] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[2019-08-28 12:35:24.495] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@59fc684e: startup date [Wed Aug 28 12:35:08 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6c61a903
[2019-08-28 12:35:24.601] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Detected @ExceptionHandler methods in globalExceptionHandler
[2019-08-28 12:35:24.971] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-28 12:35:24.971] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-28 12:35:26.414] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting beans in phase 0
[2019-08-28 12:35:26.414] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting beans in phase 2147483647
[2019-08-28 12:35:26.415] [INFO ] - [main][ springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:151)] : Context refreshed
[2019-08-28 12:35:26.451] [INFO ] - [main][ springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:154)] : Found 1 custom documentation plugin(s)
[2019-08-28 12:35:26.509] [INFO ] - [main][ springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)] : Scanning for api listing references
[2019-08-28 12:35:27.022] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting...
[2019-08-28 12:35:27.023] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
[2019-08-28 12:35:27.024] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Started.
[2019-08-28 12:35:27.045] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Started AdvertInfoTester in 20.431 seconds (JVM running for 22.208)
[2019-08-28 12:35:27.417] [INFO ] - [Thread-8][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Closing org.springframework.web.context.support.GenericWebApplicationContext@59fc684e: startup date [Wed Aug 28 12:35:08 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6c61a903
[2019-08-28 12:35:27.417] [INFO ] - [Thread-2][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$2.run(AwaitingNonWebApplicationListener.java:83)] :  [Dubbo] Current Spring Boot Application is about to shutdown...
[2019-08-28 12:35:27.419] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:64)] :  [DUBBO] Close all registries [], dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 12:35:27.420] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(DubboProtocol.java:438)] :  [DUBBO] Close dubbo connect: 192.168.1.12:0-->localhost/127.0.0.1:20881, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 12:35:27.420] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:63)] :  [DUBBO] Destroy reference: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyService?application=service-consumer&default.check=false&default.timeout=5000&dubbo=2.6.2&interface=com.bittrade.currency.api.service.ITCurrencyService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getCurrencies,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,findAllLegalCurrency,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,findUsableCurrency,updateById,pageMaps,listByMap,getByPK&pid=6056&register.ip=192.168.1.12&side=consumer&timestamp=1566966920375, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 12:35:27.509] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:349)] : Initializing Eureka in region us-east-1
[2019-08-28 12:35:27.802] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70)] : Using JSON encoding codec LegacyJacksonJson
[2019-08-28 12:35:27.802] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71)] : Using JSON decoding codec LegacyJacksonJson
[2019-08-28 12:35:28.025] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80)] : Using XML encoding codec XStreamXml
[2019-08-28 12:35:28.025] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81)] : Using XML decoding codec XStreamXml
[2019-08-28 12:35:28.151] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:63)] :  [DUBBO] Destroy reference: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&default.check=false&default.timeout=5000&dubbo=2.6.2&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=6056&register.ip=192.168.1.12&side=consumer&timestamp=1566966918886, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 12:35:28.342] [INFO ] - [Thread-8][ com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] : Resolving eureka endpoints via configuration
[2019-08-28 12:35:28.373] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958)] : Disable delta property : false
[2019-08-28 12:35:28.374] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:959)] : Single vip registry refresh property : null
[2019-08-28 12:35:28.374] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960)] : Force full registry fetch : false
[2019-08-28 12:35:28.374] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:961)] : Application is null : false
[2019-08-28 12:35:28.374] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:962)] : Registered Applications size is zero : true
[2019-08-28 12:35:28.375] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:964)] : Application version is -1: true
[2019-08-28 12:35:28.375] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1047)] : Getting all instance registry info from the eureka server
[2019-08-28 12:35:30.491] [ERROR] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83)] : Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$92bc2109.CGLIB$eurekaClient$1(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$92bc2109$$FastClassBySpringCGLIB$$ad7d66e4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:365)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$92bc2109.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:583)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1246)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:535)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:193)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 65 common frames omitted
[2019-08-28 12:35:30.493] [WARN ] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:130)] : Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2019-08-28 12:35:30.494] [ERROR] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:972)] : DiscoveryClient_BITTRADE-C2C/192.168.1.12:-1:bittrade-c2c:@project.version@ - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$92bc2109.CGLIB$eurekaClient$1(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$92bc2109$$FastClassBySpringCGLIB$$ad7d66e4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:365)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$92bc2109.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:583)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1246)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:535)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:193)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
[2019-08-28 12:35:30.495] [WARN ] - [Thread-8][ com.netflix.discovery.DiscoveryClient$1.get(DiscoveryClient.java:290)] : Using default backup registry implementation which does not do anything.
[2019-08-28 12:35:30.499] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1264)] : Starting heartbeat executor: renew interval is: 30
[2019-08-28 12:35:30.505] [INFO ] - [Thread-8][ com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60)] : InstanceInfoReplicator onDemand update allowed rate per min is 4
[2019-08-28 12:35:30.515] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:449)] : Discovery Client initialized at timestamp 1566966930512 with initial instances count: 0
[2019-08-28 12:35:30.533] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:888)] : Shutting down DiscoveryClient ...
[2019-08-28 12:35:33.535] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:922)] : Unregistering ...
[2019-08-28 12:35:35.563] [ERROR] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83)] : Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:923)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:901)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:246)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:494)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 46 common frames omitted
[2019-08-28 12:35:35.564] [WARN ] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:130)] : Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2019-08-28 12:35:35.565] [ERROR] - [Thread-8][ com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:926)] : DiscoveryClient_BITTRADE-C2C/192.168.1.12:-1:bittrade-c2c:@project.version@ - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:923)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:901)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:246)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:494)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
[2019-08-28 12:35:35.590] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:911)] : Completed shut down of DiscoveryClient
[2019-08-28 12:35:35.607] [INFO ] - [Thread-8][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:1948)] : {dataSource-1} closing ...
[2019-08-28 12:35:35.613] [INFO ] - [Thread-8][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:2020)] : {dataSource-1} closed
[2019-08-28 12:38:42.192] [INFO ] - [main][?#?:?] : using logger: com.alibaba.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[2019-08-28 12:38:42.200] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-28 12:38:42.205] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {}
[2019-08-28 12:38:42.486] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6c61a903: startup date [Wed Aug 28 12:38:42 CST 2019]; root of context hierarchy
[2019-08-28 12:38:42.881] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-28 12:38:42.951] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8b5327ea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:38:43.126] [INFO ] - [pool-1-thread-1][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$1.run(AwaitingNonWebApplicationListener.java:61)] :  [Dubbo] Current Spring Boot Application is await...
[2019-08-28 12:38:43.550] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-28 12:38:43.551] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {dubbo.application.id=service-consumer, dubbo.application.name=service-consumer, dubbo.consumer.check=false, dubbo.consumer.timeout=5000, dubbo.monitor=, dubbo.protocol.id=dubbo, dubbo.protocol.name=dubbo, dubbo.protocol.port=20884, dubbo.provider.timeout=5000, dubbo.registry.address=N/A, dubbo.registry.check=false, dubbo.registry.id=my-registry, dubbo.registry.protocol=zookeeper, dubbo.scan=}
[2019-08-28 12:38:43.596] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : The following profiles are active: common,data,eureka,dubbo_provider,dubbo_consumer
[2019-08-28 12:38:43.604] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Refreshing org.springframework.web.context.support.GenericWebApplicationContext@59fc684e: startup date [Wed Aug 28 12:38:43 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6c61a903
[2019-08-28 12:38:44.890] [WARN ] - [main][ org.mybatis.logging.Logger.warn(Logger.java:44)] : No MyBatis mapper was found in '[com.baomidou.cloud.service.*.mapper*]' package. Please check your configuration.
[2019-08-28 12:38:45.592] [INFO ] - [main][ org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:172)] : Multiple Spring Data modules found, entering strict repository configuration mode!
[2019-08-28 12:38:45.941] [WARN ] - [main][ com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans(ServiceAnnotationBeanPostProcessor.java:155)] :  [DUBBO] No Spring Bean annotating Dubbo's @Service was found under package[com.bittrade.c2c], dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 12:38:46.452] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : BeanFactory id=61352edb-e99a-3c04-9bd9-f50ca066a043
[2019-08-28 12:38:46.640] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-28 12:38:46.904] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:38:46.917] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionProperties' of type [com.core.framework.props.TransactionProperties$$EnhancerBySpringCGLIB$$8081e793] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:38:46.933] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$88e51a5f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:38:46.937] [INFO ] - [main][ com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource(DruidDataSourceAutoConfigure.java:56)] : Init DruidDataSource
[2019-08-28 12:38:47.042] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:38:47.167] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003)] : {dataSource-1} inited
[2019-08-28 12:38:47.168] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:38:47.199] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:38:47.211] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$$EnhancerBySpringCGLIB$$3ad1ff7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:38:47.230] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:38:47.237] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:38:47.245] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration$$EnhancerBySpringCGLIB$$1c39bd5c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:38:47.285] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:38:47.286] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionConfig' of type [com.core.framework.config.TransactionConfig$$EnhancerBySpringCGLIB$$753da238] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:38:47.315] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'defaultPointcutAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:38:47.334] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6f3924ed] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:38:47.633] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' of type [com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration$$EnhancerBySpringCGLIB$$7e3aca5f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:38:47.646] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:38:47.656] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:38:47.660] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:38:47.663] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:38:47.668] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:38:47.722] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8b5327ea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 12:38:52.031] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'clientInboundChannelExecutor'
[2019-08-28 12:38:52.058] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'clientOutboundChannelExecutor'
[2019-08-28 12:38:52.492] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService
[2019-08-28 12:38:52.721] [INFO ] - [main][ com.core.framework.config.redis.JedisClusterConfig.getJedisCluster(JedisClusterConfig.java:35)] : 进入redis集群初始化方法：访问集群地址为：[154.222.138.5:7000, 154.222.138.5:7001, 154.222.138.5:7002, 154.222.138.5:7003, 154.222.138.5:7004, 154.222.138.5:7005]
[2019-08-28 12:38:54.129] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyTradeServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 12:38:55.434] [WARN ] - [main][ com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:98)] :  [DUBBO] Failed to start NettyClient HAHE/192.168.1.12 connect to the server localhost/127.0.0.1:20881 (check == false, ignore and retry later!), cause: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=1152&register.ip=192.168.1.12&side=consumer&timestamp=1566967134130) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=1152&register.ip=192.168.1.12&side=consumer&timestamp=1566967134130) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:89)
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.<init>(NettyClient.java:59)
	at com.alibaba.dubbo.remoting.transport.netty.NettyTransporter.connect(NettyTransporter.java:37)
	at com.alibaba.dubbo.remoting.Transporter$Adaptive.connect(Transporter$Adaptive.java)
	at com.alibaba.dubbo.remoting.Transporters.connect(Transporters.java:75)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchanger.connect(HeaderExchanger.java:39)
	at com.alibaba.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:109)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.initClient(DubboProtocol.java:409)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getSharedClient(DubboProtocol.java:377)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getClients(DubboProtocol.java:354)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.refer(DubboProtocol.java:336)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:67)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:65)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:108)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:394)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:333)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:163)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:66)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceFieldElement.inject(ReferenceAnnotationBeanPostProcessor.java:367)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.postProcessPropertyValues(ReferenceAnnotationBeanPostProcessor.java:92)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:759)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:548)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:386)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:89)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:41)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:541)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:763)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:463)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:209)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-08-28 12:38:55.600] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 12:38:56.772] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-28 12:38:56.773] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-28 12:38:56.800] [INFO ] - [main][ com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281)] : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@295f2d1b
[2019-08-28 12:38:57.031] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/sendMessage],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.sendMessage(com.bittrade.c2c.vo.SendVo)
[2019-08-28 12:38:57.032] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/sendOrder],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.pullOrderDetail(com.bittrade.c2c.vo.SendOrderVo)
[2019-08-28 12:38:57.033] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/pullUnreadMessage],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.pullMessage(java.lang.Long)
[2019-08-28 12:38:57.045] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.listAdverts(com.core.common.DTO.PageDTO<com.bittrade.pojo.dto.TAdvertInfoDTO>,com.bittrade.pojo.vo.QueryAdvertVO,com.core.web.constant.entity.LoginUser)
[2019-08-28 12:38:57.046] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/publish_advert],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.publishAdvert(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.TAdvertInfoDTO)
[2019-08-28 12:38:57.047] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts/details/{advert_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.getAdvertDetails(java.lang.Long)
[2019-08-28 12:38:57.049] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts/users/{coin_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.listAdvertsUsers(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.AdvertUserVO>,java.lang.Long,com.core.web.constant.entity.LoginUser)
[2019-08-28 12:38:57.049] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/place_advert_order/{advert_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.placeAdvertOrder(java.lang.Long,java.math.BigDecimal,java.lang.String,com.core.web.constant.entity.LoginUser)
[2019-08-28 12:38:57.050] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/revoke/{advert_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.revokeAdverts(java.lang.Long,com.core.web.constant.entity.LoginUser)
[2019-08-28 12:38:57.051] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/suspend],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.suspendAdverts(java.util.List<java.lang.Long>,com.core.web.constant.entity.LoginUser)
[2019-08-28 12:38:57.052] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 12:38:57.053] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 12:38:57.053] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 12:38:57.054] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 12:38:57.055] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 12:38:57.056] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 12:38:57.057] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 12:38:57.058] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 12:38:57.058] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 12:38:57.059] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 12:38:57.060] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 12:38:57.061] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 12:38:57.061] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 12:38:57.062] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 12:38:57.063] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 12:38:57.070] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/details/{order_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.getAdvertOrderDetails(java.lang.Long)
[2019-08-28 12:38:57.070] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/already_cancel],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.alreadyCancelAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 12:38:57.071] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/already_complete],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.alreadyCompleteAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 12:38:57.072] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/cancel/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.cancelAdvertOrder(java.lang.Long)
[2019-08-28 12:38:57.073] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/click_already_receipt/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.clickAlreadyReceipt(java.lang.Long)
[2019-08-28 12:38:57.073] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/no_complete],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.noCompleteAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 12:38:57.074] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/click_already_paid/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.clickAlreadyPaid(java.lang.Long)
[2019-08-28 12:38:57.075] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 12:38:57.076] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 12:38:57.076] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 12:38:57.077] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 12:38:57.077] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 12:38:57.078] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 12:38:57.079] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 12:38:57.079] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 12:38:57.080] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 12:38:57.081] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 12:38:57.081] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 12:38:57.082] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 12:38:57.083] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 12:38:57.083] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 12:38:57.084] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 12:38:57.090] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/conversionTotal],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.ConversionVo> com.common.bittrade.controller.TLegalCurrencyAccountController.totalConversion(com.core.web.constant.entity.LoginUser)
[2019-08-28 12:38:57.091] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/detail],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetsVO>> com.common.bittrade.controller.TLegalCurrencyAccountController.detail(com.core.web.constant.entity.LoginUser)
[2019-08-28 12:38:57.092] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getAssetsFeign],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.math.BigDecimal com.common.bittrade.controller.TLegalCurrencyAccountController.getAssetsFeign(java.lang.Long)
[2019-08-28 12:38:57.092] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/availableBalanceFeign],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.lang.String com.common.bittrade.controller.TLegalCurrencyAccountController.availableBalanceFeign(java.lang.Long,java.lang.String)
[2019-08-28 12:38:57.093] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 12:38:57.094] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 12:38:57.094] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 12:38:57.095] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 12:38:57.096] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 12:38:57.096] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 12:38:57.097] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 12:38:57.098] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 12:38:57.098] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 12:38:57.099] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 12:38:57.099] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 12:38:57.100] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 12:38:57.101] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 12:38:57.101] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 12:38:57.102] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 12:38:57.106] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/legalCurrency_coins],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.common.bittrade.controller.TLegalCurrencyCoinController.listLegalCurrencyCoins()
[2019-08-28 12:38:57.107] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 12:38:57.108] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 12:38:57.108] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 12:38:57.109] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 12:38:57.110] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 12:38:57.110] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 12:38:57.111] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 12:38:57.112] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 12:38:57.112] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 12:38:57.113] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 12:38:57.114] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 12:38:57.114] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 12:38:57.115] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 12:38:57.116] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 12:38:57.116] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 12:38:57.121] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/queryType],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetRecordTypeVO>> com.common.bittrade.controller.TLegalCurrencyRecordController.queryTypeForFund()
[2019-08-28 12:38:57.122] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/queryAccountRecord],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.RecordVO>> com.common.bittrade.controller.TLegalCurrencyRecordController.queryAccountRecord(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.AccountTypeDto)
[2019-08-28 12:38:57.122] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 12:38:57.123] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 12:38:57.124] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 12:38:57.124] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 12:38:57.125] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 12:38:57.126] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 12:38:57.126] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 12:38:57.127] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 12:38:57.127] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 12:38:57.128] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 12:38:57.129] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 12:38:57.129] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 12:38:57.130] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 12:38:57.131] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 12:38:57.131] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 12:38:57.136] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/getList],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.model.WCoin>> com.common.bittrade.controller.WCoinController.getList()
[2019-08-28 12:38:57.137] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/rechargecoinlist],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO com.common.bittrade.controller.WCoinController.rechargecoinlist()
[2019-08-28 12:38:57.138] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/Withdrawcoinlist],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO com.common.bittrade.controller.WCoinController.withdrawcoinlist()
[2019-08-28 12:38:57.140] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccount/conversionTotal],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.ConversionVo> com.common.bittrade.controller.WWalletAccountController.totalConversion(com.core.web.constant.entity.LoginUser)
[2019-08-28 12:38:57.141] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccount/detail],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetsVO>> com.common.bittrade.controller.WWalletAccountController.detail(com.core.web.constant.entity.LoginUser)
[2019-08-28 12:38:57.143] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryTypeForFund],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetRecordTypeVO>> com.common.bittrade.controller.WWalletAccountRecordController.queryTypeForFund()
[2019-08-28 12:38:57.144] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryCurrencies],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.model.WCoin>> com.common.bittrade.controller.WWalletAccountRecordController.queryCurrencies()
[2019-08-28 12:38:57.145] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryFundAccountRecord],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.RecordVO>> com.common.bittrade.controller.WWalletAccountRecordController.queryFundAccountRecord(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.AccountTypeDto)
[2019-08-28 12:38:57.152] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
[2019-08-28 12:38:57.153] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
[2019-08-28 12:38:57.154] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
[2019-08-28 12:38:57.160] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2019-08-28 12:38:57.160] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2019-08-28 12:38:57.399] [WARN ] - [DubboClientReconnectTimer-thread-1][ com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:171)] :  [DUBBO] client reconnect to localhost:20881 find error . url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=1152&register.ip=192.168.1.12&side=consumer&timestamp=1566967134130, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=1152&register.ip=192.168.1.12&side=consumer&timestamp=1566967134130) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:156)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	... 3 common frames omitted
[2019-08-28 12:38:58.417] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Exposing 2 endpoint(s) beneath base path '/actuator'
[2019-08-28 12:38:58.449] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2019-08-28 12:38:58.451] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2019-08-28 12:38:58.452] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2019-08-28 12:38:58.765] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'messageBrokerTaskScheduler'
[2019-08-28 12:38:58.858] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped URL path [/c2c/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
[2019-08-28 12:38:58.882] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'brokerChannelExecutor'
[2019-08-28 12:38:59.201] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[2019-08-28 12:38:59.674] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@59fc684e: startup date [Wed Aug 28 12:38:43 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6c61a903
[2019-08-28 12:38:59.755] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Detected @ExceptionHandler methods in globalExceptionHandler
[2019-08-28 12:39:00.111] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-28 12:39:00.112] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-28 12:39:01.512] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting beans in phase 0
[2019-08-28 12:39:01.513] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting beans in phase 2147483647
[2019-08-28 12:39:01.513] [INFO ] - [main][ springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:151)] : Context refreshed
[2019-08-28 12:39:01.548] [INFO ] - [main][ springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:154)] : Found 1 custom documentation plugin(s)
[2019-08-28 12:39:01.603] [INFO ] - [main][ springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)] : Scanning for api listing references
[2019-08-28 12:39:02.097] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting...
[2019-08-28 12:39:02.097] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
[2019-08-28 12:39:02.099] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Started.
[2019-08-28 12:39:02.119] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Started AdvertInfoTester in 20.263 seconds (JVM running for 22.054)
[2019-08-28 12:39:02.507] [INFO ] - [Thread-2][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$2.run(AwaitingNonWebApplicationListener.java:83)] :  [Dubbo] Current Spring Boot Application is about to shutdown...
[2019-08-28 12:39:02.509] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:64)] :  [DUBBO] Close all registries [], dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 12:39:02.510] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(DubboProtocol.java:438)] :  [DUBBO] Close dubbo connect: 192.168.1.12:0-->localhost/127.0.0.1:20881, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 12:39:02.510] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:63)] :  [DUBBO] Destroy reference: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&default.check=false&default.timeout=5000&dubbo=2.6.2&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=1152&register.ip=192.168.1.12&side=consumer&timestamp=1566967134130, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 12:39:02.601] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:349)] : Initializing Eureka in region us-east-1
[2019-08-28 12:39:02.914] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70)] : Using JSON encoding codec LegacyJacksonJson
[2019-08-28 12:39:02.914] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71)] : Using JSON decoding codec LegacyJacksonJson
[2019-08-28 12:39:03.142] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80)] : Using XML encoding codec XStreamXml
[2019-08-28 12:39:03.143] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81)] : Using XML decoding codec XStreamXml
[2019-08-28 12:39:03.408] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:63)] :  [DUBBO] Destroy reference: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyService?application=service-consumer&default.check=false&default.timeout=5000&dubbo=2.6.2&interface=com.bittrade.currency.api.service.ITCurrencyService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getCurrencies,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,findAllLegalCurrency,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,findUsableCurrency,updateById,pageMaps,listByMap,getByPK&pid=1152&register.ip=192.168.1.12&side=consumer&timestamp=1566967135601, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 12:39:03.444] [INFO ] - [Thread-8][ com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] : Resolving eureka endpoints via configuration
[2019-08-28 12:39:03.482] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958)] : Disable delta property : false
[2019-08-28 12:39:03.483] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:959)] : Single vip registry refresh property : null
[2019-08-28 12:39:03.483] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960)] : Force full registry fetch : false
[2019-08-28 12:39:03.483] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:961)] : Application is null : false
[2019-08-28 12:39:03.483] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:962)] : Registered Applications size is zero : true
[2019-08-28 12:39:03.484] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:964)] : Application version is -1: true
[2019-08-28 12:39:03.484] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1047)] : Getting all instance registry info from the eureka server
[2019-08-28 12:39:05.615] [ERROR] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83)] : Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$92bc2109.CGLIB$eurekaClient$0(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$92bc2109$$FastClassBySpringCGLIB$$ad7d66e4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:365)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$92bc2109.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:583)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1246)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:535)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:193)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 65 common frames omitted
[2019-08-28 12:39:05.617] [WARN ] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:130)] : Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2019-08-28 12:39:05.619] [ERROR] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:972)] : DiscoveryClient_BITTRADE-C2C/192.168.1.12:-1:bittrade-c2c:@project.version@ - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$92bc2109.CGLIB$eurekaClient$0(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$92bc2109$$FastClassBySpringCGLIB$$ad7d66e4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:365)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$92bc2109.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:583)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1246)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:535)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:193)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
[2019-08-28 12:39:05.620] [WARN ] - [Thread-8][ com.netflix.discovery.DiscoveryClient$1.get(DiscoveryClient.java:290)] : Using default backup registry implementation which does not do anything.
[2019-08-28 12:39:05.623] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1264)] : Starting heartbeat executor: renew interval is: 30
[2019-08-28 12:39:05.630] [INFO ] - [Thread-8][ com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60)] : InstanceInfoReplicator onDemand update allowed rate per min is 4
[2019-08-28 12:39:05.640] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:449)] : Discovery Client initialized at timestamp 1566967145636 with initial instances count: 0
[2019-08-28 12:39:05.661] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:888)] : Shutting down DiscoveryClient ...
[2019-08-28 12:39:08.663] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:922)] : Unregistering ...
[2019-08-28 12:39:10.681] [ERROR] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83)] : Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:923)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:901)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:246)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:494)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 46 common frames omitted
[2019-08-28 12:39:10.682] [WARN ] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:130)] : Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2019-08-28 12:39:10.683] [ERROR] - [Thread-8][ com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:926)] : DiscoveryClient_BITTRADE-C2C/192.168.1.12:-1:bittrade-c2c:@project.version@ - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:923)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:901)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:246)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:494)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
[2019-08-28 12:39:10.705] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:911)] : Completed shut down of DiscoveryClient
[2019-08-28 12:39:10.725] [INFO ] - [Thread-8][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:1948)] : {dataSource-1} closing ...
[2019-08-28 12:39:10.730] [INFO ] - [Thread-8][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:2020)] : {dataSource-1} closed
[2019-08-28 14:10:01.060] [INFO ] - [main][?#?:?] : using logger: com.alibaba.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[2019-08-28 14:10:01.068] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-28 14:10:01.074] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {}
[2019-08-28 14:10:01.368] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6c61a903: startup date [Wed Aug 28 14:10:01 CST 2019]; root of context hierarchy
[2019-08-28 14:10:01.774] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-28 14:10:01.847] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8b5327ea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:10:02.022] [INFO ] - [pool-1-thread-1][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$1.run(AwaitingNonWebApplicationListener.java:61)] :  [Dubbo] Current Spring Boot Application is await...
[2019-08-28 14:10:02.444] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-28 14:10:02.445] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {dubbo.application.id=service-consumer, dubbo.application.name=service-consumer, dubbo.consumer.check=false, dubbo.consumer.timeout=5000, dubbo.monitor=, dubbo.protocol.id=dubbo, dubbo.protocol.name=dubbo, dubbo.protocol.port=20884, dubbo.provider.timeout=5000, dubbo.registry.address=N/A, dubbo.registry.check=false, dubbo.registry.id=my-registry, dubbo.registry.protocol=zookeeper, dubbo.scan=}
[2019-08-28 14:10:02.491] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : The following profiles are active: common,data,eureka,dubbo_provider,dubbo_consumer
[2019-08-28 14:10:02.499] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Refreshing org.springframework.web.context.support.GenericWebApplicationContext@59fc684e: startup date [Wed Aug 28 14:10:02 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6c61a903
[2019-08-28 14:10:03.796] [WARN ] - [main][ org.mybatis.logging.Logger.warn(Logger.java:44)] : No MyBatis mapper was found in '[com.baomidou.cloud.service.*.mapper*]' package. Please check your configuration.
[2019-08-28 14:10:04.513] [INFO ] - [main][ org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:172)] : Multiple Spring Data modules found, entering strict repository configuration mode!
[2019-08-28 14:10:04.876] [WARN ] - [main][ com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans(ServiceAnnotationBeanPostProcessor.java:155)] :  [DUBBO] No Spring Bean annotating Dubbo's @Service was found under package[com.bittrade.c2c], dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:10:05.355] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : BeanFactory id=61352edb-e99a-3c04-9bd9-f50ca066a043
[2019-08-28 14:10:05.545] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-28 14:10:05.823] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:10:05.837] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionProperties' of type [com.core.framework.props.TransactionProperties$$EnhancerBySpringCGLIB$$8081e793] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:10:05.852] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$88e51a5f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:10:05.856] [INFO ] - [main][ com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource(DruidDataSourceAutoConfigure.java:56)] : Init DruidDataSource
[2019-08-28 14:10:05.967] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:10:06.089] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003)] : {dataSource-1} inited
[2019-08-28 14:10:06.090] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:10:06.121] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:10:06.132] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$$EnhancerBySpringCGLIB$$3ad1ff7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:10:06.149] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:10:06.158] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:10:06.166] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration$$EnhancerBySpringCGLIB$$1c39bd5c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:10:06.202] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:10:06.204] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionConfig' of type [com.core.framework.config.TransactionConfig$$EnhancerBySpringCGLIB$$753da238] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:10:06.227] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'defaultPointcutAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:10:06.252] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6f3924ed] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:10:06.558] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' of type [com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration$$EnhancerBySpringCGLIB$$7e3aca5f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:10:06.576] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:10:06.587] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:10:06.590] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:10:06.594] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:10:06.597] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:10:06.652] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8b5327ea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:10:11.110] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'clientInboundChannelExecutor'
[2019-08-28 14:10:11.138] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'clientOutboundChannelExecutor'
[2019-08-28 14:10:11.583] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService
[2019-08-28 14:10:11.812] [INFO ] - [main][ com.core.framework.config.redis.JedisClusterConfig.getJedisCluster(JedisClusterConfig.java:35)] : 进入redis集群初始化方法：访问集群地址为：[154.222.138.5:7000, 154.222.138.5:7001, 154.222.138.5:7002, 154.222.138.5:7003, 154.222.138.5:7004, 154.222.138.5:7005]
[2019-08-28 14:10:13.118] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyTradeServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:10:14.402] [WARN ] - [main][ com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:98)] :  [DUBBO] Failed to start NettyClient HAHE/192.168.1.12 connect to the server localhost/127.0.0.1:20881 (check == false, ignore and retry later!), cause: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=1644&register.ip=192.168.1.12&side=consumer&timestamp=1566972613119) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=1644&register.ip=192.168.1.12&side=consumer&timestamp=1566972613119) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:89)
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.<init>(NettyClient.java:59)
	at com.alibaba.dubbo.remoting.transport.netty.NettyTransporter.connect(NettyTransporter.java:37)
	at com.alibaba.dubbo.remoting.Transporter$Adaptive.connect(Transporter$Adaptive.java)
	at com.alibaba.dubbo.remoting.Transporters.connect(Transporters.java:75)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchanger.connect(HeaderExchanger.java:39)
	at com.alibaba.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:109)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.initClient(DubboProtocol.java:409)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getSharedClient(DubboProtocol.java:377)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getClients(DubboProtocol.java:354)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.refer(DubboProtocol.java:336)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:108)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:67)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:65)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:394)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:333)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:163)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:66)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceFieldElement.inject(ReferenceAnnotationBeanPostProcessor.java:367)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.postProcessPropertyValues(ReferenceAnnotationBeanPostProcessor.java:92)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:759)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:548)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:386)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:89)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:41)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:541)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:763)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:463)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:209)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-08-28 14:10:14.576] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:10:15.796] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-28 14:10:15.797] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-28 14:10:15.825] [INFO ] - [main][ com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281)] : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@3ea2f72e
[2019-08-28 14:10:16.060] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/sendOrder],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.pullOrderDetail(com.bittrade.c2c.vo.SendOrderVo)
[2019-08-28 14:10:16.062] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/pullUnreadMessage],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.pullMessage(java.lang.Long)
[2019-08-28 14:10:16.063] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/sendMessage],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.sendMessage(com.bittrade.c2c.vo.SendVo)
[2019-08-28 14:10:16.075] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.listAdverts(com.core.common.DTO.PageDTO<com.bittrade.pojo.dto.TAdvertInfoDTO>,com.bittrade.pojo.vo.QueryAdvertVO,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:10:16.076] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/revoke/{advert_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.revokeAdverts(java.lang.Long,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:10:16.077] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts/details/{advert_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.getAdvertDetails(java.lang.Long)
[2019-08-28 14:10:16.078] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts/users/{coin_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.listAdvertsUsers(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.AdvertUserVO>,java.lang.Long,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:10:16.079] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/suspend],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.suspendAdverts(java.util.List<java.lang.Long>,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:10:16.080] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/place_advert_order/{advert_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.placeAdvertOrder(java.lang.Long,java.math.BigDecimal,java.lang.String,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:10:16.081] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/publish_advert],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.publishAdvert(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.TAdvertInfoDTO)
[2019-08-28 14:10:16.082] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 14:10:16.083] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 14:10:16.084] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 14:10:16.085] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 14:10:16.085] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 14:10:16.086] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 14:10:16.087] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 14:10:16.088] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 14:10:16.089] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 14:10:16.089] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 14:10:16.090] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 14:10:16.091] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 14:10:16.092] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 14:10:16.093] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 14:10:16.094] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 14:10:16.101] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/details/{order_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.getAdvertOrderDetails(java.lang.Long)
[2019-08-28 14:10:16.103] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/already_cancel],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.alreadyCancelAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:10:16.103] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/no_complete],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.noCompleteAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:10:16.104] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/cancel/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.cancelAdvertOrder(java.lang.Long)
[2019-08-28 14:10:16.105] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/click_already_receipt/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.clickAlreadyReceipt(java.lang.Long)
[2019-08-28 14:10:16.106] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/already_complete],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.alreadyCompleteAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:10:16.107] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/click_already_paid/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.clickAlreadyPaid(java.lang.Long)
[2019-08-28 14:10:16.107] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 14:10:16.108] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 14:10:16.109] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 14:10:16.109] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 14:10:16.110] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 14:10:16.111] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 14:10:16.112] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 14:10:16.112] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 14:10:16.113] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 14:10:16.114] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 14:10:16.114] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 14:10:16.115] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 14:10:16.116] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 14:10:16.116] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 14:10:16.117] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 14:10:16.123] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/availableBalanceFeign],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.lang.String com.common.bittrade.controller.TLegalCurrencyAccountController.availableBalanceFeign(java.lang.Long,java.lang.String)
[2019-08-28 14:10:16.124] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getAssetsFeign],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.math.BigDecimal com.common.bittrade.controller.TLegalCurrencyAccountController.getAssetsFeign(java.lang.Long)
[2019-08-28 14:10:16.125] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/conversionTotal],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.ConversionVo> com.common.bittrade.controller.TLegalCurrencyAccountController.totalConversion(com.core.web.constant.entity.LoginUser)
[2019-08-28 14:10:16.126] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/detail],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetsVO>> com.common.bittrade.controller.TLegalCurrencyAccountController.detail(com.core.web.constant.entity.LoginUser)
[2019-08-28 14:10:16.126] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 14:10:16.127] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 14:10:16.128] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 14:10:16.129] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 14:10:16.129] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 14:10:16.130] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 14:10:16.131] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 14:10:16.131] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 14:10:16.132] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 14:10:16.133] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 14:10:16.133] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 14:10:16.134] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 14:10:16.135] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 14:10:16.135] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 14:10:16.136] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 14:10:16.140] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/legalCurrency_coins],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.common.bittrade.controller.TLegalCurrencyCoinController.listLegalCurrencyCoins()
[2019-08-28 14:10:16.141] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 14:10:16.142] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 14:10:16.142] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 14:10:16.143] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 14:10:16.144] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 14:10:16.144] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 14:10:16.145] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 14:10:16.146] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 14:10:16.147] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 14:10:16.147] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 14:10:16.148] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 14:10:16.149] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 14:10:16.149] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 14:10:16.150] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 14:10:16.151] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 14:10:16.156] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/queryAccountRecord],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.RecordVO>> com.common.bittrade.controller.TLegalCurrencyRecordController.queryAccountRecord(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.AccountTypeDto)
[2019-08-28 14:10:16.157] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/queryType],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetRecordTypeVO>> com.common.bittrade.controller.TLegalCurrencyRecordController.queryTypeForFund()
[2019-08-28 14:10:16.158] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 14:10:16.159] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 14:10:16.159] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 14:10:16.160] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 14:10:16.161] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 14:10:16.162] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 14:10:16.162] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 14:10:16.163] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 14:10:16.164] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 14:10:16.165] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 14:10:16.166] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 14:10:16.167] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 14:10:16.168] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 14:10:16.168] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 14:10:16.169] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 14:10:16.174] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/getList],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.model.WCoin>> com.common.bittrade.controller.WCoinController.getList()
[2019-08-28 14:10:16.175] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/Withdrawcoinlist],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO com.common.bittrade.controller.WCoinController.withdrawcoinlist()
[2019-08-28 14:10:16.176] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/rechargecoinlist],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO com.common.bittrade.controller.WCoinController.rechargecoinlist()
[2019-08-28 14:10:16.177] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccount/conversionTotal],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.ConversionVo> com.common.bittrade.controller.WWalletAccountController.totalConversion(com.core.web.constant.entity.LoginUser)
[2019-08-28 14:10:16.178] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccount/detail],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetsVO>> com.common.bittrade.controller.WWalletAccountController.detail(com.core.web.constant.entity.LoginUser)
[2019-08-28 14:10:16.180] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryFundAccountRecord],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.RecordVO>> com.common.bittrade.controller.WWalletAccountRecordController.queryFundAccountRecord(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.AccountTypeDto)
[2019-08-28 14:10:16.181] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryTypeForFund],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetRecordTypeVO>> com.common.bittrade.controller.WWalletAccountRecordController.queryTypeForFund()
[2019-08-28 14:10:16.181] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryCurrencies],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.model.WCoin>> com.common.bittrade.controller.WWalletAccountRecordController.queryCurrencies()
[2019-08-28 14:10:16.185] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
[2019-08-28 14:10:16.186] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
[2019-08-28 14:10:16.187] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
[2019-08-28 14:10:16.192] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2019-08-28 14:10:16.192] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2019-08-28 14:10:16.371] [WARN ] - [DubboClientReconnectTimer-thread-1][ com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:171)] :  [DUBBO] client reconnect to localhost:20881 find error . url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=1644&register.ip=192.168.1.12&side=consumer&timestamp=1566972613119, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=1644&register.ip=192.168.1.12&side=consumer&timestamp=1566972613119) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:156)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	... 3 common frames omitted
[2019-08-28 14:10:17.542] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Exposing 2 endpoint(s) beneath base path '/actuator'
[2019-08-28 14:10:17.572] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2019-08-28 14:10:17.573] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2019-08-28 14:10:17.574] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2019-08-28 14:10:17.864] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'messageBrokerTaskScheduler'
[2019-08-28 14:10:17.956] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped URL path [/c2c/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
[2019-08-28 14:10:17.980] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'brokerChannelExecutor'
[2019-08-28 14:10:18.301] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[2019-08-28 14:10:18.784] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@59fc684e: startup date [Wed Aug 28 14:10:02 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6c61a903
[2019-08-28 14:10:18.869] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Detected @ExceptionHandler methods in globalExceptionHandler
[2019-08-28 14:10:19.246] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-28 14:10:19.246] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-28 14:10:20.682] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting beans in phase 0
[2019-08-28 14:10:20.682] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting beans in phase 2147483647
[2019-08-28 14:10:20.683] [INFO ] - [main][ springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:151)] : Context refreshed
[2019-08-28 14:10:20.724] [INFO ] - [main][ springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:154)] : Found 1 custom documentation plugin(s)
[2019-08-28 14:10:20.785] [INFO ] - [main][ springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)] : Scanning for api listing references
[2019-08-28 14:10:21.286] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting...
[2019-08-28 14:10:21.286] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
[2019-08-28 14:10:21.288] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Started.
[2019-08-28 14:10:21.307] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Started AdvertInfoTester in 20.572 seconds (JVM running for 22.369)
[2019-08-28 14:10:21.861] [INFO ] - [Thread-2][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$2.run(AwaitingNonWebApplicationListener.java:83)] :  [Dubbo] Current Spring Boot Application is about to shutdown...
[2019-08-28 14:10:21.864] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:64)] :  [DUBBO] Close all registries [], dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:10:21.865] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(DubboProtocol.java:438)] :  [DUBBO] Close dubbo connect: 192.168.1.12:0-->localhost/127.0.0.1:20881, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:10:21.865] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:63)] :  [DUBBO] Destroy reference: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyService?application=service-consumer&default.check=false&default.timeout=5000&dubbo=2.6.2&interface=com.bittrade.currency.api.service.ITCurrencyService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getCurrencies,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,findAllLegalCurrency,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,findUsableCurrency,updateById,pageMaps,listByMap,getByPK&pid=1644&register.ip=192.168.1.12&side=consumer&timestamp=1566972614576, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:10:21.967] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:349)] : Initializing Eureka in region us-east-1
[2019-08-28 14:10:22.304] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70)] : Using JSON encoding codec LegacyJacksonJson
[2019-08-28 14:10:22.304] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71)] : Using JSON decoding codec LegacyJacksonJson
[2019-08-28 14:10:22.386] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:63)] :  [DUBBO] Destroy reference: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&default.check=false&default.timeout=5000&dubbo=2.6.2&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=1644&register.ip=192.168.1.12&side=consumer&timestamp=1566972613119, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:10:22.542] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80)] : Using XML encoding codec XStreamXml
[2019-08-28 14:10:22.543] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81)] : Using XML decoding codec XStreamXml
[2019-08-28 14:10:22.857] [INFO ] - [Thread-8][ com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] : Resolving eureka endpoints via configuration
[2019-08-28 14:10:22.891] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958)] : Disable delta property : false
[2019-08-28 14:10:22.892] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:959)] : Single vip registry refresh property : null
[2019-08-28 14:10:22.892] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960)] : Force full registry fetch : false
[2019-08-28 14:10:22.892] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:961)] : Application is null : false
[2019-08-28 14:10:22.892] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:962)] : Registered Applications size is zero : true
[2019-08-28 14:10:22.893] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:964)] : Application version is -1: true
[2019-08-28 14:10:22.893] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1047)] : Getting all instance registry info from the eureka server
[2019-08-28 14:10:25.020] [ERROR] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83)] : Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$92bc2109.CGLIB$eurekaClient$0(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$92bc2109$$FastClassBySpringCGLIB$$ad7d66e4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:365)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$92bc2109.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:583)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1246)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:535)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:193)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 65 common frames omitted
[2019-08-28 14:10:25.022] [WARN ] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:130)] : Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2019-08-28 14:10:25.023] [ERROR] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:972)] : DiscoveryClient_BITTRADE-C2C/192.168.1.12:-1:bittrade-c2c:@project.version@ - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$92bc2109.CGLIB$eurekaClient$0(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$92bc2109$$FastClassBySpringCGLIB$$ad7d66e4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:365)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$92bc2109.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:583)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1246)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:535)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:193)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
[2019-08-28 14:10:25.025] [WARN ] - [Thread-8][ com.netflix.discovery.DiscoveryClient$1.get(DiscoveryClient.java:290)] : Using default backup registry implementation which does not do anything.
[2019-08-28 14:10:25.028] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1264)] : Starting heartbeat executor: renew interval is: 30
[2019-08-28 14:10:25.035] [INFO ] - [Thread-8][ com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60)] : InstanceInfoReplicator onDemand update allowed rate per min is 4
[2019-08-28 14:10:25.044] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:449)] : Discovery Client initialized at timestamp 1566972625041 with initial instances count: 0
[2019-08-28 14:10:25.060] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:888)] : Shutting down DiscoveryClient ...
[2019-08-28 14:10:28.063] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:922)] : Unregistering ...
[2019-08-28 14:10:30.079] [ERROR] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83)] : Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:923)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:901)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:246)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:494)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 46 common frames omitted
[2019-08-28 14:10:30.081] [WARN ] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:130)] : Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2019-08-28 14:10:30.082] [ERROR] - [Thread-8][ com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:926)] : DiscoveryClient_BITTRADE-C2C/192.168.1.12:-1:bittrade-c2c:@project.version@ - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:923)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:901)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:246)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:494)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
[2019-08-28 14:10:30.106] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:911)] : Completed shut down of DiscoveryClient
[2019-08-28 14:10:30.124] [INFO ] - [Thread-8][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:1948)] : {dataSource-1} closing ...
[2019-08-28 14:10:30.130] [INFO ] - [Thread-8][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:2020)] : {dataSource-1} closed
[2019-08-28 14:22:03.411] [INFO ] - [main][?#?:?] : using logger: com.alibaba.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[2019-08-28 14:22:03.419] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-28 14:22:03.425] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {}
[2019-08-28 14:22:03.717] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6c61a903: startup date [Wed Aug 28 14:22:03 CST 2019]; root of context hierarchy
[2019-08-28 14:22:04.126] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-28 14:22:04.198] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8b5327ea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:22:04.374] [INFO ] - [pool-1-thread-1][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$1.run(AwaitingNonWebApplicationListener.java:61)] :  [Dubbo] Current Spring Boot Application is await...
[2019-08-28 14:22:04.797] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-28 14:22:04.798] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {dubbo.application.id=service-consumer, dubbo.application.name=service-consumer, dubbo.consumer.check=false, dubbo.consumer.timeout=5000, dubbo.monitor=, dubbo.protocol.id=dubbo, dubbo.protocol.name=dubbo, dubbo.protocol.port=20884, dubbo.provider.timeout=5000, dubbo.registry.address=N/A, dubbo.registry.check=false, dubbo.registry.id=my-registry, dubbo.registry.protocol=zookeeper, dubbo.scan=}
[2019-08-28 14:22:04.844] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : The following profiles are active: common,data,eureka,dubbo_provider,dubbo_consumer
[2019-08-28 14:22:04.852] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Refreshing org.springframework.web.context.support.GenericWebApplicationContext@59fc684e: startup date [Wed Aug 28 14:22:04 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6c61a903
[2019-08-28 14:22:06.146] [WARN ] - [main][ org.mybatis.logging.Logger.warn(Logger.java:44)] : No MyBatis mapper was found in '[com.baomidou.cloud.service.*.mapper*]' package. Please check your configuration.
[2019-08-28 14:22:06.842] [INFO ] - [main][ org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:172)] : Multiple Spring Data modules found, entering strict repository configuration mode!
[2019-08-28 14:22:07.265] [WARN ] - [main][ com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans(ServiceAnnotationBeanPostProcessor.java:155)] :  [DUBBO] No Spring Bean annotating Dubbo's @Service was found under package[com.bittrade.c2c], dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:22:07.682] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : BeanFactory id=61352edb-e99a-3c04-9bd9-f50ca066a043
[2019-08-28 14:22:07.876] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-28 14:22:08.150] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:22:08.163] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionProperties' of type [com.core.framework.props.TransactionProperties$$EnhancerBySpringCGLIB$$8081e793] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:22:08.180] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$88e51a5f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:22:08.185] [INFO ] - [main][ com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource(DruidDataSourceAutoConfigure.java:56)] : Init DruidDataSource
[2019-08-28 14:22:08.295] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:22:08.423] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003)] : {dataSource-1} inited
[2019-08-28 14:22:08.424] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:22:08.453] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:22:08.465] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$$EnhancerBySpringCGLIB$$3ad1ff7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:22:08.482] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:22:08.491] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:22:08.499] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration$$EnhancerBySpringCGLIB$$1c39bd5c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:22:08.534] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:22:08.536] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionConfig' of type [com.core.framework.config.TransactionConfig$$EnhancerBySpringCGLIB$$753da238] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:22:08.559] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'defaultPointcutAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:22:08.577] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6f3924ed] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:22:08.862] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' of type [com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration$$EnhancerBySpringCGLIB$$7e3aca5f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:22:08.876] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:22:08.886] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:22:08.889] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:22:08.893] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:22:08.896] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:22:08.954] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8b5327ea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:22:13.621] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'clientInboundChannelExecutor'
[2019-08-28 14:22:13.649] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'clientOutboundChannelExecutor'
[2019-08-28 14:22:14.040] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService
[2019-08-28 14:22:14.261] [INFO ] - [main][ com.core.framework.config.redis.JedisClusterConfig.getJedisCluster(JedisClusterConfig.java:35)] : 进入redis集群初始化方法：访问集群地址为：[154.222.138.5:7000, 154.222.138.5:7001, 154.222.138.5:7002, 154.222.138.5:7003, 154.222.138.5:7004, 154.222.138.5:7005]
[2019-08-28 14:22:15.497] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyTradeServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:22:16.810] [WARN ] - [main][ com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:98)] :  [DUBBO] Failed to start NettyClient HAHE/192.168.1.12 connect to the server localhost/127.0.0.1:20881 (check == false, ignore and retry later!), cause: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=6672&register.ip=192.168.1.12&side=consumer&timestamp=1566973335498) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=6672&register.ip=192.168.1.12&side=consumer&timestamp=1566973335498) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:89)
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.<init>(NettyClient.java:59)
	at com.alibaba.dubbo.remoting.transport.netty.NettyTransporter.connect(NettyTransporter.java:37)
	at com.alibaba.dubbo.remoting.Transporter$Adaptive.connect(Transporter$Adaptive.java)
	at com.alibaba.dubbo.remoting.Transporters.connect(Transporters.java:75)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchanger.connect(HeaderExchanger.java:39)
	at com.alibaba.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:109)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.initClient(DubboProtocol.java:409)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getSharedClient(DubboProtocol.java:377)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getClients(DubboProtocol.java:354)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.refer(DubboProtocol.java:336)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:67)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:108)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:65)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:394)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:333)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:163)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:66)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceFieldElement.inject(ReferenceAnnotationBeanPostProcessor.java:367)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.postProcessPropertyValues(ReferenceAnnotationBeanPostProcessor.java:92)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:759)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:548)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:386)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:89)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:41)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:541)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:763)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:463)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:209)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-08-28 14:22:16.998] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:22:18.291] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-28 14:22:18.292] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-28 14:22:18.322] [INFO ] - [main][ com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281)] : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@65015a49
[2019-08-28 14:22:18.561] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/sendMessage],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.sendMessage(com.bittrade.c2c.vo.SendVo)
[2019-08-28 14:22:18.564] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/pullUnreadMessage],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.pullMessage(java.lang.Long)
[2019-08-28 14:22:18.564] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/sendOrder],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.pullOrderDetail(com.bittrade.c2c.vo.SendOrderVo)
[2019-08-28 14:22:18.577] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.listAdverts(com.core.common.DTO.PageDTO<com.bittrade.pojo.dto.TAdvertInfoDTO>,com.bittrade.pojo.vo.QueryAdvertVO,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:22:18.578] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/publish_advert],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.publishAdvert(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.TAdvertInfoDTO)
[2019-08-28 14:22:18.579] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/place_advert_order/{advert_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.placeAdvertOrder(java.lang.Long,java.math.BigDecimal,java.lang.String,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:22:18.580] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts/users/{coin_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.listAdvertsUsers(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.AdvertUserVO>,java.lang.Long,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:22:18.581] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts/details/{advert_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.getAdvertDetails(java.lang.Long)
[2019-08-28 14:22:18.581] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/suspend],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.suspendAdverts(java.util.List<java.lang.Long>,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:22:18.582] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/revoke/{advert_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.revokeAdverts(java.lang.Long,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:22:18.583] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 14:22:18.584] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 14:22:18.585] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 14:22:18.586] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 14:22:18.587] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 14:22:18.588] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 14:22:18.589] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 14:22:18.590] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 14:22:18.590] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 14:22:18.591] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 14:22:18.592] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 14:22:18.593] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 14:22:18.593] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 14:22:18.594] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 14:22:18.595] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 14:22:18.602] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/details/{order_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.getAdvertOrderDetails(java.lang.Long)
[2019-08-28 14:22:18.603] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/click_already_receipt/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.clickAlreadyReceipt(java.lang.Long)
[2019-08-28 14:22:18.604] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/cancel/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.cancelAdvertOrder(java.lang.Long)
[2019-08-28 14:22:18.604] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/no_complete],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.noCompleteAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:22:18.605] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/already_complete],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.alreadyCompleteAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:22:18.606] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/already_cancel],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.alreadyCancelAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:22:18.607] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/click_already_paid/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.clickAlreadyPaid(java.lang.Long)
[2019-08-28 14:22:18.607] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 14:22:18.608] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 14:22:18.609] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 14:22:18.609] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 14:22:18.610] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 14:22:18.611] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 14:22:18.612] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 14:22:18.612] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 14:22:18.613] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 14:22:18.614] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 14:22:18.615] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 14:22:18.616] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 14:22:18.617] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 14:22:18.618] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 14:22:18.619] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 14:22:18.628] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/detail],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetsVO>> com.common.bittrade.controller.TLegalCurrencyAccountController.detail(com.core.web.constant.entity.LoginUser)
[2019-08-28 14:22:18.628] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/availableBalanceFeign],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.lang.String com.common.bittrade.controller.TLegalCurrencyAccountController.availableBalanceFeign(java.lang.Long,java.lang.String)
[2019-08-28 14:22:18.629] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getAssetsFeign],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.math.BigDecimal com.common.bittrade.controller.TLegalCurrencyAccountController.getAssetsFeign(java.lang.Long)
[2019-08-28 14:22:18.630] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/conversionTotal],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.ConversionVo> com.common.bittrade.controller.TLegalCurrencyAccountController.totalConversion(com.core.web.constant.entity.LoginUser)
[2019-08-28 14:22:18.631] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 14:22:18.631] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 14:22:18.632] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 14:22:18.633] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 14:22:18.633] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 14:22:18.634] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 14:22:18.635] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 14:22:18.635] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 14:22:18.636] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 14:22:18.636] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 14:22:18.637] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 14:22:18.638] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 14:22:18.638] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 14:22:18.639] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 14:22:18.640] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 14:22:18.644] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/legalCurrency_coins],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.common.bittrade.controller.TLegalCurrencyCoinController.listLegalCurrencyCoins()
[2019-08-28 14:22:18.646] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 14:22:18.647] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 14:22:18.647] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 14:22:18.648] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 14:22:18.649] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 14:22:18.650] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 14:22:18.650] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 14:22:18.651] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 14:22:18.652] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 14:22:18.652] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 14:22:18.653] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 14:22:18.654] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 14:22:18.654] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 14:22:18.655] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 14:22:18.656] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 14:22:18.662] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/queryAccountRecord],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.RecordVO>> com.common.bittrade.controller.TLegalCurrencyRecordController.queryAccountRecord(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.AccountTypeDto)
[2019-08-28 14:22:18.663] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/queryType],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetRecordTypeVO>> com.common.bittrade.controller.TLegalCurrencyRecordController.queryTypeForFund()
[2019-08-28 14:22:18.663] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 14:22:18.664] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 14:22:18.665] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 14:22:18.666] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 14:22:18.666] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 14:22:18.667] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 14:22:18.667] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 14:22:18.668] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 14:22:18.669] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 14:22:18.669] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 14:22:18.670] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 14:22:18.670] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 14:22:18.671] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 14:22:18.672] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 14:22:18.672] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 14:22:18.677] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/rechargecoinlist],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO com.common.bittrade.controller.WCoinController.rechargecoinlist()
[2019-08-28 14:22:18.678] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/Withdrawcoinlist],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO com.common.bittrade.controller.WCoinController.withdrawcoinlist()
[2019-08-28 14:22:18.679] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/getList],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.model.WCoin>> com.common.bittrade.controller.WCoinController.getList()
[2019-08-28 14:22:18.680] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccount/detail],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetsVO>> com.common.bittrade.controller.WWalletAccountController.detail(com.core.web.constant.entity.LoginUser)
[2019-08-28 14:22:18.681] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccount/conversionTotal],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.ConversionVo> com.common.bittrade.controller.WWalletAccountController.totalConversion(com.core.web.constant.entity.LoginUser)
[2019-08-28 14:22:18.685] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryFundAccountRecord],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.RecordVO>> com.common.bittrade.controller.WWalletAccountRecordController.queryFundAccountRecord(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.AccountTypeDto)
[2019-08-28 14:22:18.686] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryTypeForFund],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetRecordTypeVO>> com.common.bittrade.controller.WWalletAccountRecordController.queryTypeForFund()
[2019-08-28 14:22:18.686] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryCurrencies],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.model.WCoin>> com.common.bittrade.controller.WWalletAccountRecordController.queryCurrencies()
[2019-08-28 14:22:18.690] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
[2019-08-28 14:22:18.691] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
[2019-08-28 14:22:18.692] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
[2019-08-28 14:22:18.697] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2019-08-28 14:22:18.698] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2019-08-28 14:22:18.759] [WARN ] - [DubboClientReconnectTimer-thread-1][ com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:171)] :  [DUBBO] client reconnect to localhost:20881 find error . url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=6672&register.ip=192.168.1.12&side=consumer&timestamp=1566973335498, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=6672&register.ip=192.168.1.12&side=consumer&timestamp=1566973335498) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:156)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	... 3 common frames omitted
[2019-08-28 14:22:19.992] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Exposing 2 endpoint(s) beneath base path '/actuator'
[2019-08-28 14:22:20.022] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2019-08-28 14:22:20.024] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2019-08-28 14:22:20.025] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2019-08-28 14:22:20.351] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'messageBrokerTaskScheduler'
[2019-08-28 14:22:20.454] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped URL path [/c2c/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
[2019-08-28 14:22:20.526] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'brokerChannelExecutor'
[2019-08-28 14:22:20.879] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[2019-08-28 14:22:21.362] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@59fc684e: startup date [Wed Aug 28 14:22:04 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6c61a903
[2019-08-28 14:22:21.448] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Detected @ExceptionHandler methods in globalExceptionHandler
[2019-08-28 14:22:21.827] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-28 14:22:21.828] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-28 14:22:23.348] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting beans in phase 0
[2019-08-28 14:22:23.349] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting beans in phase 2147483647
[2019-08-28 14:22:23.349] [INFO ] - [main][ springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:151)] : Context refreshed
[2019-08-28 14:22:23.388] [INFO ] - [main][ springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:154)] : Found 1 custom documentation plugin(s)
[2019-08-28 14:22:23.450] [INFO ] - [main][ springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)] : Scanning for api listing references
[2019-08-28 14:22:23.969] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting...
[2019-08-28 14:22:23.969] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
[2019-08-28 14:22:23.971] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Started.
[2019-08-28 14:22:23.991] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Started AdvertInfoTester in 20.884 seconds (JVM running for 22.474)
[2019-08-28 14:22:24.626] [INFO ] - [Thread-8][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Closing org.springframework.web.context.support.GenericWebApplicationContext@59fc684e: startup date [Wed Aug 28 14:22:04 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6c61a903
[2019-08-28 14:22:24.626] [INFO ] - [Thread-2][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$2.run(AwaitingNonWebApplicationListener.java:83)] :  [Dubbo] Current Spring Boot Application is about to shutdown...
[2019-08-28 14:22:24.629] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:64)] :  [DUBBO] Close all registries [], dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:22:24.629] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(DubboProtocol.java:438)] :  [DUBBO] Close dubbo connect: 192.168.1.12:0-->localhost/127.0.0.1:20881, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:22:24.629] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:63)] :  [DUBBO] Destroy reference: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyService?application=service-consumer&default.check=false&default.timeout=5000&dubbo=2.6.2&interface=com.bittrade.currency.api.service.ITCurrencyService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getCurrencies,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,findAllLegalCurrency,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,findUsableCurrency,updateById,pageMaps,listByMap,getByPK&pid=6672&register.ip=192.168.1.12&side=consumer&timestamp=1566973336999, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:22:24.733] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:349)] : Initializing Eureka in region us-east-1
[2019-08-28 14:22:24.777] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:63)] :  [DUBBO] Destroy reference: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&default.check=false&default.timeout=5000&dubbo=2.6.2&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=6672&register.ip=192.168.1.12&side=consumer&timestamp=1566973335498, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:22:25.049] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70)] : Using JSON encoding codec LegacyJacksonJson
[2019-08-28 14:22:25.050] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71)] : Using JSON decoding codec LegacyJacksonJson
[2019-08-28 14:22:25.287] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80)] : Using XML encoding codec XStreamXml
[2019-08-28 14:22:25.287] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81)] : Using XML decoding codec XStreamXml
[2019-08-28 14:22:25.614] [INFO ] - [Thread-8][ com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] : Resolving eureka endpoints via configuration
[2019-08-28 14:22:25.651] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958)] : Disable delta property : false
[2019-08-28 14:22:25.652] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:959)] : Single vip registry refresh property : null
[2019-08-28 14:22:25.652] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960)] : Force full registry fetch : false
[2019-08-28 14:22:25.652] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:961)] : Application is null : false
[2019-08-28 14:22:25.652] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:962)] : Registered Applications size is zero : true
[2019-08-28 14:22:25.653] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:964)] : Application version is -1: true
[2019-08-28 14:22:25.653] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1047)] : Getting all instance registry info from the eureka server
[2019-08-28 14:22:27.778] [ERROR] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83)] : Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$92bc2109.CGLIB$eurekaClient$0(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$92bc2109$$FastClassBySpringCGLIB$$ad7d66e4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:365)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$92bc2109.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:583)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1246)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:535)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:193)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 65 common frames omitted
[2019-08-28 14:22:27.780] [WARN ] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:130)] : Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2019-08-28 14:22:27.781] [ERROR] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:972)] : DiscoveryClient_BITTRADE-C2C/192.168.1.12:-1:bittrade-c2c:@project.version@ - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$92bc2109.CGLIB$eurekaClient$0(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$92bc2109$$FastClassBySpringCGLIB$$ad7d66e4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:365)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$92bc2109.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:583)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1246)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:535)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:193)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
[2019-08-28 14:22:27.783] [WARN ] - [Thread-8][ com.netflix.discovery.DiscoveryClient$1.get(DiscoveryClient.java:290)] : Using default backup registry implementation which does not do anything.
[2019-08-28 14:22:27.786] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1264)] : Starting heartbeat executor: renew interval is: 30
[2019-08-28 14:22:27.794] [INFO ] - [Thread-8][ com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60)] : InstanceInfoReplicator onDemand update allowed rate per min is 4
[2019-08-28 14:22:27.805] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:449)] : Discovery Client initialized at timestamp 1566973347801 with initial instances count: 0
[2019-08-28 14:22:27.830] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:888)] : Shutting down DiscoveryClient ...
[2019-08-28 14:22:30.832] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:922)] : Unregistering ...
[2019-08-28 14:22:32.860] [ERROR] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83)] : Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:923)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:901)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:246)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:494)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 46 common frames omitted
[2019-08-28 14:22:32.862] [WARN ] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:130)] : Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2019-08-28 14:22:32.862] [ERROR] - [Thread-8][ com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:926)] : DiscoveryClient_BITTRADE-C2C/192.168.1.12:-1:bittrade-c2c:@project.version@ - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:923)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:901)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:246)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:494)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
[2019-08-28 14:22:32.887] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:911)] : Completed shut down of DiscoveryClient
[2019-08-28 14:22:32.907] [INFO ] - [Thread-8][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:1948)] : {dataSource-1} closing ...
[2019-08-28 14:22:32.914] [INFO ] - [Thread-8][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:2020)] : {dataSource-1} closed
[2019-08-28 14:23:22.154] [INFO ] - [main][?#?:?] : using logger: com.alibaba.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[2019-08-28 14:23:22.166] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-28 14:23:22.172] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {}
[2019-08-28 14:23:22.628] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@324c64cd: startup date [Wed Aug 28 14:23:22 CST 2019]; root of context hierarchy
[2019-08-28 14:23:23.259] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-28 14:23:23.355] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d5b8dc84] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:23:23.574] [INFO ] - [pool-1-thread-1][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$1.run(AwaitingNonWebApplicationListener.java:61)] :  [Dubbo] Current Spring Boot Application is await...
[2019-08-28 14:23:24.146] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-28 14:23:24.148] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {dubbo.application.id=service-consumer, dubbo.application.name=service-consumer, dubbo.consumer.check=false, dubbo.consumer.timeout=5000, dubbo.monitor=, dubbo.protocol.id=dubbo, dubbo.protocol.name=dubbo, dubbo.protocol.port=20884, dubbo.provider.timeout=5000, dubbo.registry.address=N/A, dubbo.registry.check=false, dubbo.registry.id=my-registry, dubbo.registry.protocol=zookeeper, dubbo.scan=}
[2019-08-28 14:23:24.229] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : The following profiles are active: common,data,eureka,dubbo_provider,dubbo_consumer
[2019-08-28 14:23:24.240] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Refreshing org.springframework.web.context.support.GenericWebApplicationContext@6107165: startup date [Wed Aug 28 14:23:24 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@324c64cd
[2019-08-28 14:23:25.915] [WARN ] - [main][ org.mybatis.logging.Logger.warn(Logger.java:44)] : No MyBatis mapper was found in '[com.baomidou.cloud.service.*.mapper*]' package. Please check your configuration.
[2019-08-28 14:23:26.877] [INFO ] - [main][ org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:172)] : Multiple Spring Data modules found, entering strict repository configuration mode!
[2019-08-28 14:23:27.325] [WARN ] - [main][ com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans(ServiceAnnotationBeanPostProcessor.java:155)] :  [DUBBO] No Spring Bean annotating Dubbo's @Service was found under package[com.bittrade.c2c], dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:23:27.844] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : BeanFactory id=61352edb-e99a-3c04-9bd9-f50ca066a043
[2019-08-28 14:23:28.087] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-28 14:23:28.416] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:23:28.431] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionProperties' of type [com.core.framework.props.TransactionProperties$$EnhancerBySpringCGLIB$$cae79c2d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:23:28.448] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$d34acef9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:23:28.454] [INFO ] - [main][ com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource(DruidDataSourceAutoConfigure.java:56)] : Init DruidDataSource
[2019-08-28 14:23:28.595] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:23:28.772] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003)] : {dataSource-1} inited
[2019-08-28 14:23:28.773] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:23:28.811] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:23:28.826] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$$EnhancerBySpringCGLIB$$4e12d491] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:23:28.847] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:23:28.855] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:23:28.866] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration$$EnhancerBySpringCGLIB$$669f71f6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:23:28.911] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:23:28.912] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionConfig' of type [com.core.framework.config.TransactionConfig$$EnhancerBySpringCGLIB$$bfa356d2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:23:28.942] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'defaultPointcutAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:23:28.963] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b99ed987] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:23:29.337] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' of type [com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration$$EnhancerBySpringCGLIB$$c8a07ef9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:23:29.356] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:23:29.366] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:23:29.370] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:23:29.374] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:23:29.378] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:23:29.449] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d5b8dc84] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:23:34.684] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'clientInboundChannelExecutor'
[2019-08-28 14:23:34.720] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'clientOutboundChannelExecutor'
[2019-08-28 14:23:35.255] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService
[2019-08-28 14:23:35.558] [INFO ] - [main][ com.core.framework.config.redis.JedisClusterConfig.getJedisCluster(JedisClusterConfig.java:35)] : 进入redis集群初始化方法：访问集群地址为：[154.222.138.5:7000, 154.222.138.5:7001, 154.222.138.5:7002, 154.222.138.5:7003, 154.222.138.5:7004, 154.222.138.5:7005]
[2019-08-28 14:23:37.172] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyTradeServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:23:38.795] [WARN ] - [main][ com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:98)] :  [DUBBO] Failed to start NettyClient HAHE/192.168.1.12 connect to the server localhost/127.0.0.1:20881 (check == false, ignore and retry later!), cause: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=6344&register.ip=192.168.1.12&side=consumer&timestamp=1566973417173) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=6344&register.ip=192.168.1.12&side=consumer&timestamp=1566973417173) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:89)
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.<init>(NettyClient.java:59)
	at com.alibaba.dubbo.remoting.transport.netty.NettyTransporter.connect(NettyTransporter.java:37)
	at com.alibaba.dubbo.remoting.Transporter$Adaptive.connect(Transporter$Adaptive.java)
	at com.alibaba.dubbo.remoting.Transporters.connect(Transporters.java:75)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchanger.connect(HeaderExchanger.java:39)
	at com.alibaba.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:109)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.initClient(DubboProtocol.java:409)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getSharedClient(DubboProtocol.java:377)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getClients(DubboProtocol.java:354)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.refer(DubboProtocol.java:336)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:65)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:108)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:67)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:394)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:333)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:163)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:66)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceFieldElement.inject(ReferenceAnnotationBeanPostProcessor.java:367)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.postProcessPropertyValues(ReferenceAnnotationBeanPostProcessor.java:92)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:759)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:548)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:386)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:89)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:41)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:541)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:763)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:463)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:209)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-08-28 14:23:38.990] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:23:40.166] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-28 14:23:40.167] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-28 14:23:40.223] [INFO ] - [main][ com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281)] : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@19c06762
[2019-08-28 14:23:40.544] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/sendMessage],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.sendMessage(com.bittrade.c2c.vo.SendVo)
[2019-08-28 14:23:40.547] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/sendOrder],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.pullOrderDetail(com.bittrade.c2c.vo.SendOrderVo)
[2019-08-28 14:23:40.548] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/pullUnreadMessage],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.pullMessage(java.lang.Long)
[2019-08-28 14:23:40.562] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.listAdverts(com.core.common.DTO.PageDTO<com.bittrade.pojo.dto.TAdvertInfoDTO>,com.bittrade.pojo.vo.QueryAdvertVO,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:23:40.563] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/publish_advert],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.publishAdvert(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.TAdvertInfoDTO)
[2019-08-28 14:23:40.564] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts/users/{coin_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.listAdvertsUsers(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.AdvertUserVO>,java.lang.Long,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:23:40.565] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/suspend],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.suspendAdverts(java.util.List<java.lang.Long>,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:23:40.567] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/revoke/{advert_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.revokeAdverts(java.lang.Long,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:23:40.567] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/place_advert_order/{advert_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.placeAdvertOrder(java.lang.Long,java.math.BigDecimal,java.lang.String,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:23:40.568] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts/details/{advert_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.getAdvertDetails(java.lang.Long)
[2019-08-28 14:23:40.569] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 14:23:40.570] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 14:23:40.571] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 14:23:40.572] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 14:23:40.572] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 14:23:40.574] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 14:23:40.575] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 14:23:40.576] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 14:23:40.576] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 14:23:40.577] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 14:23:40.578] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 14:23:40.579] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 14:23:40.580] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 14:23:40.581] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 14:23:40.581] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 14:23:40.588] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/details/{order_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.getAdvertOrderDetails(java.lang.Long)
[2019-08-28 14:23:40.590] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/no_complete],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.noCompleteAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:23:40.591] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/already_cancel],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.alreadyCancelAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:23:40.592] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/already_complete],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.alreadyCompleteAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:23:40.593] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/cancel/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.cancelAdvertOrder(java.lang.Long)
[2019-08-28 14:23:40.594] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/click_already_receipt/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.clickAlreadyReceipt(java.lang.Long)
[2019-08-28 14:23:40.595] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/click_already_paid/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.clickAlreadyPaid(java.lang.Long)
[2019-08-28 14:23:40.596] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 14:23:40.596] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 14:23:40.597] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 14:23:40.598] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 14:23:40.599] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 14:23:40.599] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 14:23:40.600] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 14:23:40.601] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 14:23:40.602] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 14:23:40.603] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 14:23:40.603] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 14:23:40.604] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 14:23:40.605] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 14:23:40.606] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 14:23:40.606] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 14:23:40.613] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/availableBalanceFeign],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.lang.String com.common.bittrade.controller.TLegalCurrencyAccountController.availableBalanceFeign(java.lang.Long,java.lang.String)
[2019-08-28 14:23:40.614] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/detail],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetsVO>> com.common.bittrade.controller.TLegalCurrencyAccountController.detail(com.core.web.constant.entity.LoginUser)
[2019-08-28 14:23:40.615] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/conversionTotal],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.ConversionVo> com.common.bittrade.controller.TLegalCurrencyAccountController.totalConversion(com.core.web.constant.entity.LoginUser)
[2019-08-28 14:23:40.616] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getAssetsFeign],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.math.BigDecimal com.common.bittrade.controller.TLegalCurrencyAccountController.getAssetsFeign(java.lang.Long)
[2019-08-28 14:23:40.617] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 14:23:40.617] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 14:23:40.618] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 14:23:40.619] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 14:23:40.620] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 14:23:40.620] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 14:23:40.621] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 14:23:40.622] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 14:23:40.623] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 14:23:40.623] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 14:23:40.624] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 14:23:40.625] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 14:23:40.626] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 14:23:40.627] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 14:23:40.628] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 14:23:40.633] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/legalCurrency_coins],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.common.bittrade.controller.TLegalCurrencyCoinController.listLegalCurrencyCoins()
[2019-08-28 14:23:40.634] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 14:23:40.635] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 14:23:40.636] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 14:23:40.637] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 14:23:40.638] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 14:23:40.639] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 14:23:40.640] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 14:23:40.641] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 14:23:40.642] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 14:23:40.643] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 14:23:40.644] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 14:23:40.644] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 14:23:40.645] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 14:23:40.646] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 14:23:40.647] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 14:23:40.653] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/queryAccountRecord],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.RecordVO>> com.common.bittrade.controller.TLegalCurrencyRecordController.queryAccountRecord(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.AccountTypeDto)
[2019-08-28 14:23:40.654] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/queryType],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetRecordTypeVO>> com.common.bittrade.controller.TLegalCurrencyRecordController.queryTypeForFund()
[2019-08-28 14:23:40.656] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 14:23:40.657] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 14:23:40.658] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 14:23:40.659] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 14:23:40.660] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 14:23:40.660] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 14:23:40.661] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 14:23:40.662] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 14:23:40.663] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 14:23:40.663] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 14:23:40.664] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 14:23:40.666] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 14:23:40.667] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 14:23:40.668] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 14:23:40.668] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 14:23:40.673] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/Withdrawcoinlist],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO com.common.bittrade.controller.WCoinController.withdrawcoinlist()
[2019-08-28 14:23:40.674] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/getList],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.model.WCoin>> com.common.bittrade.controller.WCoinController.getList()
[2019-08-28 14:23:40.675] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/rechargecoinlist],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO com.common.bittrade.controller.WCoinController.rechargecoinlist()
[2019-08-28 14:23:40.677] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccount/detail],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetsVO>> com.common.bittrade.controller.WWalletAccountController.detail(com.core.web.constant.entity.LoginUser)
[2019-08-28 14:23:40.677] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccount/conversionTotal],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.ConversionVo> com.common.bittrade.controller.WWalletAccountController.totalConversion(com.core.web.constant.entity.LoginUser)
[2019-08-28 14:23:40.679] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryFundAccountRecord],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.RecordVO>> com.common.bittrade.controller.WWalletAccountRecordController.queryFundAccountRecord(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.AccountTypeDto)
[2019-08-28 14:23:40.680] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryCurrencies],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.model.WCoin>> com.common.bittrade.controller.WWalletAccountRecordController.queryCurrencies()
[2019-08-28 14:23:40.681] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryTypeForFund],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetRecordTypeVO>> com.common.bittrade.controller.WWalletAccountRecordController.queryTypeForFund()
[2019-08-28 14:23:40.686] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
[2019-08-28 14:23:40.687] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
[2019-08-28 14:23:40.688] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
[2019-08-28 14:23:40.695] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2019-08-28 14:23:40.696] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2019-08-28 14:23:40.737] [WARN ] - [DubboClientReconnectTimer-thread-1][ com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:171)] :  [DUBBO] client reconnect to localhost:20881 find error . url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=6344&register.ip=192.168.1.12&side=consumer&timestamp=1566973417173, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=6344&register.ip=192.168.1.12&side=consumer&timestamp=1566973417173) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:156)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	... 3 common frames omitted
[2019-08-28 14:23:42.433] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Exposing 2 endpoint(s) beneath base path '/actuator'
[2019-08-28 14:23:42.476] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2019-08-28 14:23:42.478] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2019-08-28 14:23:42.480] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2019-08-28 14:23:42.979] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'messageBrokerTaskScheduler'
[2019-08-28 14:23:43.112] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped URL path [/c2c/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
[2019-08-28 14:23:43.144] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'brokerChannelExecutor'
[2019-08-28 14:23:43.600] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[2019-08-28 14:23:44.199] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@6107165: startup date [Wed Aug 28 14:23:24 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@324c64cd
[2019-08-28 14:23:44.315] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Detected @ExceptionHandler methods in globalExceptionHandler
[2019-08-28 14:23:44.824] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-28 14:23:44.824] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-28 14:23:46.977] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting beans in phase 0
[2019-08-28 14:23:46.978] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting beans in phase 2147483647
[2019-08-28 14:23:46.978] [INFO ] - [main][ springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:151)] : Context refreshed
[2019-08-28 14:23:47.034] [INFO ] - [main][ springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:154)] : Found 1 custom documentation plugin(s)
[2019-08-28 14:23:47.117] [INFO ] - [main][ springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)] : Scanning for api listing references
[2019-08-28 14:23:47.772] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting...
[2019-08-28 14:23:47.773] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
[2019-08-28 14:23:47.775] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Started.
[2019-08-28 14:23:47.796] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Started AdvertInfoTester in 26.01 seconds (JVM running for 28.591)
[2019-08-28 14:24:43.139] [INFO ] - [MessageBroker-1][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
[2019-08-28 14:26:04.605] [INFO ] - [Thread-2][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$2.run(AwaitingNonWebApplicationListener.java:83)] :  [Dubbo] Current Spring Boot Application is about to shutdown...
[2019-08-28 14:26:04.611] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:64)] :  [DUBBO] Close all registries [], dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:26:04.612] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(DubboProtocol.java:438)] :  [DUBBO] Close dubbo connect: 192.168.1.12:0-->localhost/127.0.0.1:20881, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:26:04.613] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:63)] :  [DUBBO] Destroy reference: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyService?application=service-consumer&default.check=false&default.timeout=5000&dubbo=2.6.2&interface=com.bittrade.currency.api.service.ITCurrencyService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getCurrencies,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,findAllLegalCurrency,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,findUsableCurrency,updateById,pageMaps,listByMap,getByPK&pid=6344&register.ip=192.168.1.12&side=consumer&timestamp=1566973418991, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:26:04.743] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:349)] : Initializing Eureka in region us-east-1
[2019-08-28 14:26:04.892] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:63)] :  [DUBBO] Destroy reference: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&default.check=false&default.timeout=5000&dubbo=2.6.2&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=6344&register.ip=192.168.1.12&side=consumer&timestamp=1566973417173, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:26:05.085] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70)] : Using JSON encoding codec LegacyJacksonJson
[2019-08-28 14:26:05.086] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71)] : Using JSON decoding codec LegacyJacksonJson
[2019-08-28 14:26:05.400] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80)] : Using XML encoding codec XStreamXml
[2019-08-28 14:26:05.400] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81)] : Using XML decoding codec XStreamXml
[2019-08-28 14:26:05.941] [INFO ] - [Thread-8][ com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] : Resolving eureka endpoints via configuration
[2019-08-28 14:26:05.979] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958)] : Disable delta property : false
[2019-08-28 14:26:05.980] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:959)] : Single vip registry refresh property : null
[2019-08-28 14:26:05.980] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960)] : Force full registry fetch : false
[2019-08-28 14:26:05.980] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:961)] : Application is null : false
[2019-08-28 14:26:05.980] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:962)] : Registered Applications size is zero : true
[2019-08-28 14:26:05.981] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:964)] : Application version is -1: true
[2019-08-28 14:26:05.981] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1047)] : Getting all instance registry info from the eureka server
[2019-08-28 14:26:08.140] [ERROR] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83)] : Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$dd21d5a3.CGLIB$eurekaClient$1(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$dd21d5a3$$FastClassBySpringCGLIB$$20b51d84.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:365)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$dd21d5a3.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:583)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1246)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:535)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:193)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 65 common frames omitted
[2019-08-28 14:26:08.142] [WARN ] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:130)] : Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2019-08-28 14:26:08.143] [ERROR] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:972)] : DiscoveryClient_BITTRADE-C2C/192.168.1.12:-1:bittrade-c2c:@project.version@ - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$dd21d5a3.CGLIB$eurekaClient$1(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$dd21d5a3$$FastClassBySpringCGLIB$$20b51d84.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:365)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$dd21d5a3.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:583)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1246)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:535)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:193)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
[2019-08-28 14:26:08.144] [WARN ] - [Thread-8][ com.netflix.discovery.DiscoveryClient$1.get(DiscoveryClient.java:290)] : Using default backup registry implementation which does not do anything.
[2019-08-28 14:26:08.148] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1264)] : Starting heartbeat executor: renew interval is: 30
[2019-08-28 14:26:08.157] [INFO ] - [Thread-8][ com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60)] : InstanceInfoReplicator onDemand update allowed rate per min is 4
[2019-08-28 14:26:08.169] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:449)] : Discovery Client initialized at timestamp 1566973568165 with initial instances count: 0
[2019-08-28 14:26:08.194] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:888)] : Shutting down DiscoveryClient ...
[2019-08-28 14:26:11.196] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:922)] : Unregistering ...
[2019-08-28 14:26:13.216] [ERROR] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83)] : Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:923)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:901)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:246)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:494)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 46 common frames omitted
[2019-08-28 14:26:13.217] [WARN ] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:130)] : Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2019-08-28 14:26:13.218] [ERROR] - [Thread-8][ com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:926)] : DiscoveryClient_BITTRADE-C2C/192.168.1.12:-1:bittrade-c2c:@project.version@ - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:923)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:901)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:246)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:494)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
[2019-08-28 14:26:13.244] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:911)] : Completed shut down of DiscoveryClient
[2019-08-28 14:26:13.620] [INFO ] - [Thread-8][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:1948)] : {dataSource-1} closing ...
[2019-08-28 14:26:13.631] [INFO ] - [Thread-8][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:2020)] : {dataSource-1} closed
[2019-08-28 14:26:20.846] [INFO ] - [main][?#?:?] : using logger: com.alibaba.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[2019-08-28 14:26:20.857] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-28 14:26:20.863] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {}
[2019-08-28 14:26:21.311] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@18e8473e: startup date [Wed Aug 28 14:26:21 CST 2019]; root of context hierarchy
[2019-08-28 14:26:21.846] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-28 14:26:21.937] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$dfe7afa1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:26:22.161] [INFO ] - [pool-1-thread-1][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$1.run(AwaitingNonWebApplicationListener.java:61)] :  [Dubbo] Current Spring Boot Application is await...
[2019-08-28 14:26:22.717] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-28 14:26:22.719] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {dubbo.application.id=service-consumer, dubbo.application.name=service-consumer, dubbo.consumer.check=false, dubbo.consumer.timeout=5000, dubbo.monitor=, dubbo.protocol.id=dubbo, dubbo.protocol.name=dubbo, dubbo.protocol.port=20884, dubbo.provider.timeout=5000, dubbo.registry.address=N/A, dubbo.registry.check=false, dubbo.registry.id=my-registry, dubbo.registry.protocol=zookeeper, dubbo.scan=}
[2019-08-28 14:26:22.784] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : The following profiles are active: common,data,eureka,dubbo_provider,dubbo_consumer
[2019-08-28 14:26:22.793] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Refreshing org.springframework.web.context.support.GenericWebApplicationContext@20011bf: startup date [Wed Aug 28 14:26:22 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@18e8473e
[2019-08-28 14:26:24.440] [WARN ] - [main][ org.mybatis.logging.Logger.warn(Logger.java:44)] : No MyBatis mapper was found in '[com.baomidou.cloud.service.*.mapper*]' package. Please check your configuration.
[2019-08-28 14:26:25.405] [INFO ] - [main][ org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:172)] : Multiple Spring Data modules found, entering strict repository configuration mode!
[2019-08-28 14:26:25.854] [WARN ] - [main][ com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans(ServiceAnnotationBeanPostProcessor.java:155)] :  [DUBBO] No Spring Bean annotating Dubbo's @Service was found under package[com.bittrade.c2c], dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:26:26.337] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : BeanFactory id=61352edb-e99a-3c04-9bd9-f50ca066a043
[2019-08-28 14:26:26.581] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-28 14:26:26.928] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:26:26.943] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionProperties' of type [com.core.framework.props.TransactionProperties$$EnhancerBySpringCGLIB$$d5166f4a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:26:26.961] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$dd79a216] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:26:26.967] [INFO ] - [main][ com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource(DruidDataSourceAutoConfigure.java:56)] : Init DruidDataSource
[2019-08-28 14:26:27.119] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:26:27.325] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003)] : {dataSource-1} inited
[2019-08-28 14:26:27.326] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:26:27.364] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:26:27.380] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$$EnhancerBySpringCGLIB$$5841a7ae] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:26:27.404] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:26:27.413] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:26:27.422] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration$$EnhancerBySpringCGLIB$$70ce4513] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:26:27.464] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:26:27.465] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionConfig' of type [com.core.framework.config.TransactionConfig$$EnhancerBySpringCGLIB$$c9d229ef] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:26:27.495] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'defaultPointcutAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:26:27.522] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c3cdaca4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:26:27.887] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' of type [com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration$$EnhancerBySpringCGLIB$$d2cf5216] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:26:27.907] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:26:27.917] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:26:27.921] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:26:27.925] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:26:27.929] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:26:28.004] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$dfe7afa1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:26:33.072] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'clientInboundChannelExecutor'
[2019-08-28 14:26:33.107] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'clientOutboundChannelExecutor'
[2019-08-28 14:26:33.662] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService
[2019-08-28 14:26:33.994] [INFO ] - [main][ com.core.framework.config.redis.JedisClusterConfig.getJedisCluster(JedisClusterConfig.java:35)] : 进入redis集群初始化方法：访问集群地址为：[154.222.138.5:7000, 154.222.138.5:7001, 154.222.138.5:7002, 154.222.138.5:7003, 154.222.138.5:7004, 154.222.138.5:7005]
[2019-08-28 14:26:35.686] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyTradeServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:26:37.341] [WARN ] - [main][ com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:98)] :  [DUBBO] Failed to start NettyClient HAHE/192.168.1.12 connect to the server localhost/127.0.0.1:20881 (check == false, ignore and retry later!), cause: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=6220&register.ip=192.168.1.12&side=consumer&timestamp=1566973595687) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=6220&register.ip=192.168.1.12&side=consumer&timestamp=1566973595687) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:89)
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.<init>(NettyClient.java:59)
	at com.alibaba.dubbo.remoting.transport.netty.NettyTransporter.connect(NettyTransporter.java:37)
	at com.alibaba.dubbo.remoting.Transporter$Adaptive.connect(Transporter$Adaptive.java)
	at com.alibaba.dubbo.remoting.Transporters.connect(Transporters.java:75)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchanger.connect(HeaderExchanger.java:39)
	at com.alibaba.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:109)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.initClient(DubboProtocol.java:409)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getSharedClient(DubboProtocol.java:377)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getClients(DubboProtocol.java:354)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.refer(DubboProtocol.java:336)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:65)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:67)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:108)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:394)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:333)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:163)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:66)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceFieldElement.inject(ReferenceAnnotationBeanPostProcessor.java:367)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.postProcessPropertyValues(ReferenceAnnotationBeanPostProcessor.java:92)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:759)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:548)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:386)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:89)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:41)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:541)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:763)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:463)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:209)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-08-28 14:26:37.536] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:26:38.691] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-28 14:26:38.692] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-28 14:26:38.726] [INFO ] - [main][ com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281)] : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@77648321
[2019-08-28 14:26:39.067] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/sendMessage],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.sendMessage(com.bittrade.c2c.vo.SendVo)
[2019-08-28 14:26:39.069] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/sendOrder],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.pullOrderDetail(com.bittrade.c2c.vo.SendOrderVo)
[2019-08-28 14:26:39.070] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/pullUnreadMessage],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.pullMessage(java.lang.Long)
[2019-08-28 14:26:39.084] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.listAdverts(com.core.common.DTO.PageDTO<com.bittrade.pojo.dto.TAdvertInfoDTO>,com.bittrade.pojo.vo.QueryAdvertVO,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:26:39.085] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/place_advert_order/{advert_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.placeAdvertOrder(java.lang.Long,java.math.BigDecimal,java.lang.String,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:26:39.086] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/suspend],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.suspendAdverts(java.util.List<java.lang.Long>,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:26:39.087] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/revoke/{advert_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.revokeAdverts(java.lang.Long,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:26:39.088] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts/details/{advert_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.getAdvertDetails(java.lang.Long)
[2019-08-28 14:26:39.089] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts/users/{coin_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.listAdvertsUsers(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.AdvertUserVO>,java.lang.Long,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:26:39.090] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/publish_advert],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.publishAdvert(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.TAdvertInfoDTO)
[2019-08-28 14:26:39.091] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 14:26:39.092] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 14:26:39.093] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 14:26:39.093] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 14:26:39.094] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 14:26:39.095] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 14:26:39.096] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 14:26:39.097] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 14:26:39.098] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 14:26:39.098] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 14:26:39.099] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 14:26:39.100] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 14:26:39.101] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 14:26:39.102] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 14:26:39.103] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 14:26:39.110] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/details/{order_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.getAdvertOrderDetails(java.lang.Long)
[2019-08-28 14:26:39.111] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/click_already_receipt/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.clickAlreadyReceipt(java.lang.Long)
[2019-08-28 14:26:39.112] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/no_complete],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.noCompleteAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:26:39.113] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/already_complete],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.alreadyCompleteAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:26:39.114] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/cancel/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.cancelAdvertOrder(java.lang.Long)
[2019-08-28 14:26:39.115] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/already_cancel],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.alreadyCancelAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:26:39.116] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/click_already_paid/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.clickAlreadyPaid(java.lang.Long)
[2019-08-28 14:26:39.117] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 14:26:39.117] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 14:26:39.118] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 14:26:39.119] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 14:26:39.120] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 14:26:39.121] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 14:26:39.121] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 14:26:39.122] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 14:26:39.123] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 14:26:39.124] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 14:26:39.125] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 14:26:39.126] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 14:26:39.126] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 14:26:39.127] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 14:26:39.128] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 14:26:39.134] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/availableBalanceFeign],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.lang.String com.common.bittrade.controller.TLegalCurrencyAccountController.availableBalanceFeign(java.lang.Long,java.lang.String)
[2019-08-28 14:26:39.135] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/detail],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetsVO>> com.common.bittrade.controller.TLegalCurrencyAccountController.detail(com.core.web.constant.entity.LoginUser)
[2019-08-28 14:26:39.136] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/conversionTotal],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.ConversionVo> com.common.bittrade.controller.TLegalCurrencyAccountController.totalConversion(com.core.web.constant.entity.LoginUser)
[2019-08-28 14:26:39.137] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getAssetsFeign],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.math.BigDecimal com.common.bittrade.controller.TLegalCurrencyAccountController.getAssetsFeign(java.lang.Long)
[2019-08-28 14:26:39.138] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 14:26:39.138] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 14:26:39.139] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 14:26:39.140] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 14:26:39.141] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 14:26:39.141] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 14:26:39.142] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 14:26:39.143] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 14:26:39.144] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 14:26:39.144] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 14:26:39.145] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 14:26:39.146] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 14:26:39.147] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 14:26:39.147] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 14:26:39.148] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 14:26:39.153] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/legalCurrency_coins],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.common.bittrade.controller.TLegalCurrencyCoinController.listLegalCurrencyCoins()
[2019-08-28 14:26:39.154] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 14:26:39.154] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 14:26:39.155] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 14:26:39.156] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 14:26:39.157] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 14:26:39.157] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 14:26:39.158] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 14:26:39.159] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 14:26:39.160] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 14:26:39.161] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 14:26:39.161] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 14:26:39.162] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 14:26:39.163] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 14:26:39.164] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 14:26:39.165] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 14:26:39.170] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/queryAccountRecord],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.RecordVO>> com.common.bittrade.controller.TLegalCurrencyRecordController.queryAccountRecord(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.AccountTypeDto)
[2019-08-28 14:26:39.171] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/queryType],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetRecordTypeVO>> com.common.bittrade.controller.TLegalCurrencyRecordController.queryTypeForFund()
[2019-08-28 14:26:39.171] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 14:26:39.172] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 14:26:39.173] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 14:26:39.174] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 14:26:39.175] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 14:26:39.175] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 14:26:39.176] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 14:26:39.177] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 14:26:39.178] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 14:26:39.179] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 14:26:39.179] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 14:26:39.181] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 14:26:39.182] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 14:26:39.183] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 14:26:39.183] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 14:26:39.188] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/rechargecoinlist],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO com.common.bittrade.controller.WCoinController.rechargecoinlist()
[2019-08-28 14:26:39.189] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/Withdrawcoinlist],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO com.common.bittrade.controller.WCoinController.withdrawcoinlist()
[2019-08-28 14:26:39.190] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/getList],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.model.WCoin>> com.common.bittrade.controller.WCoinController.getList()
[2019-08-28 14:26:39.191] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccount/detail],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetsVO>> com.common.bittrade.controller.WWalletAccountController.detail(com.core.web.constant.entity.LoginUser)
[2019-08-28 14:26:39.192] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccount/conversionTotal],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.ConversionVo> com.common.bittrade.controller.WWalletAccountController.totalConversion(com.core.web.constant.entity.LoginUser)
[2019-08-28 14:26:39.194] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryFundAccountRecord],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.RecordVO>> com.common.bittrade.controller.WWalletAccountRecordController.queryFundAccountRecord(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.AccountTypeDto)
[2019-08-28 14:26:39.195] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryTypeForFund],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetRecordTypeVO>> com.common.bittrade.controller.WWalletAccountRecordController.queryTypeForFund()
[2019-08-28 14:26:39.196] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryCurrencies],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.model.WCoin>> com.common.bittrade.controller.WWalletAccountRecordController.queryCurrencies()
[2019-08-28 14:26:39.200] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
[2019-08-28 14:26:39.201] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
[2019-08-28 14:26:39.203] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
[2019-08-28 14:26:39.210] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2019-08-28 14:26:39.211] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2019-08-28 14:26:39.272] [WARN ] - [DubboClientReconnectTimer-thread-1][ com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:171)] :  [DUBBO] client reconnect to localhost:20881 find error . url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=6220&register.ip=192.168.1.12&side=consumer&timestamp=1566973595687, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=6220&register.ip=192.168.1.12&side=consumer&timestamp=1566973595687) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:156)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	... 3 common frames omitted
[2019-08-28 14:26:40.881] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Exposing 2 endpoint(s) beneath base path '/actuator'
[2019-08-28 14:26:40.921] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2019-08-28 14:26:40.923] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2019-08-28 14:26:40.924] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2019-08-28 14:26:41.374] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'messageBrokerTaskScheduler'
[2019-08-28 14:26:41.553] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped URL path [/c2c/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
[2019-08-28 14:26:41.585] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'brokerChannelExecutor'
[2019-08-28 14:26:42.036] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[2019-08-28 14:26:42.693] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@20011bf: startup date [Wed Aug 28 14:26:22 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@18e8473e
[2019-08-28 14:26:42.818] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Detected @ExceptionHandler methods in globalExceptionHandler
[2019-08-28 14:26:43.299] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-28 14:26:43.300] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-28 14:26:45.352] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting beans in phase 0
[2019-08-28 14:26:45.353] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting beans in phase 2147483647
[2019-08-28 14:26:45.353] [INFO ] - [main][ springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:151)] : Context refreshed
[2019-08-28 14:26:45.405] [INFO ] - [main][ springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:154)] : Found 1 custom documentation plugin(s)
[2019-08-28 14:26:45.485] [INFO ] - [main][ springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)] : Scanning for api listing references
[2019-08-28 14:26:46.071] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting...
[2019-08-28 14:26:46.072] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
[2019-08-28 14:26:46.074] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Started.
[2019-08-28 14:26:46.095] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Started AdvertInfoTester in 25.614 seconds (JVM running for 28.227)
[2019-08-28 14:27:10.683] [INFO ] - [Thread-2][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$2.run(AwaitingNonWebApplicationListener.java:83)] :  [Dubbo] Current Spring Boot Application is about to shutdown...
[2019-08-28 14:27:10.688] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:64)] :  [DUBBO] Close all registries [], dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:27:10.690] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(DubboProtocol.java:438)] :  [DUBBO] Close dubbo connect: 192.168.1.12:0-->localhost/127.0.0.1:20881, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:27:10.691] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:63)] :  [DUBBO] Destroy reference: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&default.check=false&default.timeout=5000&dubbo=2.6.2&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=6220&register.ip=192.168.1.12&side=consumer&timestamp=1566973595687, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:27:10.704] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:63)] :  [DUBBO] Destroy reference: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyService?application=service-consumer&default.check=false&default.timeout=5000&dubbo=2.6.2&interface=com.bittrade.currency.api.service.ITCurrencyService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getCurrencies,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,findAllLegalCurrency,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,findUsableCurrency,updateById,pageMaps,listByMap,getByPK&pid=6220&register.ip=192.168.1.12&side=consumer&timestamp=1566973597537, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:27:10.827] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:349)] : Initializing Eureka in region us-east-1
[2019-08-28 14:27:11.164] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70)] : Using JSON encoding codec LegacyJacksonJson
[2019-08-28 14:27:11.165] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71)] : Using JSON decoding codec LegacyJacksonJson
[2019-08-28 14:27:11.469] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80)] : Using XML encoding codec XStreamXml
[2019-08-28 14:27:11.470] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81)] : Using XML decoding codec XStreamXml
[2019-08-28 14:27:11.996] [INFO ] - [Thread-8][ com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] : Resolving eureka endpoints via configuration
[2019-08-28 14:27:12.047] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958)] : Disable delta property : false
[2019-08-28 14:27:12.047] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:959)] : Single vip registry refresh property : null
[2019-08-28 14:27:12.048] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960)] : Force full registry fetch : false
[2019-08-28 14:27:12.048] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:961)] : Application is null : false
[2019-08-28 14:27:12.048] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:962)] : Registered Applications size is zero : true
[2019-08-28 14:27:12.048] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:964)] : Application version is -1: true
[2019-08-28 14:27:12.049] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1047)] : Getting all instance registry info from the eureka server
[2019-08-28 14:27:14.208] [ERROR] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83)] : Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$e750a8c0.CGLIB$eurekaClient$1(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$e750a8c0$$FastClassBySpringCGLIB$$412d00b3.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:365)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$e750a8c0.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:583)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1246)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:535)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:193)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 65 common frames omitted
[2019-08-28 14:27:14.221] [WARN ] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:130)] : Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2019-08-28 14:27:14.223] [ERROR] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:972)] : DiscoveryClient_BITTRADE-C2C/192.168.1.12:-1:bittrade-c2c:@project.version@ - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$e750a8c0.CGLIB$eurekaClient$1(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$e750a8c0$$FastClassBySpringCGLIB$$412d00b3.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:365)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$e750a8c0.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:583)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1246)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:535)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:193)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
[2019-08-28 14:27:14.226] [WARN ] - [Thread-8][ com.netflix.discovery.DiscoveryClient$1.get(DiscoveryClient.java:290)] : Using default backup registry implementation which does not do anything.
[2019-08-28 14:27:14.232] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1264)] : Starting heartbeat executor: renew interval is: 30
[2019-08-28 14:27:14.245] [INFO ] - [Thread-8][ com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60)] : InstanceInfoReplicator onDemand update allowed rate per min is 4
[2019-08-28 14:27:14.256] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:449)] : Discovery Client initialized at timestamp 1566973634252 with initial instances count: 0
[2019-08-28 14:27:14.289] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:888)] : Shutting down DiscoveryClient ...
[2019-08-28 14:27:17.291] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:922)] : Unregistering ...
[2019-08-28 14:27:19.301] [ERROR] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83)] : Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:923)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:901)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:246)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:494)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 46 common frames omitted
[2019-08-28 14:27:19.303] [WARN ] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:130)] : Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2019-08-28 14:27:19.304] [ERROR] - [Thread-8][ com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:926)] : DiscoveryClient_BITTRADE-C2C/192.168.1.12:-1:bittrade-c2c:@project.version@ - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:923)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:901)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:246)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:494)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
[2019-08-28 14:27:19.333] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:911)] : Completed shut down of DiscoveryClient
[2019-08-28 14:27:20.115] [INFO ] - [Thread-8][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:1948)] : {dataSource-1} closing ...
[2019-08-28 14:27:20.126] [INFO ] - [Thread-8][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:2020)] : {dataSource-1} closed
[2019-08-28 14:28:24.248] [INFO ] - [main][?#?:?] : using logger: com.alibaba.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[2019-08-28 14:28:24.258] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-28 14:28:24.264] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {}
[2019-08-28 14:28:24.707] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@5305c37d: startup date [Wed Aug 28 14:28:24 CST 2019]; root of context hierarchy
[2019-08-28 14:28:25.225] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-28 14:28:25.312] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$6578dce1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:28:25.526] [INFO ] - [pool-1-thread-1][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$1.run(AwaitingNonWebApplicationListener.java:61)] :  [Dubbo] Current Spring Boot Application is await...
[2019-08-28 14:28:26.060] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-28 14:28:26.062] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {dubbo.application.id=service-consumer, dubbo.application.name=service-consumer, dubbo.consumer.check=false, dubbo.consumer.timeout=5000, dubbo.monitor=, dubbo.protocol.id=dubbo, dubbo.protocol.name=dubbo, dubbo.protocol.port=20884, dubbo.provider.timeout=5000, dubbo.registry.address=N/A, dubbo.registry.check=false, dubbo.registry.id=my-registry, dubbo.registry.protocol=zookeeper, dubbo.scan=}
[2019-08-28 14:28:26.131] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : The following profiles are active: common,data,eureka,dubbo_provider,dubbo_consumer
[2019-08-28 14:28:26.141] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Refreshing org.springframework.web.context.support.GenericWebApplicationContext@6e33fcae: startup date [Wed Aug 28 14:28:26 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@5305c37d
[2019-08-28 14:28:27.886] [WARN ] - [main][ org.mybatis.logging.Logger.warn(Logger.java:44)] : No MyBatis mapper was found in '[com.baomidou.cloud.service.*.mapper*]' package. Please check your configuration.
[2019-08-28 14:28:28.954] [INFO ] - [main][ org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:172)] : Multiple Spring Data modules found, entering strict repository configuration mode!
[2019-08-28 14:28:29.464] [WARN ] - [main][ com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans(ServiceAnnotationBeanPostProcessor.java:155)] :  [DUBBO] No Spring Bean annotating Dubbo's @Service was found under package[com.bittrade.c2c], dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:28:30.039] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : BeanFactory id=61352edb-e99a-3c04-9bd9-f50ca066a043
[2019-08-28 14:28:30.286] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-28 14:28:30.622] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:28:30.637] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionProperties' of type [com.core.framework.props.TransactionProperties$$EnhancerBySpringCGLIB$$5aa79c8a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:28:30.653] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$630acf56] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:28:30.660] [INFO ] - [main][ com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource(DruidDataSourceAutoConfigure.java:56)] : Init DruidDataSource
[2019-08-28 14:28:30.811] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:28:30.991] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003)] : {dataSource-1} inited
[2019-08-28 14:28:30.993] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:28:31.033] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:28:31.053] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$$EnhancerBySpringCGLIB$$ddd2d4ee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:28:31.083] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:28:31.091] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:28:31.101] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration$$EnhancerBySpringCGLIB$$f65f7253] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:28:31.144] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:28:31.145] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionConfig' of type [com.core.framework.config.TransactionConfig$$EnhancerBySpringCGLIB$$4f63572f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:28:31.178] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'defaultPointcutAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:28:31.202] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$495ed9e4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:28:31.583] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' of type [com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration$$EnhancerBySpringCGLIB$$58607f56] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:28:31.601] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:28:31.613] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:28:31.619] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:28:31.624] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:28:31.628] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:28:31.701] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$6578dce1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:28:36.796] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'clientInboundChannelExecutor'
[2019-08-28 14:28:36.831] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'clientOutboundChannelExecutor'
[2019-08-28 14:28:37.380] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService
[2019-08-28 14:28:37.676] [INFO ] - [main][ com.core.framework.config.redis.JedisClusterConfig.getJedisCluster(JedisClusterConfig.java:35)] : 进入redis集群初始化方法：访问集群地址为：[154.222.138.5:7000, 154.222.138.5:7001, 154.222.138.5:7002, 154.222.138.5:7003, 154.222.138.5:7004, 154.222.138.5:7005]
[2019-08-28 14:28:39.300] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyTradeServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:28:40.951] [WARN ] - [main][ com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:98)] :  [DUBBO] Failed to start NettyClient HAHE/192.168.1.12 connect to the server localhost/127.0.0.1:20881 (check == false, ignore and retry later!), cause: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=6748&register.ip=192.168.1.12&side=consumer&timestamp=1566973719302) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=6748&register.ip=192.168.1.12&side=consumer&timestamp=1566973719302) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:89)
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.<init>(NettyClient.java:59)
	at com.alibaba.dubbo.remoting.transport.netty.NettyTransporter.connect(NettyTransporter.java:37)
	at com.alibaba.dubbo.remoting.Transporter$Adaptive.connect(Transporter$Adaptive.java)
	at com.alibaba.dubbo.remoting.Transporters.connect(Transporters.java:75)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchanger.connect(HeaderExchanger.java:39)
	at com.alibaba.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:109)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.initClient(DubboProtocol.java:409)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getSharedClient(DubboProtocol.java:377)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getClients(DubboProtocol.java:354)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.refer(DubboProtocol.java:336)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:67)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:108)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:65)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:394)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:333)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:163)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:66)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceFieldElement.inject(ReferenceAnnotationBeanPostProcessor.java:367)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.postProcessPropertyValues(ReferenceAnnotationBeanPostProcessor.java:92)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:759)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:548)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:386)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:89)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:41)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:541)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:763)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:463)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:209)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-08-28 14:28:41.146] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:28:42.325] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-28 14:28:42.326] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-28 14:28:42.362] [INFO ] - [main][ com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281)] : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@346a2799
[2019-08-28 14:28:42.668] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/sendMessage],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.sendMessage(com.bittrade.c2c.vo.SendVo)
[2019-08-28 14:28:42.675] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/sendOrder],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.pullOrderDetail(com.bittrade.c2c.vo.SendOrderVo)
[2019-08-28 14:28:42.677] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/pullUnreadMessage],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.pullMessage(java.lang.Long)
[2019-08-28 14:28:42.693] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.listAdverts(com.core.common.DTO.PageDTO<com.bittrade.pojo.dto.TAdvertInfoDTO>,com.bittrade.pojo.vo.QueryAdvertVO,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:28:42.694] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/place_advert_order/{advert_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.placeAdvertOrder(java.lang.Long,java.math.BigDecimal,java.lang.String,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:28:42.695] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts/details/{advert_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.getAdvertDetails(java.lang.Long)
[2019-08-28 14:28:42.696] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/publish_advert],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.publishAdvert(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.TAdvertInfoDTO)
[2019-08-28 14:28:42.697] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/revoke/{advert_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.revokeAdverts(java.lang.Long,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:28:42.698] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/suspend],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.suspendAdverts(java.util.List<java.lang.Long>,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:28:42.699] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts/users/{coin_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.listAdvertsUsers(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.AdvertUserVO>,java.lang.Long,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:28:42.700] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 14:28:42.701] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 14:28:42.702] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 14:28:42.703] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 14:28:42.704] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 14:28:42.705] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 14:28:42.706] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 14:28:42.707] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 14:28:42.708] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 14:28:42.709] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 14:28:42.710] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 14:28:42.710] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 14:28:42.711] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 14:28:42.712] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 14:28:42.713] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 14:28:42.721] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/details/{order_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.getAdvertOrderDetails(java.lang.Long)
[2019-08-28 14:28:42.722] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/click_already_paid/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.clickAlreadyPaid(java.lang.Long)
[2019-08-28 14:28:42.723] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/already_complete],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.alreadyCompleteAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:28:42.724] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/already_cancel],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.alreadyCancelAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:28:42.725] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/cancel/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.cancelAdvertOrder(java.lang.Long)
[2019-08-28 14:28:42.726] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/click_already_receipt/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.clickAlreadyReceipt(java.lang.Long)
[2019-08-28 14:28:42.726] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/no_complete],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.noCompleteAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:28:42.727] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 14:28:42.728] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 14:28:42.729] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 14:28:42.730] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 14:28:42.731] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 14:28:42.732] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 14:28:42.733] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 14:28:42.734] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 14:28:42.735] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 14:28:42.735] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 14:28:42.736] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 14:28:42.737] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 14:28:42.738] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 14:28:42.739] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 14:28:42.740] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 14:28:42.747] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/conversionTotal],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.ConversionVo> com.common.bittrade.controller.TLegalCurrencyAccountController.totalConversion(com.core.web.constant.entity.LoginUser)
[2019-08-28 14:28:42.748] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getAssetsFeign],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.math.BigDecimal com.common.bittrade.controller.TLegalCurrencyAccountController.getAssetsFeign(java.lang.Long)
[2019-08-28 14:28:42.749] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/detail],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetsVO>> com.common.bittrade.controller.TLegalCurrencyAccountController.detail(com.core.web.constant.entity.LoginUser)
[2019-08-28 14:28:42.750] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/availableBalanceFeign],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.lang.String com.common.bittrade.controller.TLegalCurrencyAccountController.availableBalanceFeign(java.lang.Long,java.lang.String)
[2019-08-28 14:28:42.751] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 14:28:42.752] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 14:28:42.752] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 14:28:42.753] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 14:28:42.754] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 14:28:42.755] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 14:28:42.756] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 14:28:42.756] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 14:28:42.757] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 14:28:42.758] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 14:28:42.759] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 14:28:42.759] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 14:28:42.760] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 14:28:42.761] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 14:28:42.762] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 14:28:42.768] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/legalCurrency_coins],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.common.bittrade.controller.TLegalCurrencyCoinController.listLegalCurrencyCoins()
[2019-08-28 14:28:42.769] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 14:28:42.770] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 14:28:42.771] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 14:28:42.772] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 14:28:42.773] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 14:28:42.774] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 14:28:42.775] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 14:28:42.776] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 14:28:42.777] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 14:28:42.778] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 14:28:42.779] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 14:28:42.780] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 14:28:42.781] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 14:28:42.781] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 14:28:42.782] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 14:28:42.788] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/queryType],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetRecordTypeVO>> com.common.bittrade.controller.TLegalCurrencyRecordController.queryTypeForFund()
[2019-08-28 14:28:42.790] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/queryAccountRecord],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.RecordVO>> com.common.bittrade.controller.TLegalCurrencyRecordController.queryAccountRecord(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.AccountTypeDto)
[2019-08-28 14:28:42.791] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 14:28:42.791] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 14:28:42.792] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 14:28:42.793] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 14:28:42.795] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 14:28:42.795] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 14:28:42.796] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 14:28:42.797] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 14:28:42.798] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 14:28:42.798] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 14:28:42.799] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 14:28:42.801] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 14:28:42.802] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 14:28:42.802] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 14:28:42.803] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 14:28:42.809] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/getList],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.model.WCoin>> com.common.bittrade.controller.WCoinController.getList()
[2019-08-28 14:28:42.810] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/Withdrawcoinlist],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO com.common.bittrade.controller.WCoinController.withdrawcoinlist()
[2019-08-28 14:28:42.810] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/rechargecoinlist],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO com.common.bittrade.controller.WCoinController.rechargecoinlist()
[2019-08-28 14:28:42.812] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccount/conversionTotal],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.ConversionVo> com.common.bittrade.controller.WWalletAccountController.totalConversion(com.core.web.constant.entity.LoginUser)
[2019-08-28 14:28:42.813] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccount/detail],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetsVO>> com.common.bittrade.controller.WWalletAccountController.detail(com.core.web.constant.entity.LoginUser)
[2019-08-28 14:28:42.816] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryTypeForFund],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetRecordTypeVO>> com.common.bittrade.controller.WWalletAccountRecordController.queryTypeForFund()
[2019-08-28 14:28:42.817] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryCurrencies],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.model.WCoin>> com.common.bittrade.controller.WWalletAccountRecordController.queryCurrencies()
[2019-08-28 14:28:42.817] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryFundAccountRecord],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.RecordVO>> com.common.bittrade.controller.WWalletAccountRecordController.queryFundAccountRecord(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.AccountTypeDto)
[2019-08-28 14:28:42.824] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
[2019-08-28 14:28:42.825] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
[2019-08-28 14:28:42.827] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
[2019-08-28 14:28:42.833] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2019-08-28 14:28:42.834] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2019-08-28 14:28:42.885] [WARN ] - [DubboClientReconnectTimer-thread-1][ com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:171)] :  [DUBBO] client reconnect to localhost:20881 find error . url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=6748&register.ip=192.168.1.12&side=consumer&timestamp=1566973719302, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=6748&register.ip=192.168.1.12&side=consumer&timestamp=1566973719302) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:156)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	... 3 common frames omitted
[2019-08-28 14:28:44.528] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Exposing 2 endpoint(s) beneath base path '/actuator'
[2019-08-28 14:28:44.570] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2019-08-28 14:28:44.572] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2019-08-28 14:28:44.573] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2019-08-28 14:28:45.047] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'messageBrokerTaskScheduler'
[2019-08-28 14:28:45.179] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped URL path [/c2c/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
[2019-08-28 14:28:45.215] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'brokerChannelExecutor'
[2019-08-28 14:28:45.636] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[2019-08-28 14:28:46.202] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@6e33fcae: startup date [Wed Aug 28 14:28:26 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@5305c37d
[2019-08-28 14:28:46.307] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Detected @ExceptionHandler methods in globalExceptionHandler
[2019-08-28 14:28:46.781] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-28 14:28:46.782] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-28 14:28:48.750] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting beans in phase 0
[2019-08-28 14:28:48.751] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting beans in phase 2147483647
[2019-08-28 14:28:48.751] [INFO ] - [main][ springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:151)] : Context refreshed
[2019-08-28 14:28:48.799] [INFO ] - [main][ springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:154)] : Found 1 custom documentation plugin(s)
[2019-08-28 14:28:48.871] [INFO ] - [main][ springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)] : Scanning for api listing references
[2019-08-28 14:28:49.456] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting...
[2019-08-28 14:28:49.457] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
[2019-08-28 14:28:49.458] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Started.
[2019-08-28 14:28:49.479] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Started AdvertInfoTester in 25.579 seconds (JVM running for 28.165)
[2019-08-28 14:29:09.621] [INFO ] - [main][?#?:?] : using logger: com.alibaba.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[2019-08-28 14:29:09.634] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-28 14:29:09.640] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {}
[2019-08-28 14:29:10.111] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@cc62a3b: startup date [Wed Aug 28 14:29:10 CST 2019]; root of context hierarchy
[2019-08-28 14:29:10.649] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-28 14:29:10.740] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$33f5845c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:29:10.961] [INFO ] - [pool-1-thread-1][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$1.run(AwaitingNonWebApplicationListener.java:61)] :  [Dubbo] Current Spring Boot Application is await...
[2019-08-28 14:29:11.596] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-28 14:29:11.597] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {dubbo.application.id=service-consumer, dubbo.application.name=service-consumer, dubbo.consumer.check=false, dubbo.consumer.timeout=5000, dubbo.monitor=, dubbo.protocol.id=dubbo, dubbo.protocol.name=dubbo, dubbo.protocol.port=20884, dubbo.provider.timeout=5000, dubbo.registry.address=N/A, dubbo.registry.check=false, dubbo.registry.id=my-registry, dubbo.registry.protocol=zookeeper, dubbo.scan=}
[2019-08-28 14:29:11.670] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : The following profiles are active: common,data,eureka,dubbo_provider,dubbo_consumer
[2019-08-28 14:29:11.680] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Refreshing org.springframework.web.context.support.GenericWebApplicationContext@6ec65b5e: startup date [Wed Aug 28 14:29:11 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@cc62a3b
[2019-08-28 14:29:13.323] [WARN ] - [main][ org.mybatis.logging.Logger.warn(Logger.java:44)] : No MyBatis mapper was found in '[com.baomidou.cloud.service.*.mapper*]' package. Please check your configuration.
[2019-08-28 14:29:14.261] [INFO ] - [main][ org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:172)] : Multiple Spring Data modules found, entering strict repository configuration mode!
[2019-08-28 14:29:14.679] [WARN ] - [main][ com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans(ServiceAnnotationBeanPostProcessor.java:155)] :  [DUBBO] No Spring Bean annotating Dubbo's @Service was found under package[com.bittrade.c2c], dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:29:15.154] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : BeanFactory id=61352edb-e99a-3c04-9bd9-f50ca066a043
[2019-08-28 14:29:15.390] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-28 14:29:15.732] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:29:15.746] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionProperties' of type [com.core.framework.props.TransactionProperties$$EnhancerBySpringCGLIB$$29244405] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:29:15.763] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$318776d1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:29:15.769] [INFO ] - [main][ com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource(DruidDataSourceAutoConfigure.java:56)] : Init DruidDataSource
[2019-08-28 14:29:15.907] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:29:16.117] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003)] : {dataSource-1} inited
[2019-08-28 14:29:16.118] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:29:16.158] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:29:16.173] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$$EnhancerBySpringCGLIB$$ac4f7c69] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:29:16.197] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:29:16.205] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:29:16.215] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration$$EnhancerBySpringCGLIB$$c4dc19ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:29:16.268] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:29:16.270] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionConfig' of type [com.core.framework.config.TransactionConfig$$EnhancerBySpringCGLIB$$1ddffeaa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:29:16.311] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'defaultPointcutAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:29:16.337] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$17db815f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:29:16.726] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' of type [com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration$$EnhancerBySpringCGLIB$$26dd26d1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:29:16.745] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:29:16.755] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:29:16.759] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:29:16.763] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:29:16.767] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:29:16.832] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$33f5845c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:29:22.039] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'clientInboundChannelExecutor'
[2019-08-28 14:29:22.083] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'clientOutboundChannelExecutor'
[2019-08-28 14:29:22.687] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService
[2019-08-28 14:29:22.986] [INFO ] - [main][ com.core.framework.config.redis.JedisClusterConfig.getJedisCluster(JedisClusterConfig.java:35)] : 进入redis集群初始化方法：访问集群地址为：[154.222.138.5:7000, 154.222.138.5:7001, 154.222.138.5:7002, 154.222.138.5:7003, 154.222.138.5:7004, 154.222.138.5:7005]
[2019-08-28 14:29:24.678] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyTradeServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:29:26.320] [WARN ] - [main][ com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:98)] :  [DUBBO] Failed to start NettyClient HAHE/192.168.1.12 connect to the server localhost/127.0.0.1:20881 (check == false, ignore and retry later!), cause: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=436&register.ip=192.168.1.12&side=consumer&timestamp=1566973764680) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=436&register.ip=192.168.1.12&side=consumer&timestamp=1566973764680) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:89)
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.<init>(NettyClient.java:59)
	at com.alibaba.dubbo.remoting.transport.netty.NettyTransporter.connect(NettyTransporter.java:37)
	at com.alibaba.dubbo.remoting.Transporter$Adaptive.connect(Transporter$Adaptive.java)
	at com.alibaba.dubbo.remoting.Transporters.connect(Transporters.java:75)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchanger.connect(HeaderExchanger.java:39)
	at com.alibaba.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:109)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.initClient(DubboProtocol.java:409)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getSharedClient(DubboProtocol.java:377)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getClients(DubboProtocol.java:354)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.refer(DubboProtocol.java:336)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:108)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:67)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:65)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:394)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:333)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:163)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:66)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceFieldElement.inject(ReferenceAnnotationBeanPostProcessor.java:367)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.postProcessPropertyValues(ReferenceAnnotationBeanPostProcessor.java:92)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:759)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:548)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:386)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:89)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:41)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:541)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:763)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:463)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:209)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-08-28 14:29:26.514] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:29:27.709] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-28 14:29:27.709] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-28 14:29:27.743] [INFO ] - [main][ com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281)] : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@43b3b1b0
[2019-08-28 14:29:28.052] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/sendMessage],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.sendMessage(com.bittrade.c2c.vo.SendVo)
[2019-08-28 14:29:28.054] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/pullUnreadMessage],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.pullMessage(java.lang.Long)
[2019-08-28 14:29:28.055] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/sendOrder],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.pullOrderDetail(com.bittrade.c2c.vo.SendOrderVo)
[2019-08-28 14:29:28.069] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/publish_advert],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.publishAdvert(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.TAdvertInfoDTO)
[2019-08-28 14:29:28.070] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/revoke/{advert_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.revokeAdverts(java.lang.Long,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:29:28.071] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts/details/{advert_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.getAdvertDetails(java.lang.Long)
[2019-08-28 14:29:28.072] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts/users/{coin_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.listAdvertsUsers(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.AdvertUserVO>,java.lang.Long,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:29:28.073] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/suspend],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.suspendAdverts(java.util.List<java.lang.Long>,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:29:28.074] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/place_advert_order/{advert_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.placeAdvertOrder(java.lang.Long,java.math.BigDecimal,java.lang.String,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:29:28.075] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.listAdverts(com.core.common.DTO.PageDTO<com.bittrade.pojo.dto.TAdvertInfoDTO>,com.bittrade.pojo.vo.QueryAdvertVO,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:29:28.076] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 14:29:28.077] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 14:29:28.078] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 14:29:28.079] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 14:29:28.080] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 14:29:28.080] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 14:29:28.081] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 14:29:28.082] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 14:29:28.083] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 14:29:28.084] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 14:29:28.085] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 14:29:28.085] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 14:29:28.086] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 14:29:28.087] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 14:29:28.088] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 14:29:28.095] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/details/{order_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.getAdvertOrderDetails(java.lang.Long)
[2019-08-28 14:29:28.096] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/cancel/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.cancelAdvertOrder(java.lang.Long)
[2019-08-28 14:29:28.097] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/already_cancel],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.alreadyCancelAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:29:28.098] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/already_complete],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.alreadyCompleteAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:29:28.099] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/no_complete],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.noCompleteAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:29:28.100] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/click_already_receipt/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.clickAlreadyReceipt(java.lang.Long)
[2019-08-28 14:29:28.101] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/click_already_paid/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.clickAlreadyPaid(java.lang.Long)
[2019-08-28 14:29:28.102] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 14:29:28.103] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 14:29:28.104] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 14:29:28.105] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 14:29:28.106] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 14:29:28.107] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 14:29:28.108] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 14:29:28.110] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 14:29:28.111] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 14:29:28.112] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 14:29:28.113] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 14:29:28.113] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 14:29:28.114] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 14:29:28.115] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 14:29:28.116] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 14:29:28.122] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/detail],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetsVO>> com.common.bittrade.controller.TLegalCurrencyAccountController.detail(com.core.web.constant.entity.LoginUser)
[2019-08-28 14:29:28.123] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getAssetsFeign],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.math.BigDecimal com.common.bittrade.controller.TLegalCurrencyAccountController.getAssetsFeign(java.lang.Long)
[2019-08-28 14:29:28.124] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/conversionTotal],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.ConversionVo> com.common.bittrade.controller.TLegalCurrencyAccountController.totalConversion(com.core.web.constant.entity.LoginUser)
[2019-08-28 14:29:28.124] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/availableBalanceFeign],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.lang.String com.common.bittrade.controller.TLegalCurrencyAccountController.availableBalanceFeign(java.lang.Long,java.lang.String)
[2019-08-28 14:29:28.125] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 14:29:28.126] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 14:29:28.127] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 14:29:28.128] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 14:29:28.129] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 14:29:28.130] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 14:29:28.131] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 14:29:28.131] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 14:29:28.132] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 14:29:28.133] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 14:29:28.134] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 14:29:28.135] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 14:29:28.137] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 14:29:28.138] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 14:29:28.140] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 14:29:28.144] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/legalCurrency_coins],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.common.bittrade.controller.TLegalCurrencyCoinController.listLegalCurrencyCoins()
[2019-08-28 14:29:28.146] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 14:29:28.146] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 14:29:28.147] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 14:29:28.148] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 14:29:28.149] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 14:29:28.150] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 14:29:28.151] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 14:29:28.152] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 14:29:28.152] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 14:29:28.153] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 14:29:28.154] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 14:29:28.155] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 14:29:28.156] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 14:29:28.157] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 14:29:28.158] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 14:29:28.164] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/queryType],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetRecordTypeVO>> com.common.bittrade.controller.TLegalCurrencyRecordController.queryTypeForFund()
[2019-08-28 14:29:28.165] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/queryAccountRecord],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.RecordVO>> com.common.bittrade.controller.TLegalCurrencyRecordController.queryAccountRecord(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.AccountTypeDto)
[2019-08-28 14:29:28.166] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 14:29:28.166] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 14:29:28.167] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 14:29:28.168] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 14:29:28.169] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 14:29:28.170] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 14:29:28.171] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 14:29:28.171] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 14:29:28.172] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 14:29:28.173] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 14:29:28.174] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 14:29:28.176] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 14:29:28.177] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 14:29:28.177] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 14:29:28.178] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 14:29:28.184] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/getList],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.model.WCoin>> com.common.bittrade.controller.WCoinController.getList()
[2019-08-28 14:29:28.185] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/rechargecoinlist],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO com.common.bittrade.controller.WCoinController.rechargecoinlist()
[2019-08-28 14:29:28.186] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/Withdrawcoinlist],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO com.common.bittrade.controller.WCoinController.withdrawcoinlist()
[2019-08-28 14:29:28.188] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccount/detail],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetsVO>> com.common.bittrade.controller.WWalletAccountController.detail(com.core.web.constant.entity.LoginUser)
[2019-08-28 14:29:28.190] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccount/conversionTotal],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.ConversionVo> com.common.bittrade.controller.WWalletAccountController.totalConversion(com.core.web.constant.entity.LoginUser)
[2019-08-28 14:29:28.193] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryCurrencies],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.model.WCoin>> com.common.bittrade.controller.WWalletAccountRecordController.queryCurrencies()
[2019-08-28 14:29:28.194] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryTypeForFund],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetRecordTypeVO>> com.common.bittrade.controller.WWalletAccountRecordController.queryTypeForFund()
[2019-08-28 14:29:28.195] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryFundAccountRecord],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.RecordVO>> com.common.bittrade.controller.WWalletAccountRecordController.queryFundAccountRecord(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.AccountTypeDto)
[2019-08-28 14:29:28.202] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
[2019-08-28 14:29:28.204] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
[2019-08-28 14:29:28.205] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
[2019-08-28 14:29:28.213] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2019-08-28 14:29:28.214] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2019-08-28 14:29:28.256] [WARN ] - [DubboClientReconnectTimer-thread-1][ com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:171)] :  [DUBBO] client reconnect to localhost:20881 find error . url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=436&register.ip=192.168.1.12&side=consumer&timestamp=1566973764680, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=436&register.ip=192.168.1.12&side=consumer&timestamp=1566973764680) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:156)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	... 3 common frames omitted
[2019-08-28 14:29:29.925] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Exposing 2 endpoint(s) beneath base path '/actuator'
[2019-08-28 14:29:29.966] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2019-08-28 14:29:29.968] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2019-08-28 14:29:29.969] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2019-08-28 14:29:30.438] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'messageBrokerTaskScheduler'
[2019-08-28 14:29:30.601] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped URL path [/c2c/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
[2019-08-28 14:29:30.632] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'brokerChannelExecutor'
[2019-08-28 14:29:31.044] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[2019-08-28 14:29:31.613] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@6ec65b5e: startup date [Wed Aug 28 14:29:11 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@cc62a3b
[2019-08-28 14:29:31.721] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Detected @ExceptionHandler methods in globalExceptionHandler
[2019-08-28 14:29:32.209] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-28 14:29:32.210] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-28 14:29:34.205] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting beans in phase 0
[2019-08-28 14:29:34.206] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting beans in phase 2147483647
[2019-08-28 14:29:34.206] [INFO ] - [main][ springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:151)] : Context refreshed
[2019-08-28 14:29:34.254] [INFO ] - [main][ springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:154)] : Found 1 custom documentation plugin(s)
[2019-08-28 14:29:34.328] [INFO ] - [main][ springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)] : Scanning for api listing references
[2019-08-28 14:29:34.930] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting...
[2019-08-28 14:29:34.931] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
[2019-08-28 14:29:34.933] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Started.
[2019-08-28 14:29:34.957] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Started AdvertInfoTester in 25.713 seconds (JVM running for 28.41)
[2019-08-28 14:30:37.492] [INFO ] - [main][?#?:?] : using logger: com.alibaba.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[2019-08-28 14:30:37.503] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-28 14:30:37.509] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {}
[2019-08-28 14:30:37.944] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3ad394e6: startup date [Wed Aug 28 14:30:37 CST 2019]; root of context hierarchy
[2019-08-28 14:30:38.463] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-28 14:30:38.553] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c93a973e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:30:38.779] [INFO ] - [pool-1-thread-1][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$1.run(AwaitingNonWebApplicationListener.java:61)] :  [Dubbo] Current Spring Boot Application is await...
[2019-08-28 14:30:39.332] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-28 14:30:39.333] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {dubbo.application.id=service-consumer, dubbo.application.name=service-consumer, dubbo.consumer.check=false, dubbo.consumer.timeout=5000, dubbo.monitor=, dubbo.protocol.id=dubbo, dubbo.protocol.name=dubbo, dubbo.protocol.port=20884, dubbo.provider.timeout=5000, dubbo.registry.address=N/A, dubbo.registry.check=false, dubbo.registry.id=my-registry, dubbo.registry.protocol=zookeeper, dubbo.scan=}
[2019-08-28 14:30:39.412] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : The following profiles are active: common,data,eureka,dubbo_provider,dubbo_consumer
[2019-08-28 14:30:39.421] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Refreshing org.springframework.web.context.support.GenericWebApplicationContext@fb6097b: startup date [Wed Aug 28 14:30:39 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3ad394e6
[2019-08-28 14:30:41.070] [WARN ] - [main][ org.mybatis.logging.Logger.warn(Logger.java:44)] : No MyBatis mapper was found in '[com.baomidou.cloud.service.*.mapper*]' package. Please check your configuration.
[2019-08-28 14:30:42.060] [INFO ] - [main][ org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:172)] : Multiple Spring Data modules found, entering strict repository configuration mode!
[2019-08-28 14:30:42.575] [WARN ] - [main][ com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans(ServiceAnnotationBeanPostProcessor.java:155)] :  [DUBBO] No Spring Bean annotating Dubbo's @Service was found under package[com.bittrade.c2c], dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:30:43.112] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : BeanFactory id=61352edb-e99a-3c04-9bd9-f50ca066a043
[2019-08-28 14:30:43.371] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-28 14:30:43.710] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:30:43.728] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionProperties' of type [com.core.framework.props.TransactionProperties$$EnhancerBySpringCGLIB$$be6956e7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:30:43.746] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$c6cc89b3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:30:43.752] [INFO ] - [main][ com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource(DruidDataSourceAutoConfigure.java:56)] : Init DruidDataSource
[2019-08-28 14:30:43.896] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:30:44.080] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003)] : {dataSource-1} inited
[2019-08-28 14:30:44.082] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:30:44.121] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:30:44.135] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$$EnhancerBySpringCGLIB$$41948f4b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:30:44.157] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:30:44.164] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:30:44.174] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration$$EnhancerBySpringCGLIB$$5a212cb0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:30:44.219] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:30:44.222] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionConfig' of type [com.core.framework.config.TransactionConfig$$EnhancerBySpringCGLIB$$b325118c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:30:44.255] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'defaultPointcutAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:30:44.280] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ad209441] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:30:44.650] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' of type [com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration$$EnhancerBySpringCGLIB$$bc2239b3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:30:44.668] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:30:44.678] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:30:44.682] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:30:44.685] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:30:44.689] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:30:44.758] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c93a973e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:30:50.063] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'clientInboundChannelExecutor'
[2019-08-28 14:30:50.100] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'clientOutboundChannelExecutor'
[2019-08-28 14:30:50.916] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService
[2019-08-28 14:30:51.210] [INFO ] - [main][ com.core.framework.config.redis.JedisClusterConfig.getJedisCluster(JedisClusterConfig.java:35)] : 进入redis集群初始化方法：访问集群地址为：[154.222.138.5:7000, 154.222.138.5:7001, 154.222.138.5:7002, 154.222.138.5:7003, 154.222.138.5:7004, 154.222.138.5:7005]
[2019-08-28 14:30:52.923] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyTradeServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:30:54.646] [WARN ] - [main][ com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:98)] :  [DUBBO] Failed to start NettyClient HAHE/192.168.1.12 connect to the server localhost/127.0.0.1:20881 (check == false, ignore and retry later!), cause: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=7072&register.ip=192.168.1.12&side=consumer&timestamp=1566973852925) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=7072&register.ip=192.168.1.12&side=consumer&timestamp=1566973852925) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:89)
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.<init>(NettyClient.java:59)
	at com.alibaba.dubbo.remoting.transport.netty.NettyTransporter.connect(NettyTransporter.java:37)
	at com.alibaba.dubbo.remoting.Transporter$Adaptive.connect(Transporter$Adaptive.java)
	at com.alibaba.dubbo.remoting.Transporters.connect(Transporters.java:75)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchanger.connect(HeaderExchanger.java:39)
	at com.alibaba.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:109)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.initClient(DubboProtocol.java:409)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getSharedClient(DubboProtocol.java:377)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getClients(DubboProtocol.java:354)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.refer(DubboProtocol.java:336)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:67)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:108)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:65)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:394)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:333)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:163)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:66)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceFieldElement.inject(ReferenceAnnotationBeanPostProcessor.java:367)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.postProcessPropertyValues(ReferenceAnnotationBeanPostProcessor.java:92)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:759)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:548)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:386)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:89)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:41)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:541)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:763)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:463)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:209)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-08-28 14:30:54.833] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:30:56.060] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-28 14:30:56.061] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-28 14:30:56.100] [INFO ] - [main][ com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281)] : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@25c06894
[2019-08-28 14:30:56.447] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/sendMessage],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.sendMessage(com.bittrade.c2c.vo.SendVo)
[2019-08-28 14:30:56.451] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/pullUnreadMessage],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.pullMessage(java.lang.Long)
[2019-08-28 14:30:56.452] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/sendOrder],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.pullOrderDetail(com.bittrade.c2c.vo.SendOrderVo)
[2019-08-28 14:30:56.466] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/publish_advert],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.publishAdvert(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.TAdvertInfoDTO)
[2019-08-28 14:30:56.467] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts/users/{coin_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.listAdvertsUsers(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.AdvertUserVO>,java.lang.Long,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:30:56.469] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/suspend],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.suspendAdverts(java.util.List<java.lang.Long>,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:30:56.470] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/revoke/{advert_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.revokeAdverts(java.lang.Long,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:30:56.471] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts/details/{advert_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.getAdvertDetails(java.lang.Long)
[2019-08-28 14:30:56.472] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/place_advert_order/{advert_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.placeAdvertOrder(java.lang.Long,java.math.BigDecimal,java.lang.String,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:30:56.473] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.listAdverts(com.core.common.DTO.PageDTO<com.bittrade.pojo.dto.TAdvertInfoDTO>,com.bittrade.pojo.vo.QueryAdvertVO,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:30:56.474] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 14:30:56.475] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 14:30:56.476] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 14:30:56.476] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 14:30:56.477] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 14:30:56.478] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 14:30:56.479] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 14:30:56.480] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 14:30:56.481] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 14:30:56.482] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 14:30:56.483] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 14:30:56.484] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 14:30:56.485] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 14:30:56.486] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 14:30:56.487] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 14:30:56.494] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/details/{order_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.getAdvertOrderDetails(java.lang.Long)
[2019-08-28 14:30:56.496] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/click_already_paid/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.clickAlreadyPaid(java.lang.Long)
[2019-08-28 14:30:56.497] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/no_complete],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.noCompleteAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:30:56.497] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/already_complete],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.alreadyCompleteAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:30:56.498] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/already_cancel],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.alreadyCancelAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:30:56.499] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/cancel/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.cancelAdvertOrder(java.lang.Long)
[2019-08-28 14:30:56.500] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/click_already_receipt/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.clickAlreadyReceipt(java.lang.Long)
[2019-08-28 14:30:56.501] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 14:30:56.502] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 14:30:56.503] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 14:30:56.503] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 14:30:56.504] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 14:30:56.505] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 14:30:56.506] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 14:30:56.507] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 14:30:56.507] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 14:30:56.508] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 14:30:56.509] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 14:30:56.510] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 14:30:56.511] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 14:30:56.512] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 14:30:56.512] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 14:30:56.520] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/detail],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetsVO>> com.common.bittrade.controller.TLegalCurrencyAccountController.detail(com.core.web.constant.entity.LoginUser)
[2019-08-28 14:30:56.521] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/conversionTotal],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.ConversionVo> com.common.bittrade.controller.TLegalCurrencyAccountController.totalConversion(com.core.web.constant.entity.LoginUser)
[2019-08-28 14:30:56.522] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getAssetsFeign],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.math.BigDecimal com.common.bittrade.controller.TLegalCurrencyAccountController.getAssetsFeign(java.lang.Long)
[2019-08-28 14:30:56.523] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/availableBalanceFeign],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.lang.String com.common.bittrade.controller.TLegalCurrencyAccountController.availableBalanceFeign(java.lang.Long,java.lang.String)
[2019-08-28 14:30:56.524] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 14:30:56.524] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 14:30:56.525] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 14:30:56.526] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 14:30:56.527] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 14:30:56.528] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 14:30:56.528] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 14:30:56.529] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 14:30:56.530] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 14:30:56.531] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 14:30:56.532] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 14:30:56.532] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 14:30:56.533] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 14:30:56.534] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 14:30:56.535] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 14:30:56.539] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/legalCurrency_coins],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.common.bittrade.controller.TLegalCurrencyCoinController.listLegalCurrencyCoins()
[2019-08-28 14:30:56.540] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 14:30:56.542] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 14:30:56.543] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 14:30:56.543] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 14:30:56.544] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 14:30:56.545] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 14:30:56.547] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 14:30:56.547] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 14:30:56.548] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 14:30:56.549] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 14:30:56.550] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 14:30:56.550] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 14:30:56.551] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 14:30:56.552] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 14:30:56.553] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 14:30:56.558] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/queryType],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetRecordTypeVO>> com.common.bittrade.controller.TLegalCurrencyRecordController.queryTypeForFund()
[2019-08-28 14:30:56.559] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/queryAccountRecord],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.RecordVO>> com.common.bittrade.controller.TLegalCurrencyRecordController.queryAccountRecord(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.AccountTypeDto)
[2019-08-28 14:30:56.560] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 14:30:56.560] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 14:30:56.561] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 14:30:56.562] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 14:30:56.563] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 14:30:56.563] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 14:30:56.564] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 14:30:56.565] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 14:30:56.566] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 14:30:56.566] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 14:30:56.567] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 14:30:56.569] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 14:30:56.570] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 14:30:56.570] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 14:30:56.571] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 14:30:56.576] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/getList],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.model.WCoin>> com.common.bittrade.controller.WCoinController.getList()
[2019-08-28 14:30:56.577] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/rechargecoinlist],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO com.common.bittrade.controller.WCoinController.rechargecoinlist()
[2019-08-28 14:30:56.578] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/Withdrawcoinlist],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO com.common.bittrade.controller.WCoinController.withdrawcoinlist()
[2019-08-28 14:30:56.580] [WARN ] - [DubboClientReconnectTimer-thread-1][ com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:171)] :  [DUBBO] client reconnect to localhost:20881 find error . url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=7072&register.ip=192.168.1.12&side=consumer&timestamp=1566973852925, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=7072&register.ip=192.168.1.12&side=consumer&timestamp=1566973852925) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:156)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	... 3 common frames omitted
[2019-08-28 14:30:56.581] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccount/detail],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetsVO>> com.common.bittrade.controller.WWalletAccountController.detail(com.core.web.constant.entity.LoginUser)
[2019-08-28 14:30:56.582] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccount/conversionTotal],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.ConversionVo> com.common.bittrade.controller.WWalletAccountController.totalConversion(com.core.web.constant.entity.LoginUser)
[2019-08-28 14:30:56.585] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryCurrencies],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.model.WCoin>> com.common.bittrade.controller.WWalletAccountRecordController.queryCurrencies()
[2019-08-28 14:30:56.586] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryTypeForFund],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetRecordTypeVO>> com.common.bittrade.controller.WWalletAccountRecordController.queryTypeForFund()
[2019-08-28 14:30:56.587] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryFundAccountRecord],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.RecordVO>> com.common.bittrade.controller.WWalletAccountRecordController.queryFundAccountRecord(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.AccountTypeDto)
[2019-08-28 14:30:56.592] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
[2019-08-28 14:30:56.592] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
[2019-08-28 14:30:56.594] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
[2019-08-28 14:30:56.602] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2019-08-28 14:30:56.603] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2019-08-28 14:30:58.269] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Exposing 2 endpoint(s) beneath base path '/actuator'
[2019-08-28 14:30:58.313] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2019-08-28 14:30:58.315] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2019-08-28 14:30:58.317] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2019-08-28 14:30:58.882] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'messageBrokerTaskScheduler'
[2019-08-28 14:30:59.034] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped URL path [/c2c/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
[2019-08-28 14:30:59.069] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'brokerChannelExecutor'
[2019-08-28 14:30:59.522] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[2019-08-28 14:31:00.105] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@fb6097b: startup date [Wed Aug 28 14:30:39 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3ad394e6
[2019-08-28 14:31:00.230] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Detected @ExceptionHandler methods in globalExceptionHandler
[2019-08-28 14:31:00.752] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-28 14:31:00.753] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-28 14:31:02.914] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting beans in phase 0
[2019-08-28 14:31:02.915] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting beans in phase 2147483647
[2019-08-28 14:31:02.915] [INFO ] - [main][ springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:151)] : Context refreshed
[2019-08-28 14:31:02.964] [INFO ] - [main][ springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:154)] : Found 1 custom documentation plugin(s)
[2019-08-28 14:31:03.039] [INFO ] - [main][ springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)] : Scanning for api listing references
[2019-08-28 14:31:03.624] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting...
[2019-08-28 14:31:03.625] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
[2019-08-28 14:31:03.627] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Started.
[2019-08-28 14:31:03.650] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Started AdvertInfoTester in 26.533 seconds (JVM running for 29.192)
[2019-08-28 14:31:06.347] [INFO ] - [Thread-2][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$2.run(AwaitingNonWebApplicationListener.java:83)] :  [Dubbo] Current Spring Boot Application is about to shutdown...
[2019-08-28 14:31:06.351] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:64)] :  [DUBBO] Close all registries [], dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:31:06.352] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(DubboProtocol.java:438)] :  [DUBBO] Close dubbo connect: 192.168.1.12:0-->localhost/127.0.0.1:20881, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:31:06.352] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:63)] :  [DUBBO] Destroy reference: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&default.check=false&default.timeout=5000&dubbo=2.6.2&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=7072&register.ip=192.168.1.12&side=consumer&timestamp=1566973852925, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:31:06.362] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:63)] :  [DUBBO] Destroy reference: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyService?application=service-consumer&default.check=false&default.timeout=5000&dubbo=2.6.2&interface=com.bittrade.currency.api.service.ITCurrencyService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getCurrencies,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,findAllLegalCurrency,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,findUsableCurrency,updateById,pageMaps,listByMap,getByPK&pid=7072&register.ip=192.168.1.12&side=consumer&timestamp=1566973854834, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:31:06.506] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:349)] : Initializing Eureka in region us-east-1
[2019-08-28 14:31:06.830] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70)] : Using JSON encoding codec LegacyJacksonJson
[2019-08-28 14:31:06.830] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71)] : Using JSON decoding codec LegacyJacksonJson
[2019-08-28 14:31:07.149] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80)] : Using XML encoding codec XStreamXml
[2019-08-28 14:31:07.150] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81)] : Using XML decoding codec XStreamXml
[2019-08-28 14:31:07.671] [INFO ] - [Thread-8][ com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] : Resolving eureka endpoints via configuration
[2019-08-28 14:31:07.718] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958)] : Disable delta property : false
[2019-08-28 14:31:07.719] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:959)] : Single vip registry refresh property : null
[2019-08-28 14:31:07.719] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960)] : Force full registry fetch : false
[2019-08-28 14:31:07.719] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:961)] : Application is null : false
[2019-08-28 14:31:07.719] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:962)] : Registered Applications size is zero : true
[2019-08-28 14:31:07.720] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:964)] : Application version is -1: true
[2019-08-28 14:31:07.720] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1047)] : Getting all instance registry info from the eureka server
[2019-08-28 14:31:09.909] [ERROR] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83)] : Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$d0a3905d.CGLIB$eurekaClient$1(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$d0a3905d$$FastClassBySpringCGLIB$$b22d64a6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:365)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$d0a3905d.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:583)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1246)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:535)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:193)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 65 common frames omitted
[2019-08-28 14:31:09.911] [WARN ] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:130)] : Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2019-08-28 14:31:09.913] [ERROR] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:972)] : DiscoveryClient_BITTRADE-C2C/192.168.1.12:-1:bittrade-c2c:@project.version@ - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$d0a3905d.CGLIB$eurekaClient$1(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$d0a3905d$$FastClassBySpringCGLIB$$b22d64a6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:365)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$d0a3905d.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:583)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1246)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:535)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:193)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
[2019-08-28 14:31:09.914] [WARN ] - [Thread-8][ com.netflix.discovery.DiscoveryClient$1.get(DiscoveryClient.java:290)] : Using default backup registry implementation which does not do anything.
[2019-08-28 14:31:09.918] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1264)] : Starting heartbeat executor: renew interval is: 30
[2019-08-28 14:31:09.927] [INFO ] - [Thread-8][ com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60)] : InstanceInfoReplicator onDemand update allowed rate per min is 4
[2019-08-28 14:31:09.935] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:449)] : Discovery Client initialized at timestamp 1566973869933 with initial instances count: 0
[2019-08-28 14:31:09.955] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:888)] : Shutting down DiscoveryClient ...
[2019-08-28 14:31:12.957] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:922)] : Unregistering ...
[2019-08-28 14:31:14.987] [ERROR] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83)] : Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:923)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:901)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:246)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:494)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 46 common frames omitted
[2019-08-28 14:31:14.988] [WARN ] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:130)] : Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2019-08-28 14:31:14.989] [ERROR] - [Thread-8][ com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:926)] : DiscoveryClient_BITTRADE-C2C/192.168.1.12:-1:bittrade-c2c:@project.version@ - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:923)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:901)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:246)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:494)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
[2019-08-28 14:31:15.026] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:911)] : Completed shut down of DiscoveryClient
[2019-08-28 14:31:15.039] [INFO ] - [Thread-8][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:1948)] : {dataSource-1} closing ...
[2019-08-28 14:31:15.046] [INFO ] - [Thread-8][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:2020)] : {dataSource-1} closed
[2019-08-28 14:38:11.734] [INFO ] - [main][?#?:?] : using logger: com.alibaba.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[2019-08-28 14:38:11.745] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-28 14:38:11.753] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {}
[2019-08-28 14:38:12.190] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@52d10fb8: startup date [Wed Aug 28 14:38:12 CST 2019]; root of context hierarchy
[2019-08-28 14:38:12.780] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-28 14:38:12.879] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3b7770fe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:38:13.146] [INFO ] - [pool-1-thread-1][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$1.run(AwaitingNonWebApplicationListener.java:61)] :  [Dubbo] Current Spring Boot Application is await...
[2019-08-28 14:38:13.712] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-28 14:38:13.714] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {dubbo.application.id=service-consumer, dubbo.application.name=service-consumer, dubbo.consumer.check=false, dubbo.consumer.timeout=5000, dubbo.monitor=, dubbo.protocol.id=dubbo, dubbo.protocol.name=dubbo, dubbo.protocol.port=20884, dubbo.provider.timeout=5000, dubbo.registry.address=N/A, dubbo.registry.check=false, dubbo.registry.id=my-registry, dubbo.registry.protocol=zookeeper, dubbo.scan=}
[2019-08-28 14:38:13.789] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : The following profiles are active: common,data,eureka,dubbo_provider,dubbo_consumer
[2019-08-28 14:38:13.799] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Refreshing org.springframework.web.context.support.GenericWebApplicationContext@5176d279: startup date [Wed Aug 28 14:38:13 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@52d10fb8
[2019-08-28 14:38:15.515] [WARN ] - [main][ org.mybatis.logging.Logger.warn(Logger.java:44)] : No MyBatis mapper was found in '[com.baomidou.cloud.service.*.mapper*]' package. Please check your configuration.
[2019-08-28 14:38:16.544] [INFO ] - [main][ org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:172)] : Multiple Spring Data modules found, entering strict repository configuration mode!
[2019-08-28 14:38:16.979] [WARN ] - [main][ com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans(ServiceAnnotationBeanPostProcessor.java:155)] :  [DUBBO] No Spring Bean annotating Dubbo's @Service was found under package[com.bittrade.c2c], dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:38:17.521] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : BeanFactory id=61352edb-e99a-3c04-9bd9-f50ca066a043
[2019-08-28 14:38:17.767] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-28 14:38:18.079] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:38:18.093] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionProperties' of type [com.core.framework.props.TransactionProperties$$EnhancerBySpringCGLIB$$30a630a7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:38:18.108] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$39096373] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:38:18.114] [INFO ] - [main][ com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource(DruidDataSourceAutoConfigure.java:56)] : Init DruidDataSource
[2019-08-28 14:38:18.244] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:38:18.435] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003)] : {dataSource-1} inited
[2019-08-28 14:38:18.436] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:38:18.471] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:38:18.484] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$$EnhancerBySpringCGLIB$$b3d1690b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:38:18.504] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:38:18.512] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:38:18.521] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration$$EnhancerBySpringCGLIB$$cc5e0670] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:38:18.567] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:38:18.569] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionConfig' of type [com.core.framework.config.TransactionConfig$$EnhancerBySpringCGLIB$$2561eb4c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:38:18.597] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'defaultPointcutAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:38:18.623] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1f5d6e01] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:38:18.998] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' of type [com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration$$EnhancerBySpringCGLIB$$2e5f1373] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:38:19.015] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:38:19.026] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:38:19.030] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:38:19.035] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:38:19.040] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:38:19.110] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3b7770fe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:38:24.351] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'clientInboundChannelExecutor'
[2019-08-28 14:38:24.388] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'clientOutboundChannelExecutor'
[2019-08-28 14:38:24.945] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService
[2019-08-28 14:38:25.242] [INFO ] - [main][ com.core.framework.config.redis.JedisClusterConfig.getJedisCluster(JedisClusterConfig.java:35)] : 进入redis集群初始化方法：访问集群地址为：[154.222.138.5:7000, 154.222.138.5:7001, 154.222.138.5:7002, 154.222.138.5:7003, 154.222.138.5:7004, 154.222.138.5:7005]
[2019-08-28 14:38:26.944] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyTradeServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:38:28.660] [WARN ] - [main][ com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:98)] :  [DUBBO] Failed to start NettyClient HAHE/192.168.1.12 connect to the server localhost/127.0.0.1:20881 (check == false, ignore and retry later!), cause: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=4016&register.ip=192.168.1.12&side=consumer&timestamp=1566974306945) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=4016&register.ip=192.168.1.12&side=consumer&timestamp=1566974306945) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:89)
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.<init>(NettyClient.java:59)
	at com.alibaba.dubbo.remoting.transport.netty.NettyTransporter.connect(NettyTransporter.java:37)
	at com.alibaba.dubbo.remoting.Transporter$Adaptive.connect(Transporter$Adaptive.java)
	at com.alibaba.dubbo.remoting.Transporters.connect(Transporters.java:75)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchanger.connect(HeaderExchanger.java:39)
	at com.alibaba.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:109)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.initClient(DubboProtocol.java:409)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getSharedClient(DubboProtocol.java:377)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getClients(DubboProtocol.java:354)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.refer(DubboProtocol.java:336)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:65)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:67)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:108)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:394)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:333)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:163)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:66)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceFieldElement.inject(ReferenceAnnotationBeanPostProcessor.java:367)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.postProcessPropertyValues(ReferenceAnnotationBeanPostProcessor.java:92)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:759)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:548)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:386)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:89)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:41)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:541)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:763)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:463)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:209)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-08-28 14:38:28.849] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:38:30.108] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-28 14:38:30.109] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-28 14:38:30.144] [INFO ] - [main][ com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281)] : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@684430c1
[2019-08-28 14:38:30.454] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/sendMessage],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.sendMessage(com.bittrade.c2c.vo.SendVo)
[2019-08-28 14:38:30.456] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/sendOrder],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.pullOrderDetail(com.bittrade.c2c.vo.SendOrderVo)
[2019-08-28 14:38:30.456] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/pullUnreadMessage],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.pullMessage(java.lang.Long)
[2019-08-28 14:38:30.470] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.listAdverts(com.core.common.DTO.PageDTO<com.bittrade.pojo.dto.TAdvertInfoDTO>,com.bittrade.pojo.vo.QueryAdvertVO,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:38:30.471] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/publish_advert],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.publishAdvert(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.TAdvertInfoDTO)
[2019-08-28 14:38:30.472] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts/users/{coin_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.listAdvertsUsers(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.AdvertUserVO>,java.lang.Long,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:38:30.473] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/place_advert_order/{advert_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.placeAdvertOrder(java.lang.Long,java.math.BigDecimal,java.lang.String,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:38:30.474] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts/details/{advert_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.getAdvertDetails(java.lang.Long)
[2019-08-28 14:38:30.475] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/suspend],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.suspendAdverts(java.util.List<java.lang.Long>,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:38:30.476] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/revoke/{advert_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.revokeAdverts(java.lang.Long,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:38:30.477] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 14:38:30.478] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 14:38:30.479] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 14:38:30.480] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 14:38:30.481] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 14:38:30.482] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 14:38:30.483] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 14:38:30.483] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 14:38:30.484] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 14:38:30.485] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 14:38:30.486] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 14:38:30.487] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 14:38:30.488] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 14:38:30.489] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 14:38:30.490] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 14:38:30.497] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/already_cancel],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.alreadyCancelAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:38:30.498] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/already_complete],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.alreadyCompleteAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:38:30.499] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/details/{order_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.getAdvertOrderDetails(java.lang.Long)
[2019-08-28 14:38:30.500] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/no_complete],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.noCompleteAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:38:30.501] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/click_already_paid/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.clickAlreadyPaid(java.lang.Long)
[2019-08-28 14:38:30.501] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/cancel/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.cancelAdvertOrder(java.lang.Long)
[2019-08-28 14:38:30.502] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/click_already_receipt/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.clickAlreadyReceipt(java.lang.Long)
[2019-08-28 14:38:30.503] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 14:38:30.504] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 14:38:30.505] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 14:38:30.505] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 14:38:30.506] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 14:38:30.507] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 14:38:30.508] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 14:38:30.508] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 14:38:30.509] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 14:38:30.510] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 14:38:30.511] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 14:38:30.512] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 14:38:30.513] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 14:38:30.513] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 14:38:30.514] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 14:38:30.520] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/availableBalanceFeign],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.lang.String com.common.bittrade.controller.TLegalCurrencyAccountController.availableBalanceFeign(java.lang.Long,java.lang.String)
[2019-08-28 14:38:30.521] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/detail],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetsVO>> com.common.bittrade.controller.TLegalCurrencyAccountController.detail(com.core.web.constant.entity.LoginUser)
[2019-08-28 14:38:30.522] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/conversionTotal],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.ConversionVo> com.common.bittrade.controller.TLegalCurrencyAccountController.totalConversion(com.core.web.constant.entity.LoginUser)
[2019-08-28 14:38:30.523] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getAssetsFeign],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.math.BigDecimal com.common.bittrade.controller.TLegalCurrencyAccountController.getAssetsFeign(java.lang.Long)
[2019-08-28 14:38:30.524] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 14:38:30.525] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 14:38:30.526] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 14:38:30.527] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 14:38:30.527] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 14:38:30.528] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 14:38:30.529] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 14:38:30.530] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 14:38:30.530] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 14:38:30.531] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 14:38:30.532] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 14:38:30.533] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 14:38:30.534] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 14:38:30.534] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 14:38:30.535] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 14:38:30.540] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/legalCurrency_coins],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.common.bittrade.controller.TLegalCurrencyCoinController.listLegalCurrencyCoins()
[2019-08-28 14:38:30.541] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 14:38:30.542] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 14:38:30.543] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 14:38:30.544] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 14:38:30.545] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 14:38:30.545] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 14:38:30.546] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 14:38:30.547] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 14:38:30.548] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 14:38:30.549] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 14:38:30.549] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 14:38:30.550] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 14:38:30.551] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 14:38:30.552] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 14:38:30.553] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 14:38:30.557] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/queryAccountRecord],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.RecordVO>> com.common.bittrade.controller.TLegalCurrencyRecordController.queryAccountRecord(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.AccountTypeDto)
[2019-08-28 14:38:30.558] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/queryType],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetRecordTypeVO>> com.common.bittrade.controller.TLegalCurrencyRecordController.queryTypeForFund()
[2019-08-28 14:38:30.559] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 14:38:30.560] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 14:38:30.561] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 14:38:30.562] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 14:38:30.562] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 14:38:30.563] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 14:38:30.564] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 14:38:30.564] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 14:38:30.565] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 14:38:30.567] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 14:38:30.567] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 14:38:30.569] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 14:38:30.570] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 14:38:30.570] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 14:38:30.571] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 14:38:30.576] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/rechargecoinlist],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO com.common.bittrade.controller.WCoinController.rechargecoinlist()
[2019-08-28 14:38:30.577] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/getList],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.model.WCoin>> com.common.bittrade.controller.WCoinController.getList()
[2019-08-28 14:38:30.577] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/Withdrawcoinlist],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO com.common.bittrade.controller.WCoinController.withdrawcoinlist()
[2019-08-28 14:38:30.579] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccount/detail],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetsVO>> com.common.bittrade.controller.WWalletAccountController.detail(com.core.web.constant.entity.LoginUser)
[2019-08-28 14:38:30.580] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccount/conversionTotal],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.ConversionVo> com.common.bittrade.controller.WWalletAccountController.totalConversion(com.core.web.constant.entity.LoginUser)
[2019-08-28 14:38:30.581] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryFundAccountRecord],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.RecordVO>> com.common.bittrade.controller.WWalletAccountRecordController.queryFundAccountRecord(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.AccountTypeDto)
[2019-08-28 14:38:30.582] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryTypeForFund],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetRecordTypeVO>> com.common.bittrade.controller.WWalletAccountRecordController.queryTypeForFund()
[2019-08-28 14:38:30.583] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryCurrencies],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.model.WCoin>> com.common.bittrade.controller.WWalletAccountRecordController.queryCurrencies()
[2019-08-28 14:38:30.587] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
[2019-08-28 14:38:30.589] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
[2019-08-28 14:38:30.589] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
[2019-08-28 14:38:30.594] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2019-08-28 14:38:30.595] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2019-08-28 14:38:30.603] [WARN ] - [DubboClientReconnectTimer-thread-1][ com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:171)] :  [DUBBO] client reconnect to localhost:20881 find error . url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=4016&register.ip=192.168.1.12&side=consumer&timestamp=1566974306945, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=4016&register.ip=192.168.1.12&side=consumer&timestamp=1566974306945) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:156)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	... 3 common frames omitted
[2019-08-28 14:38:32.310] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Exposing 2 endpoint(s) beneath base path '/actuator'
[2019-08-28 14:38:32.353] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2019-08-28 14:38:32.354] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2019-08-28 14:38:32.356] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2019-08-28 14:38:32.799] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'messageBrokerTaskScheduler'
[2019-08-28 14:38:32.952] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped URL path [/c2c/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
[2019-08-28 14:38:32.993] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'brokerChannelExecutor'
[2019-08-28 14:38:33.426] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[2019-08-28 14:38:33.988] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@5176d279: startup date [Wed Aug 28 14:38:13 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@52d10fb8
[2019-08-28 14:38:34.095] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Detected @ExceptionHandler methods in globalExceptionHandler
[2019-08-28 14:38:34.583] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-28 14:38:34.584] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-28 14:38:36.661] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting beans in phase 0
[2019-08-28 14:38:36.662] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting beans in phase 2147483647
[2019-08-28 14:38:36.662] [INFO ] - [main][ springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:151)] : Context refreshed
[2019-08-28 14:38:36.711] [INFO ] - [main][ springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:154)] : Found 1 custom documentation plugin(s)
[2019-08-28 14:38:36.789] [INFO ] - [main][ springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)] : Scanning for api listing references
[2019-08-28 14:38:37.375] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting...
[2019-08-28 14:38:37.375] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
[2019-08-28 14:38:37.377] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Started.
[2019-08-28 14:38:37.398] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Started AdvertInfoTester in 26.062 seconds (JVM running for 28.75)
[2019-08-28 14:38:41.098] [INFO ] - [Thread-2][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$2.run(AwaitingNonWebApplicationListener.java:83)] :  [Dubbo] Current Spring Boot Application is about to shutdown...
[2019-08-28 14:38:41.102] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:64)] :  [DUBBO] Close all registries [], dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:38:41.103] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(DubboProtocol.java:438)] :  [DUBBO] Close dubbo connect: 192.168.1.12:0-->localhost/127.0.0.1:20881, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:38:41.104] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:63)] :  [DUBBO] Destroy reference: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&default.check=false&default.timeout=5000&dubbo=2.6.2&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=4016&register.ip=192.168.1.12&side=consumer&timestamp=1566974306945, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:38:41.118] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:63)] :  [DUBBO] Destroy reference: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyService?application=service-consumer&default.check=false&default.timeout=5000&dubbo=2.6.2&interface=com.bittrade.currency.api.service.ITCurrencyService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getCurrencies,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,findAllLegalCurrency,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,findUsableCurrency,updateById,pageMaps,listByMap,getByPK&pid=4016&register.ip=192.168.1.12&side=consumer&timestamp=1566974308850, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:38:41.238] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:349)] : Initializing Eureka in region us-east-1
[2019-08-28 14:38:41.589] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70)] : Using JSON encoding codec LegacyJacksonJson
[2019-08-28 14:38:41.590] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71)] : Using JSON decoding codec LegacyJacksonJson
[2019-08-28 14:38:41.918] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80)] : Using XML encoding codec XStreamXml
[2019-08-28 14:38:41.918] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81)] : Using XML decoding codec XStreamXml
[2019-08-28 14:38:42.460] [INFO ] - [Thread-8][ com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] : Resolving eureka endpoints via configuration
[2019-08-28 14:38:42.501] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958)] : Disable delta property : false
[2019-08-28 14:38:42.501] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:959)] : Single vip registry refresh property : null
[2019-08-28 14:38:42.502] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960)] : Force full registry fetch : false
[2019-08-28 14:38:42.502] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:961)] : Application is null : false
[2019-08-28 14:38:42.502] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:962)] : Registered Applications size is zero : true
[2019-08-28 14:38:42.502] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:964)] : Application version is -1: true
[2019-08-28 14:38:42.503] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1047)] : Getting all instance registry info from the eureka server
[2019-08-28 14:38:44.667] [ERROR] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83)] : Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$42e06a1d.CGLIB$eurekaClient$1(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$42e06a1d$$FastClassBySpringCGLIB$$a869e7a9.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:365)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$42e06a1d.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:583)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1246)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:535)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:193)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 65 common frames omitted
[2019-08-28 14:38:44.669] [WARN ] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:130)] : Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2019-08-28 14:38:44.670] [ERROR] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:972)] : DiscoveryClient_BITTRADE-C2C/192.168.1.12:-1:bittrade-c2c:@project.version@ - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$42e06a1d.CGLIB$eurekaClient$1(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$42e06a1d$$FastClassBySpringCGLIB$$a869e7a9.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:365)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$42e06a1d.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:583)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1246)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:535)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:193)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
[2019-08-28 14:38:44.672] [WARN ] - [Thread-8][ com.netflix.discovery.DiscoveryClient$1.get(DiscoveryClient.java:290)] : Using default backup registry implementation which does not do anything.
[2019-08-28 14:38:44.675] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1264)] : Starting heartbeat executor: renew interval is: 30
[2019-08-28 14:38:44.683] [INFO ] - [Thread-8][ com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60)] : InstanceInfoReplicator onDemand update allowed rate per min is 4
[2019-08-28 14:38:44.694] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:449)] : Discovery Client initialized at timestamp 1566974324691 with initial instances count: 0
[2019-08-28 14:38:44.727] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:888)] : Shutting down DiscoveryClient ...
[2019-08-28 14:38:47.729] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:922)] : Unregistering ...
[2019-08-28 14:38:49.760] [ERROR] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83)] : Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:923)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:901)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:246)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:494)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 46 common frames omitted
[2019-08-28 14:38:49.761] [WARN ] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:130)] : Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2019-08-28 14:38:49.762] [ERROR] - [Thread-8][ com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:926)] : DiscoveryClient_BITTRADE-C2C/192.168.1.12:-1:bittrade-c2c:@project.version@ - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:923)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:901)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:246)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:494)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
[2019-08-28 14:38:49.787] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:911)] : Completed shut down of DiscoveryClient
[2019-08-28 14:38:49.805] [INFO ] - [Thread-8][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:1948)] : {dataSource-1} closing ...
[2019-08-28 14:38:49.811] [INFO ] - [Thread-8][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:2020)] : {dataSource-1} closed
[2019-08-28 14:39:27.576] [INFO ] - [main][?#?:?] : using logger: com.alibaba.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[2019-08-28 14:39:27.585] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-28 14:39:27.590] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {}
[2019-08-28 14:39:27.860] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6c61a903: startup date [Wed Aug 28 14:39:27 CST 2019]; root of context hierarchy
[2019-08-28 14:39:28.257] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-28 14:39:28.328] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8b5327ea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:39:28.504] [INFO ] - [pool-1-thread-1][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$1.run(AwaitingNonWebApplicationListener.java:61)] :  [Dubbo] Current Spring Boot Application is await...
[2019-08-28 14:39:32.852] [INFO ] - [main][?#?:?] : using logger: com.alibaba.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[2019-08-28 14:39:32.863] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-28 14:39:32.870] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {}
[2019-08-28 14:39:33.309] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@77b21474: startup date [Wed Aug 28 14:39:33 CST 2019]; root of context hierarchy
[2019-08-28 14:39:33.832] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-28 14:39:33.922] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$af16075b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:39:34.139] [INFO ] - [pool-1-thread-1][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$1.run(AwaitingNonWebApplicationListener.java:61)] :  [Dubbo] Current Spring Boot Application is await...
[2019-08-28 14:39:34.676] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-28 14:39:34.678] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {dubbo.application.id=service-consumer, dubbo.application.name=service-consumer, dubbo.consumer.check=false, dubbo.consumer.timeout=5000, dubbo.monitor=, dubbo.protocol.id=dubbo, dubbo.protocol.name=dubbo, dubbo.protocol.port=20884, dubbo.provider.timeout=5000, dubbo.registry.address=N/A, dubbo.registry.check=false, dubbo.registry.id=my-registry, dubbo.registry.protocol=zookeeper, dubbo.scan=}
[2019-08-28 14:39:34.744] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : The following profiles are active: common,data,eureka,dubbo_provider,dubbo_consumer
[2019-08-28 14:39:34.754] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Refreshing org.springframework.web.context.support.GenericWebApplicationContext@5017e1: startup date [Wed Aug 28 14:39:34 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@77b21474
[2019-08-28 14:39:36.435] [WARN ] - [main][ org.mybatis.logging.Logger.warn(Logger.java:44)] : No MyBatis mapper was found in '[com.baomidou.cloud.service.*.mapper*]' package. Please check your configuration.
[2019-08-28 14:39:37.528] [INFO ] - [main][ org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:172)] : Multiple Spring Data modules found, entering strict repository configuration mode!
[2019-08-28 14:39:37.986] [WARN ] - [main][ com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans(ServiceAnnotationBeanPostProcessor.java:155)] :  [DUBBO] No Spring Bean annotating Dubbo's @Service was found under package[com.bittrade.c2c], dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:39:38.517] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : BeanFactory id=61352edb-e99a-3c04-9bd9-f50ca066a043
[2019-08-28 14:39:38.754] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-28 14:39:39.087] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:39:39.101] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionProperties' of type [com.core.framework.props.TransactionProperties$$EnhancerBySpringCGLIB$$a444c704] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:39:39.119] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$aca7f9d0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:39:39.125] [INFO ] - [main][ com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource(DruidDataSourceAutoConfigure.java:56)] : Init DruidDataSource
[2019-08-28 14:39:39.254] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:39:39.451] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003)] : {dataSource-1} inited
[2019-08-28 14:39:39.452] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:39:39.489] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:39:39.502] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$$EnhancerBySpringCGLIB$$276fff68] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:39:39.526] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:39:39.533] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:39:39.542] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration$$EnhancerBySpringCGLIB$$3ffc9ccd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:39:39.582] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:39:39.583] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionConfig' of type [com.core.framework.config.TransactionConfig$$EnhancerBySpringCGLIB$$990081a9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:39:39.616] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'defaultPointcutAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:39:39.643] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$92fc045e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:39:39.996] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' of type [com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration$$EnhancerBySpringCGLIB$$a1fda9d0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:39:40.015] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:39:40.024] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:39:40.028] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:39:40.032] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:39:40.036] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:39:40.105] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$af16075b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:39:47.466] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'clientInboundChannelExecutor'
[2019-08-28 14:39:47.501] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'clientOutboundChannelExecutor'
[2019-08-28 14:39:48.042] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService
[2019-08-28 14:39:48.338] [INFO ] - [main][ com.core.framework.config.redis.JedisClusterConfig.getJedisCluster(JedisClusterConfig.java:35)] : 进入redis集群初始化方法：访问集群地址为：[154.222.138.5:7000, 154.222.138.5:7001, 154.222.138.5:7002, 154.222.138.5:7003, 154.222.138.5:7004, 154.222.138.5:7005]
[2019-08-28 14:39:49.893] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyTradeServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:39:51.595] [WARN ] - [main][ com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:98)] :  [DUBBO] Failed to start NettyClient HAHE/192.168.1.12 connect to the server localhost/127.0.0.1:20881 (check == false, ignore and retry later!), cause: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=4968&register.ip=192.168.1.12&side=consumer&timestamp=1566974389894) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=4968&register.ip=192.168.1.12&side=consumer&timestamp=1566974389894) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:89)
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.<init>(NettyClient.java:59)
	at com.alibaba.dubbo.remoting.transport.netty.NettyTransporter.connect(NettyTransporter.java:37)
	at com.alibaba.dubbo.remoting.Transporter$Adaptive.connect(Transporter$Adaptive.java)
	at com.alibaba.dubbo.remoting.Transporters.connect(Transporters.java:75)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchanger.connect(HeaderExchanger.java:39)
	at com.alibaba.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:109)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.initClient(DubboProtocol.java:409)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getSharedClient(DubboProtocol.java:377)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getClients(DubboProtocol.java:354)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.refer(DubboProtocol.java:336)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:108)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:67)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:65)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:394)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:333)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:163)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:66)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceFieldElement.inject(ReferenceAnnotationBeanPostProcessor.java:367)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.postProcessPropertyValues(ReferenceAnnotationBeanPostProcessor.java:92)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:759)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:548)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:386)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:89)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:41)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:541)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:763)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:463)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:209)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-08-28 14:39:51.786] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:39:52.984] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-28 14:39:52.985] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-28 14:39:53.021] [INFO ] - [main][ com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281)] : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@6a6a3fc4
[2019-08-28 14:39:53.328] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/sendMessage],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.sendMessage(com.bittrade.c2c.vo.SendVo)
[2019-08-28 14:39:53.330] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/sendOrder],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.pullOrderDetail(com.bittrade.c2c.vo.SendOrderVo)
[2019-08-28 14:39:53.331] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/pullUnreadMessage],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.pullMessage(java.lang.Long)
[2019-08-28 14:39:53.344] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.listAdverts(com.core.common.DTO.PageDTO<com.bittrade.pojo.dto.TAdvertInfoDTO>,com.bittrade.pojo.vo.QueryAdvertVO,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:39:53.345] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/publish_advert],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.publishAdvert(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.TAdvertInfoDTO)
[2019-08-28 14:39:53.346] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts/details/{advert_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.getAdvertDetails(java.lang.Long)
[2019-08-28 14:39:53.347] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts/users/{coin_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.listAdvertsUsers(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.AdvertUserVO>,java.lang.Long,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:39:53.348] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/place_advert_order/{advert_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.placeAdvertOrder(java.lang.Long,java.math.BigDecimal,java.lang.String,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:39:53.349] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/suspend],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.suspendAdverts(java.util.List<java.lang.Long>,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:39:53.350] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/revoke/{advert_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.revokeAdverts(java.lang.Long,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:39:53.351] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 14:39:53.352] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 14:39:53.353] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 14:39:53.355] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 14:39:53.356] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 14:39:53.357] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 14:39:53.358] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 14:39:53.359] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 14:39:53.359] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 14:39:53.360] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 14:39:53.361] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 14:39:53.362] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 14:39:53.363] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 14:39:53.364] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 14:39:53.365] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 14:39:53.372] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/details/{order_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.getAdvertOrderDetails(java.lang.Long)
[2019-08-28 14:39:53.373] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/click_already_paid/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.clickAlreadyPaid(java.lang.Long)
[2019-08-28 14:39:53.374] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/no_complete],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.noCompleteAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:39:53.375] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/cancel/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.cancelAdvertOrder(java.lang.Long)
[2019-08-28 14:39:53.376] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/already_cancel],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.alreadyCancelAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:39:53.378] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/click_already_receipt/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.clickAlreadyReceipt(java.lang.Long)
[2019-08-28 14:39:53.379] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/already_complete],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.alreadyCompleteAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:39:53.380] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 14:39:53.380] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 14:39:53.381] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 14:39:53.382] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 14:39:53.383] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 14:39:53.384] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 14:39:53.384] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 14:39:53.385] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 14:39:53.386] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 14:39:53.387] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 14:39:53.387] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 14:39:53.388] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 14:39:53.389] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 14:39:53.390] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 14:39:53.391] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 14:39:53.397] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/conversionTotal],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.ConversionVo> com.common.bittrade.controller.TLegalCurrencyAccountController.totalConversion(com.core.web.constant.entity.LoginUser)
[2019-08-28 14:39:53.398] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getAssetsFeign],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.math.BigDecimal com.common.bittrade.controller.TLegalCurrencyAccountController.getAssetsFeign(java.lang.Long)
[2019-08-28 14:39:53.399] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/detail],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetsVO>> com.common.bittrade.controller.TLegalCurrencyAccountController.detail(com.core.web.constant.entity.LoginUser)
[2019-08-28 14:39:53.400] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/availableBalanceFeign],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.lang.String com.common.bittrade.controller.TLegalCurrencyAccountController.availableBalanceFeign(java.lang.Long,java.lang.String)
[2019-08-28 14:39:53.401] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 14:39:53.402] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 14:39:53.402] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 14:39:53.403] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 14:39:53.404] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 14:39:53.405] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 14:39:53.406] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 14:39:53.406] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 14:39:53.407] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 14:39:53.408] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 14:39:53.408] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 14:39:53.409] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 14:39:53.410] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 14:39:53.411] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 14:39:53.412] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 14:39:53.417] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/legalCurrency_coins],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.common.bittrade.controller.TLegalCurrencyCoinController.listLegalCurrencyCoins()
[2019-08-28 14:39:53.418] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 14:39:53.419] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 14:39:53.419] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 14:39:53.420] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 14:39:53.421] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 14:39:53.422] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 14:39:53.422] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 14:39:53.423] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 14:39:53.424] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 14:39:53.425] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 14:39:53.426] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 14:39:53.426] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 14:39:53.427] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 14:39:53.429] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 14:39:53.430] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 14:39:53.436] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/queryType],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetRecordTypeVO>> com.common.bittrade.controller.TLegalCurrencyRecordController.queryTypeForFund()
[2019-08-28 14:39:53.437] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/queryAccountRecord],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.RecordVO>> com.common.bittrade.controller.TLegalCurrencyRecordController.queryAccountRecord(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.AccountTypeDto)
[2019-08-28 14:39:53.438] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 14:39:53.439] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 14:39:53.440] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 14:39:53.441] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 14:39:53.442] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 14:39:53.443] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 14:39:53.444] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 14:39:53.445] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 14:39:53.445] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 14:39:53.446] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 14:39:53.447] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 14:39:53.448] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 14:39:53.449] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 14:39:53.450] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 14:39:53.451] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 14:39:53.456] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/getList],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.model.WCoin>> com.common.bittrade.controller.WCoinController.getList()
[2019-08-28 14:39:53.457] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/rechargecoinlist],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO com.common.bittrade.controller.WCoinController.rechargecoinlist()
[2019-08-28 14:39:53.458] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/Withdrawcoinlist],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO com.common.bittrade.controller.WCoinController.withdrawcoinlist()
[2019-08-28 14:39:53.460] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccount/conversionTotal],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.ConversionVo> com.common.bittrade.controller.WWalletAccountController.totalConversion(com.core.web.constant.entity.LoginUser)
[2019-08-28 14:39:53.461] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccount/detail],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetsVO>> com.common.bittrade.controller.WWalletAccountController.detail(com.core.web.constant.entity.LoginUser)
[2019-08-28 14:39:53.463] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryTypeForFund],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetRecordTypeVO>> com.common.bittrade.controller.WWalletAccountRecordController.queryTypeForFund()
[2019-08-28 14:39:53.463] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryCurrencies],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.model.WCoin>> com.common.bittrade.controller.WWalletAccountRecordController.queryCurrencies()
[2019-08-28 14:39:53.464] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryFundAccountRecord],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.RecordVO>> com.common.bittrade.controller.WWalletAccountRecordController.queryFundAccountRecord(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.AccountTypeDto)
[2019-08-28 14:39:53.469] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
[2019-08-28 14:39:53.471] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
[2019-08-28 14:39:53.472] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
[2019-08-28 14:39:53.478] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2019-08-28 14:39:53.479] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2019-08-28 14:39:53.535] [WARN ] - [DubboClientReconnectTimer-thread-1][ com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:171)] :  [DUBBO] client reconnect to localhost:20881 find error . url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=4968&register.ip=192.168.1.12&side=consumer&timestamp=1566974389894, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=4968&register.ip=192.168.1.12&side=consumer&timestamp=1566974389894) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:156)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	... 3 common frames omitted
[2019-08-28 14:39:55.246] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Exposing 2 endpoint(s) beneath base path '/actuator'
[2019-08-28 14:39:55.287] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2019-08-28 14:39:55.288] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2019-08-28 14:39:55.290] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2019-08-28 14:39:55.758] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'messageBrokerTaskScheduler'
[2019-08-28 14:39:55.893] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped URL path [/c2c/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
[2019-08-28 14:39:55.921] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'brokerChannelExecutor'
[2019-08-28 14:39:56.387] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[2019-08-28 14:39:57.003] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@5017e1: startup date [Wed Aug 28 14:39:34 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@77b21474
[2019-08-28 14:39:57.113] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Detected @ExceptionHandler methods in globalExceptionHandler
[2019-08-28 14:39:57.598] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-28 14:39:57.598] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-28 14:39:59.601] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting beans in phase 0
[2019-08-28 14:39:59.602] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting beans in phase 2147483647
[2019-08-28 14:39:59.602] [INFO ] - [main][ springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:151)] : Context refreshed
[2019-08-28 14:39:59.653] [INFO ] - [main][ springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:154)] : Found 1 custom documentation plugin(s)
[2019-08-28 14:39:59.736] [INFO ] - [main][ springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)] : Scanning for api listing references
[2019-08-28 14:40:00.327] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting...
[2019-08-28 14:40:00.328] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
[2019-08-28 14:40:00.329] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Started.
[2019-08-28 14:40:00.351] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Started AdvertInfoTester in 27.875 seconds (JVM running for 30.435)
[2019-08-28 14:40:04.066] [INFO ] - [Thread-2][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$2.run(AwaitingNonWebApplicationListener.java:83)] :  [Dubbo] Current Spring Boot Application is about to shutdown...
[2019-08-28 14:40:04.069] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:64)] :  [DUBBO] Close all registries [], dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:40:04.070] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(DubboProtocol.java:438)] :  [DUBBO] Close dubbo connect: 192.168.1.12:0-->localhost/127.0.0.1:20881, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:40:04.070] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:63)] :  [DUBBO] Destroy reference: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyService?application=service-consumer&default.check=false&default.timeout=5000&dubbo=2.6.2&interface=com.bittrade.currency.api.service.ITCurrencyService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getCurrencies,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,findAllLegalCurrency,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,findUsableCurrency,updateById,pageMaps,listByMap,getByPK&pid=4968&register.ip=192.168.1.12&side=consumer&timestamp=1566974391787, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:40:04.080] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:63)] :  [DUBBO] Destroy reference: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&default.check=false&default.timeout=5000&dubbo=2.6.2&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=4968&register.ip=192.168.1.12&side=consumer&timestamp=1566974389894, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:40:04.188] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:349)] : Initializing Eureka in region us-east-1
[2019-08-28 14:40:04.521] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70)] : Using JSON encoding codec LegacyJacksonJson
[2019-08-28 14:40:04.521] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71)] : Using JSON decoding codec LegacyJacksonJson
[2019-08-28 14:40:04.828] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80)] : Using XML encoding codec XStreamXml
[2019-08-28 14:40:04.829] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81)] : Using XML decoding codec XStreamXml
[2019-08-28 14:40:05.374] [INFO ] - [Thread-8][ com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] : Resolving eureka endpoints via configuration
[2019-08-28 14:40:05.414] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958)] : Disable delta property : false
[2019-08-28 14:40:05.415] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:959)] : Single vip registry refresh property : null
[2019-08-28 14:40:05.415] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960)] : Force full registry fetch : false
[2019-08-28 14:40:05.415] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:961)] : Application is null : false
[2019-08-28 14:40:05.415] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:962)] : Registered Applications size is zero : true
[2019-08-28 14:40:05.415] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:964)] : Application version is -1: true
[2019-08-28 14:40:05.416] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1047)] : Getting all instance registry info from the eureka server
[2019-08-28 14:40:07.571] [ERROR] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83)] : Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$b67f007a.CGLIB$eurekaClient$1(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$b67f007a$$FastClassBySpringCGLIB$$daef7bef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:365)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$b67f007a.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:583)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1246)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:535)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:193)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 65 common frames omitted
[2019-08-28 14:40:07.574] [WARN ] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:130)] : Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2019-08-28 14:40:07.575] [ERROR] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:972)] : DiscoveryClient_BITTRADE-C2C/192.168.1.12:-1:bittrade-c2c:@project.version@ - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$b67f007a.CGLIB$eurekaClient$1(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$b67f007a$$FastClassBySpringCGLIB$$daef7bef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:365)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$b67f007a.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:583)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1246)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:535)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:193)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
[2019-08-28 14:40:07.576] [WARN ] - [Thread-8][ com.netflix.discovery.DiscoveryClient$1.get(DiscoveryClient.java:290)] : Using default backup registry implementation which does not do anything.
[2019-08-28 14:40:07.580] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1264)] : Starting heartbeat executor: renew interval is: 30
[2019-08-28 14:40:07.588] [INFO ] - [Thread-8][ com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60)] : InstanceInfoReplicator onDemand update allowed rate per min is 4
[2019-08-28 14:40:07.599] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:449)] : Discovery Client initialized at timestamp 1566974407595 with initial instances count: 0
[2019-08-28 14:40:07.621] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:888)] : Shutting down DiscoveryClient ...
[2019-08-28 14:40:10.623] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:922)] : Unregistering ...
[2019-08-28 14:40:12.652] [ERROR] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83)] : Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:923)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:901)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:246)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:494)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 46 common frames omitted
[2019-08-28 14:40:12.653] [WARN ] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:130)] : Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2019-08-28 14:40:12.654] [ERROR] - [Thread-8][ com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:926)] : DiscoveryClient_BITTRADE-C2C/192.168.1.12:-1:bittrade-c2c:@project.version@ - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:923)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:901)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:246)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:494)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
[2019-08-28 14:40:12.677] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:911)] : Completed shut down of DiscoveryClient
[2019-08-28 14:40:12.688] [INFO ] - [Thread-8][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:1948)] : {dataSource-1} closing ...
[2019-08-28 14:40:12.697] [INFO ] - [Thread-8][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:2020)] : {dataSource-1} closed
[2019-08-28 14:41:44.220] [INFO ] - [main][?#?:?] : using logger: com.alibaba.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[2019-08-28 14:41:44.232] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-28 14:41:44.238] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {}
[2019-08-28 14:41:44.706] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@ec2bf82: startup date [Wed Aug 28 14:41:44 CST 2019]; root of context hierarchy
[2019-08-28 14:41:45.251] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-28 14:41:45.347] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e775cb7f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:41:45.594] [INFO ] - [pool-1-thread-1][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$1.run(AwaitingNonWebApplicationListener.java:61)] :  [Dubbo] Current Spring Boot Application is await...
[2019-08-28 14:41:46.129] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-28 14:41:46.131] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {dubbo.application.id=service-consumer, dubbo.application.name=service-consumer, dubbo.consumer.check=false, dubbo.consumer.timeout=5000, dubbo.monitor=, dubbo.protocol.id=dubbo, dubbo.protocol.name=dubbo, dubbo.protocol.port=20884, dubbo.provider.timeout=5000, dubbo.registry.address=N/A, dubbo.registry.check=false, dubbo.registry.id=my-registry, dubbo.registry.protocol=zookeeper, dubbo.scan=}
[2019-08-28 14:41:46.206] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : The following profiles are active: common,data,eureka,dubbo_provider,dubbo_consumer
[2019-08-28 14:41:46.215] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Refreshing org.springframework.web.context.support.GenericWebApplicationContext@5a82ebf8: startup date [Wed Aug 28 14:41:46 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@ec2bf82
[2019-08-28 14:41:48.036] [WARN ] - [main][ org.mybatis.logging.Logger.warn(Logger.java:44)] : No MyBatis mapper was found in '[com.baomidou.cloud.service.*.mapper*]' package. Please check your configuration.
[2019-08-28 14:41:49.103] [INFO ] - [main][ org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:172)] : Multiple Spring Data modules found, entering strict repository configuration mode!
[2019-08-28 14:41:49.594] [WARN ] - [main][ com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans(ServiceAnnotationBeanPostProcessor.java:155)] :  [DUBBO] No Spring Bean annotating Dubbo's @Service was found under package[com.bittrade.c2c], dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:41:50.084] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : BeanFactory id=61352edb-e99a-3c04-9bd9-f50ca066a043
[2019-08-28 14:41:50.328] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-28 14:41:50.654] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:41:50.670] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionProperties' of type [com.core.framework.props.TransactionProperties$$EnhancerBySpringCGLIB$$dca48b28] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:41:50.692] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$e507bdf4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:41:50.697] [INFO ] - [main][ com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource(DruidDataSourceAutoConfigure.java:56)] : Init DruidDataSource
[2019-08-28 14:41:50.857] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:41:51.071] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003)] : {dataSource-1} inited
[2019-08-28 14:41:51.072] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:41:51.126] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:41:51.142] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$$EnhancerBySpringCGLIB$$5fcfc38c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:41:51.166] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:41:51.174] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:41:51.183] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration$$EnhancerBySpringCGLIB$$785c60f1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:41:51.229] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:41:51.230] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionConfig' of type [com.core.framework.config.TransactionConfig$$EnhancerBySpringCGLIB$$d16045cd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:41:51.258] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'defaultPointcutAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:41:51.284] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$cb5bc882] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:41:51.632] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' of type [com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration$$EnhancerBySpringCGLIB$$da5d6df4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:41:51.650] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:41:51.660] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:41:51.664] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:41:51.669] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:41:51.676] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:41:51.746] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e775cb7f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:41:56.787] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'clientInboundChannelExecutor'
[2019-08-28 14:41:56.826] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'clientOutboundChannelExecutor'
[2019-08-28 14:41:57.373] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService
[2019-08-28 14:41:57.669] [INFO ] - [main][ com.core.framework.config.redis.JedisClusterConfig.getJedisCluster(JedisClusterConfig.java:35)] : 进入redis集群初始化方法：访问集群地址为：[154.222.138.5:7000, 154.222.138.5:7001, 154.222.138.5:7002, 154.222.138.5:7003, 154.222.138.5:7004, 154.222.138.5:7005]
[2019-08-28 14:41:59.361] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyTradeServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:42:01.001] [WARN ] - [main][ com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:98)] :  [DUBBO] Failed to start NettyClient HAHE/192.168.1.12 connect to the server localhost/127.0.0.1:20881 (check == false, ignore and retry later!), cause: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=6056&register.ip=192.168.1.12&side=consumer&timestamp=1566974519362) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=6056&register.ip=192.168.1.12&side=consumer&timestamp=1566974519362) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:89)
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.<init>(NettyClient.java:59)
	at com.alibaba.dubbo.remoting.transport.netty.NettyTransporter.connect(NettyTransporter.java:37)
	at com.alibaba.dubbo.remoting.Transporter$Adaptive.connect(Transporter$Adaptive.java)
	at com.alibaba.dubbo.remoting.Transporters.connect(Transporters.java:75)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchanger.connect(HeaderExchanger.java:39)
	at com.alibaba.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:109)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.initClient(DubboProtocol.java:409)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getSharedClient(DubboProtocol.java:377)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getClients(DubboProtocol.java:354)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.refer(DubboProtocol.java:336)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:67)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:108)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:65)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:394)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:333)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:163)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:66)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceFieldElement.inject(ReferenceAnnotationBeanPostProcessor.java:367)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.postProcessPropertyValues(ReferenceAnnotationBeanPostProcessor.java:92)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:759)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:548)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:386)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:89)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:41)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:541)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:763)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:463)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:209)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-08-28 14:42:01.202] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:42:02.356] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-28 14:42:02.357] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-28 14:42:02.415] [INFO ] - [main][ com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281)] : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@3d6745ed
[2019-08-28 14:42:02.717] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/sendMessage],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.sendMessage(com.bittrade.c2c.vo.SendVo)
[2019-08-28 14:42:02.719] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/pullUnreadMessage],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.pullMessage(java.lang.Long)
[2019-08-28 14:42:02.720] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/sendOrder],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.pullOrderDetail(com.bittrade.c2c.vo.SendOrderVo)
[2019-08-28 14:42:02.734] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.listAdverts(com.core.common.DTO.PageDTO<com.bittrade.pojo.dto.TAdvertInfoDTO>,com.bittrade.pojo.vo.QueryAdvertVO,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:42:02.735] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/publish_advert],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.publishAdvert(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.TAdvertInfoDTO)
[2019-08-28 14:42:02.737] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/suspend],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.suspendAdverts(java.util.List<java.lang.Long>,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:42:02.738] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/revoke/{advert_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.revokeAdverts(java.lang.Long,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:42:02.739] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts/users/{coin_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.listAdvertsUsers(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.AdvertUserVO>,java.lang.Long,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:42:02.740] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts/details/{advert_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.getAdvertDetails(java.lang.Long)
[2019-08-28 14:42:02.741] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/place_advert_order/{advert_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.placeAdvertOrder(java.lang.Long,java.math.BigDecimal,java.lang.String,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:42:02.742] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 14:42:02.743] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 14:42:02.744] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 14:42:02.745] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 14:42:02.746] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 14:42:02.747] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 14:42:02.748] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 14:42:02.749] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 14:42:02.750] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 14:42:02.751] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 14:42:02.753] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 14:42:02.754] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 14:42:02.755] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 14:42:02.756] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 14:42:02.756] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 14:42:02.764] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/details/{order_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.getAdvertOrderDetails(java.lang.Long)
[2019-08-28 14:42:02.765] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/click_already_paid/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.clickAlreadyPaid(java.lang.Long)
[2019-08-28 14:42:02.766] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/click_already_receipt/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.clickAlreadyReceipt(java.lang.Long)
[2019-08-28 14:42:02.767] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/cancel/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.cancelAdvertOrder(java.lang.Long)
[2019-08-28 14:42:02.768] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/no_complete],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.noCompleteAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:42:02.769] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/already_complete],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.alreadyCompleteAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:42:02.771] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/already_cancel],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.alreadyCancelAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:42:02.772] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 14:42:02.773] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 14:42:02.775] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 14:42:02.775] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 14:42:02.776] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 14:42:02.777] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 14:42:02.778] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 14:42:02.779] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 14:42:02.780] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 14:42:02.781] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 14:42:02.782] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 14:42:02.782] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 14:42:02.783] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 14:42:02.784] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 14:42:02.785] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 14:42:02.792] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/conversionTotal],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.ConversionVo> com.common.bittrade.controller.TLegalCurrencyAccountController.totalConversion(com.core.web.constant.entity.LoginUser)
[2019-08-28 14:42:02.793] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getAssetsFeign],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.math.BigDecimal com.common.bittrade.controller.TLegalCurrencyAccountController.getAssetsFeign(java.lang.Long)
[2019-08-28 14:42:02.794] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/detail],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetsVO>> com.common.bittrade.controller.TLegalCurrencyAccountController.detail(com.core.web.constant.entity.LoginUser)
[2019-08-28 14:42:02.795] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/availableBalanceFeign],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.lang.String com.common.bittrade.controller.TLegalCurrencyAccountController.availableBalanceFeign(java.lang.Long,java.lang.String)
[2019-08-28 14:42:02.796] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 14:42:02.797] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 14:42:02.798] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 14:42:02.798] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 14:42:02.799] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 14:42:02.800] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 14:42:02.801] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 14:42:02.802] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 14:42:02.803] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 14:42:02.803] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 14:42:02.804] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 14:42:02.805] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 14:42:02.806] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 14:42:02.807] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 14:42:02.808] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 14:42:02.813] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/legalCurrency_coins],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.common.bittrade.controller.TLegalCurrencyCoinController.listLegalCurrencyCoins()
[2019-08-28 14:42:02.814] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 14:42:02.814] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 14:42:02.815] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 14:42:02.816] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 14:42:02.817] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 14:42:02.818] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 14:42:02.819] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 14:42:02.820] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 14:42:02.820] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 14:42:02.821] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 14:42:02.822] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 14:42:02.823] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 14:42:02.824] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 14:42:02.825] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 14:42:02.826] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 14:42:02.831] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/queryType],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetRecordTypeVO>> com.common.bittrade.controller.TLegalCurrencyRecordController.queryTypeForFund()
[2019-08-28 14:42:02.832] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/queryAccountRecord],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.RecordVO>> com.common.bittrade.controller.TLegalCurrencyRecordController.queryAccountRecord(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.AccountTypeDto)
[2019-08-28 14:42:02.833] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 14:42:02.834] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 14:42:02.835] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 14:42:02.836] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 14:42:02.837] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 14:42:02.837] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 14:42:02.838] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 14:42:02.839] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 14:42:02.840] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 14:42:02.841] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 14:42:02.841] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 14:42:02.843] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 14:42:02.844] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 14:42:02.845] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 14:42:02.846] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 14:42:02.851] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/rechargecoinlist],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO com.common.bittrade.controller.WCoinController.rechargecoinlist()
[2019-08-28 14:42:02.852] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/Withdrawcoinlist],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO com.common.bittrade.controller.WCoinController.withdrawcoinlist()
[2019-08-28 14:42:02.853] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/getList],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.model.WCoin>> com.common.bittrade.controller.WCoinController.getList()
[2019-08-28 14:42:02.855] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccount/conversionTotal],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.ConversionVo> com.common.bittrade.controller.WWalletAccountController.totalConversion(com.core.web.constant.entity.LoginUser)
[2019-08-28 14:42:02.856] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccount/detail],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetsVO>> com.common.bittrade.controller.WWalletAccountController.detail(com.core.web.constant.entity.LoginUser)
[2019-08-28 14:42:02.858] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryCurrencies],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.model.WCoin>> com.common.bittrade.controller.WWalletAccountRecordController.queryCurrencies()
[2019-08-28 14:42:02.859] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryTypeForFund],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetRecordTypeVO>> com.common.bittrade.controller.WWalletAccountRecordController.queryTypeForFund()
[2019-08-28 14:42:02.860] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryFundAccountRecord],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.RecordVO>> com.common.bittrade.controller.WWalletAccountRecordController.queryFundAccountRecord(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.AccountTypeDto)
[2019-08-28 14:42:02.866] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
[2019-08-28 14:42:02.867] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
[2019-08-28 14:42:02.868] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
[2019-08-28 14:42:02.876] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2019-08-28 14:42:02.877] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2019-08-28 14:42:02.962] [WARN ] - [DubboClientReconnectTimer-thread-1][ com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:171)] :  [DUBBO] client reconnect to localhost:20881 find error . url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=6056&register.ip=192.168.1.12&side=consumer&timestamp=1566974519362, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=6056&register.ip=192.168.1.12&side=consumer&timestamp=1566974519362) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:156)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	... 3 common frames omitted
[2019-08-28 14:42:04.583] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Exposing 2 endpoint(s) beneath base path '/actuator'
[2019-08-28 14:42:04.623] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2019-08-28 14:42:04.625] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2019-08-28 14:42:04.627] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2019-08-28 14:42:05.084] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'messageBrokerTaskScheduler'
[2019-08-28 14:42:05.223] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped URL path [/c2c/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
[2019-08-28 14:42:05.253] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'brokerChannelExecutor'
[2019-08-28 14:42:05.676] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[2019-08-28 14:42:06.266] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@5a82ebf8: startup date [Wed Aug 28 14:41:46 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@ec2bf82
[2019-08-28 14:42:06.372] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Detected @ExceptionHandler methods in globalExceptionHandler
[2019-08-28 14:42:06.856] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-28 14:42:06.857] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-28 14:42:08.991] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting beans in phase 0
[2019-08-28 14:42:08.991] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting beans in phase 2147483647
[2019-08-28 14:42:08.992] [INFO ] - [main][ springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:151)] : Context refreshed
[2019-08-28 14:42:09.039] [INFO ] - [main][ springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:154)] : Found 1 custom documentation plugin(s)
[2019-08-28 14:42:09.107] [INFO ] - [main][ springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)] : Scanning for api listing references
[2019-08-28 14:42:09.680] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting...
[2019-08-28 14:42:09.680] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
[2019-08-28 14:42:09.682] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Started.
[2019-08-28 14:42:09.713] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Started AdvertInfoTester in 25.87 seconds (JVM running for 28.482)
[2019-08-28 14:43:05.248] [INFO ] - [MessageBroker-1][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
[2019-08-28 14:43:26.428] [INFO ] - [Thread-8][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Closing org.springframework.web.context.support.GenericWebApplicationContext@5a82ebf8: startup date [Wed Aug 28 14:41:46 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@ec2bf82
[2019-08-28 14:43:26.428] [INFO ] - [Thread-2][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$2.run(AwaitingNonWebApplicationListener.java:83)] :  [Dubbo] Current Spring Boot Application is about to shutdown...
[2019-08-28 14:43:26.432] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:64)] :  [DUBBO] Close all registries [], dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:43:26.433] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(DubboProtocol.java:438)] :  [DUBBO] Close dubbo connect: 192.168.1.12:0-->localhost/127.0.0.1:20881, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:43:26.434] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:63)] :  [DUBBO] Destroy reference: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&default.check=false&default.timeout=5000&dubbo=2.6.2&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=6056&register.ip=192.168.1.12&side=consumer&timestamp=1566974519362, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:43:26.570] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:349)] : Initializing Eureka in region us-east-1
[2019-08-28 14:43:26.896] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70)] : Using JSON encoding codec LegacyJacksonJson
[2019-08-28 14:43:26.896] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71)] : Using JSON decoding codec LegacyJacksonJson
[2019-08-28 14:43:27.059] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:63)] :  [DUBBO] Destroy reference: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyService?application=service-consumer&default.check=false&default.timeout=5000&dubbo=2.6.2&interface=com.bittrade.currency.api.service.ITCurrencyService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getCurrencies,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,findAllLegalCurrency,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,findUsableCurrency,updateById,pageMaps,listByMap,getByPK&pid=6056&register.ip=192.168.1.12&side=consumer&timestamp=1566974521203, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:43:27.223] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80)] : Using XML encoding codec XStreamXml
[2019-08-28 14:43:27.223] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81)] : Using XML decoding codec XStreamXml
[2019-08-28 14:43:27.750] [INFO ] - [Thread-8][ com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] : Resolving eureka endpoints via configuration
[2019-08-28 14:43:27.793] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958)] : Disable delta property : false
[2019-08-28 14:43:27.793] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:959)] : Single vip registry refresh property : null
[2019-08-28 14:43:27.794] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960)] : Force full registry fetch : false
[2019-08-28 14:43:27.794] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:961)] : Application is null : false
[2019-08-28 14:43:27.794] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:962)] : Registered Applications size is zero : true
[2019-08-28 14:43:27.795] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:964)] : Application version is -1: true
[2019-08-28 14:43:27.795] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1047)] : Getting all instance registry info from the eureka server
[2019-08-28 14:43:29.961] [ERROR] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83)] : Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$eedec49e.CGLIB$eurekaClient$1(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$eedec49e$$FastClassBySpringCGLIB$$15ab1e20.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:365)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$eedec49e.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:583)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1246)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:535)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:193)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 65 common frames omitted
[2019-08-28 14:43:29.963] [WARN ] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:130)] : Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2019-08-28 14:43:29.965] [ERROR] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:972)] : DiscoveryClient_BITTRADE-C2C/192.168.1.12:-1:bittrade-c2c:@project.version@ - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$eedec49e.CGLIB$eurekaClient$1(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$eedec49e$$FastClassBySpringCGLIB$$15ab1e20.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:365)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$eedec49e.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:583)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1246)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:535)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:193)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
[2019-08-28 14:43:29.966] [WARN ] - [Thread-8][ com.netflix.discovery.DiscoveryClient$1.get(DiscoveryClient.java:290)] : Using default backup registry implementation which does not do anything.
[2019-08-28 14:43:29.970] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1264)] : Starting heartbeat executor: renew interval is: 30
[2019-08-28 14:43:29.978] [INFO ] - [Thread-8][ com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60)] : InstanceInfoReplicator onDemand update allowed rate per min is 4
[2019-08-28 14:43:29.990] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:449)] : Discovery Client initialized at timestamp 1566974609987 with initial instances count: 0
[2019-08-28 14:43:30.010] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:888)] : Shutting down DiscoveryClient ...
[2019-08-28 14:43:33.013] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:922)] : Unregistering ...
[2019-08-28 14:43:35.042] [ERROR] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83)] : Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:923)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:901)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:246)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:494)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 46 common frames omitted
[2019-08-28 14:43:35.043] [WARN ] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:130)] : Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2019-08-28 14:43:35.044] [ERROR] - [Thread-8][ com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:926)] : DiscoveryClient_BITTRADE-C2C/192.168.1.12:-1:bittrade-c2c:@project.version@ - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:923)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:901)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:246)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:494)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
[2019-08-28 14:43:35.068] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:911)] : Completed shut down of DiscoveryClient
[2019-08-28 14:43:36.022] [INFO ] - [Thread-8][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:1948)] : {dataSource-1} closing ...
[2019-08-28 14:43:36.033] [INFO ] - [Thread-8][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:2020)] : {dataSource-1} closed
[2019-08-28 14:46:14.857] [INFO ] - [main][?#?:?] : using logger: com.alibaba.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[2019-08-28 14:46:14.868] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-28 14:46:14.877] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {}
[2019-08-28 14:46:15.325] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@42deb43a: startup date [Wed Aug 28 14:46:15 CST 2019]; root of context hierarchy
[2019-08-28 14:46:15.850] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-28 14:46:15.936] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$fe5eff32] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:46:16.137] [INFO ] - [pool-1-thread-1][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$1.run(AwaitingNonWebApplicationListener.java:61)] :  [Dubbo] Current Spring Boot Application is await...
[2019-08-28 14:46:16.647] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-28 14:46:16.649] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {dubbo.application.id=service-consumer, dubbo.application.name=service-consumer, dubbo.consumer.check=false, dubbo.consumer.timeout=5000, dubbo.monitor=, dubbo.protocol.id=dubbo, dubbo.protocol.name=dubbo, dubbo.protocol.port=20884, dubbo.provider.timeout=5000, dubbo.registry.address=N/A, dubbo.registry.check=false, dubbo.registry.id=my-registry, dubbo.registry.protocol=zookeeper, dubbo.scan=}
[2019-08-28 14:46:16.722] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : The following profiles are active: common,data,eureka,dubbo_provider,dubbo_consumer
[2019-08-28 14:46:16.731] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Refreshing org.springframework.web.context.support.GenericWebApplicationContext@41ffaeb8: startup date [Wed Aug 28 14:46:16 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@42deb43a
[2019-08-28 14:46:18.478] [WARN ] - [main][ org.mybatis.logging.Logger.warn(Logger.java:44)] : No MyBatis mapper was found in '[com.baomidou.cloud.service.*.mapper*]' package. Please check your configuration.
[2019-08-28 14:46:19.515] [INFO ] - [main][ org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:172)] : Multiple Spring Data modules found, entering strict repository configuration mode!
[2019-08-28 14:46:19.999] [WARN ] - [main][ com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans(ServiceAnnotationBeanPostProcessor.java:155)] :  [DUBBO] No Spring Bean annotating Dubbo's @Service was found under package[com.bittrade.c2c], dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:46:20.480] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : BeanFactory id=61352edb-e99a-3c04-9bd9-f50ca066a043
[2019-08-28 14:46:20.699] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-28 14:46:21.027] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:46:21.044] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionProperties' of type [com.core.framework.props.TransactionProperties$$EnhancerBySpringCGLIB$$f38dbedb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:46:21.067] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$fbf0f1a7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:46:21.073] [INFO ] - [main][ com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource(DruidDataSourceAutoConfigure.java:56)] : Init DruidDataSource
[2019-08-28 14:46:21.220] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:46:21.432] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003)] : {dataSource-1} inited
[2019-08-28 14:46:21.433] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:46:21.483] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:46:21.499] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$$EnhancerBySpringCGLIB$$76b8f73f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:46:21.521] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:46:21.530] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:46:21.540] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration$$EnhancerBySpringCGLIB$$8f4594a4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:46:21.584] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:46:21.585] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionConfig' of type [com.core.framework.config.TransactionConfig$$EnhancerBySpringCGLIB$$e8497980] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:46:21.614] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'defaultPointcutAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:46:21.645] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e244fc35] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:46:22.012] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' of type [com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration$$EnhancerBySpringCGLIB$$f146a1a7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:46:22.036] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:46:22.048] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:46:22.053] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:46:22.058] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:46:22.063] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:46:22.134] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$fe5eff32] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:46:27.361] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'clientInboundChannelExecutor'
[2019-08-28 14:46:27.397] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'clientOutboundChannelExecutor'
[2019-08-28 14:46:27.962] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService
[2019-08-28 14:46:28.259] [INFO ] - [main][ com.core.framework.config.redis.JedisClusterConfig.getJedisCluster(JedisClusterConfig.java:35)] : 进入redis集群初始化方法：访问集群地址为：[154.222.138.5:7000, 154.222.138.5:7001, 154.222.138.5:7002, 154.222.138.5:7003, 154.222.138.5:7004, 154.222.138.5:7005]
[2019-08-28 14:46:29.987] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyTradeServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:46:31.699] [WARN ] - [main][ com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:98)] :  [DUBBO] Failed to start NettyClient HAHE/192.168.1.12 connect to the server localhost/127.0.0.1:20881 (check == false, ignore and retry later!), cause: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=3552&register.ip=192.168.1.12&side=consumer&timestamp=1566974789988) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=3552&register.ip=192.168.1.12&side=consumer&timestamp=1566974789988) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:89)
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.<init>(NettyClient.java:59)
	at com.alibaba.dubbo.remoting.transport.netty.NettyTransporter.connect(NettyTransporter.java:37)
	at com.alibaba.dubbo.remoting.Transporter$Adaptive.connect(Transporter$Adaptive.java)
	at com.alibaba.dubbo.remoting.Transporters.connect(Transporters.java:75)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchanger.connect(HeaderExchanger.java:39)
	at com.alibaba.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:109)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.initClient(DubboProtocol.java:409)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getSharedClient(DubboProtocol.java:377)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getClients(DubboProtocol.java:354)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.refer(DubboProtocol.java:336)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:65)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:108)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:67)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:394)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:333)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:163)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:66)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceFieldElement.inject(ReferenceAnnotationBeanPostProcessor.java:367)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.postProcessPropertyValues(ReferenceAnnotationBeanPostProcessor.java:92)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:759)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:548)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:386)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:89)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:41)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:541)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:763)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:463)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:209)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-08-28 14:46:31.890] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:46:33.069] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-28 14:46:33.070] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-28 14:46:33.114] [INFO ] - [main][ com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281)] : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@73bcd9b4
[2019-08-28 14:46:33.423] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/sendMessage],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.sendMessage(com.bittrade.c2c.vo.SendVo)
[2019-08-28 14:46:33.425] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/pullUnreadMessage],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.pullMessage(java.lang.Long)
[2019-08-28 14:46:33.426] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/sendOrder],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.pullOrderDetail(com.bittrade.c2c.vo.SendOrderVo)
[2019-08-28 14:46:33.439] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.listAdverts(com.core.common.DTO.PageDTO<com.bittrade.pojo.dto.TAdvertInfoDTO>,com.bittrade.pojo.vo.QueryAdvertVO,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:46:33.441] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/publish_advert],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.publishAdvert(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.TAdvertInfoDTO)
[2019-08-28 14:46:33.442] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts/details/{advert_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.getAdvertDetails(java.lang.Long)
[2019-08-28 14:46:33.443] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/suspend],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.suspendAdverts(java.util.List<java.lang.Long>,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:46:33.444] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/revoke/{advert_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.revokeAdverts(java.lang.Long,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:46:33.444] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts/users/{coin_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.listAdvertsUsers(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.AdvertUserVO>,java.lang.Long,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:46:33.445] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/place_advert_order/{advert_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.placeAdvertOrder(java.lang.Long,java.math.BigDecimal,java.lang.String,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:46:33.447] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 14:46:33.447] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 14:46:33.448] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 14:46:33.449] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 14:46:33.450] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 14:46:33.451] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 14:46:33.452] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 14:46:33.453] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 14:46:33.454] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 14:46:33.455] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 14:46:33.455] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 14:46:33.456] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 14:46:33.457] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 14:46:33.458] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 14:46:33.459] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 14:46:33.466] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/details/{order_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.getAdvertOrderDetails(java.lang.Long)
[2019-08-28 14:46:33.467] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/click_already_receipt/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.clickAlreadyReceipt(java.lang.Long)
[2019-08-28 14:46:33.468] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/cancel/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.cancelAdvertOrder(java.lang.Long)
[2019-08-28 14:46:33.469] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/already_cancel],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.alreadyCancelAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:46:33.470] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/no_complete],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.noCompleteAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:46:33.471] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/already_complete],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.alreadyCompleteAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:46:33.472] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/click_already_paid/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.clickAlreadyPaid(java.lang.Long)
[2019-08-28 14:46:33.473] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 14:46:33.474] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 14:46:33.475] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 14:46:33.476] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 14:46:33.477] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 14:46:33.479] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 14:46:33.480] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 14:46:33.481] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 14:46:33.482] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 14:46:33.483] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 14:46:33.483] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 14:46:33.484] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 14:46:33.485] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 14:46:33.486] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 14:46:33.487] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 14:46:33.493] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/availableBalanceFeign],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.lang.String com.common.bittrade.controller.TLegalCurrencyAccountController.availableBalanceFeign(java.lang.Long,java.lang.String)
[2019-08-28 14:46:33.494] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/detail],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetsVO>> com.common.bittrade.controller.TLegalCurrencyAccountController.detail(com.core.web.constant.entity.LoginUser)
[2019-08-28 14:46:33.495] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/conversionTotal],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.ConversionVo> com.common.bittrade.controller.TLegalCurrencyAccountController.totalConversion(com.core.web.constant.entity.LoginUser)
[2019-08-28 14:46:33.496] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getAssetsFeign],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.math.BigDecimal com.common.bittrade.controller.TLegalCurrencyAccountController.getAssetsFeign(java.lang.Long)
[2019-08-28 14:46:33.497] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 14:46:33.497] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 14:46:33.498] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 14:46:33.499] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 14:46:33.500] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 14:46:33.501] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 14:46:33.501] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 14:46:33.502] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 14:46:33.503] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 14:46:33.504] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 14:46:33.504] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 14:46:33.505] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 14:46:33.506] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 14:46:33.507] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 14:46:33.508] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 14:46:33.513] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/legalCurrency_coins],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.common.bittrade.controller.TLegalCurrencyCoinController.listLegalCurrencyCoins()
[2019-08-28 14:46:33.514] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 14:46:33.515] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 14:46:33.515] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 14:46:33.516] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 14:46:33.517] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 14:46:33.518] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 14:46:33.518] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 14:46:33.519] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 14:46:33.520] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 14:46:33.521] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 14:46:33.522] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 14:46:33.522] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 14:46:33.523] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 14:46:33.524] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 14:46:33.525] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 14:46:33.530] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/queryAccountRecord],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.RecordVO>> com.common.bittrade.controller.TLegalCurrencyRecordController.queryAccountRecord(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.AccountTypeDto)
[2019-08-28 14:46:33.531] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/queryType],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetRecordTypeVO>> com.common.bittrade.controller.TLegalCurrencyRecordController.queryTypeForFund()
[2019-08-28 14:46:33.532] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 14:46:33.533] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 14:46:33.533] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 14:46:33.534] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 14:46:33.535] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 14:46:33.536] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 14:46:33.537] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 14:46:33.537] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 14:46:33.538] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 14:46:33.539] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 14:46:33.540] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 14:46:33.541] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 14:46:33.542] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 14:46:33.543] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 14:46:33.544] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 14:46:33.549] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/Withdrawcoinlist],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO com.common.bittrade.controller.WCoinController.withdrawcoinlist()
[2019-08-28 14:46:33.550] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/getList],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.model.WCoin>> com.common.bittrade.controller.WCoinController.getList()
[2019-08-28 14:46:33.551] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/rechargecoinlist],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO com.common.bittrade.controller.WCoinController.rechargecoinlist()
[2019-08-28 14:46:33.553] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccount/detail],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetsVO>> com.common.bittrade.controller.WWalletAccountController.detail(com.core.web.constant.entity.LoginUser)
[2019-08-28 14:46:33.553] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccount/conversionTotal],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.ConversionVo> com.common.bittrade.controller.WWalletAccountController.totalConversion(com.core.web.constant.entity.LoginUser)
[2019-08-28 14:46:33.555] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryFundAccountRecord],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.RecordVO>> com.common.bittrade.controller.WWalletAccountRecordController.queryFundAccountRecord(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.AccountTypeDto)
[2019-08-28 14:46:33.556] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryTypeForFund],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetRecordTypeVO>> com.common.bittrade.controller.WWalletAccountRecordController.queryTypeForFund()
[2019-08-28 14:46:33.557] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryCurrencies],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.model.WCoin>> com.common.bittrade.controller.WWalletAccountRecordController.queryCurrencies()
[2019-08-28 14:46:33.562] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
[2019-08-28 14:46:33.563] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
[2019-08-28 14:46:33.564] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
[2019-08-28 14:46:33.569] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2019-08-28 14:46:33.570] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2019-08-28 14:46:33.635] [WARN ] - [DubboClientReconnectTimer-thread-1][ com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:171)] :  [DUBBO] client reconnect to localhost:20881 find error . url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=3552&register.ip=192.168.1.12&side=consumer&timestamp=1566974789988, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=3552&register.ip=192.168.1.12&side=consumer&timestamp=1566974789988) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:156)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	... 3 common frames omitted
[2019-08-28 14:46:35.246] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Exposing 2 endpoint(s) beneath base path '/actuator'
[2019-08-28 14:46:35.285] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2019-08-28 14:46:35.287] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2019-08-28 14:46:35.289] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2019-08-28 14:46:35.764] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'messageBrokerTaskScheduler'
[2019-08-28 14:46:35.937] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped URL path [/c2c/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
[2019-08-28 14:46:35.968] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'brokerChannelExecutor'
[2019-08-28 14:46:36.404] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[2019-08-28 14:46:36.990] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@41ffaeb8: startup date [Wed Aug 28 14:46:16 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@42deb43a
[2019-08-28 14:46:37.099] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Detected @ExceptionHandler methods in globalExceptionHandler
[2019-08-28 14:46:37.586] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-28 14:46:37.587] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-28 14:46:39.653] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting beans in phase 0
[2019-08-28 14:46:39.654] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting beans in phase 2147483647
[2019-08-28 14:46:39.654] [INFO ] - [main][ springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:151)] : Context refreshed
[2019-08-28 14:46:39.705] [INFO ] - [main][ springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:154)] : Found 1 custom documentation plugin(s)
[2019-08-28 14:46:39.776] [INFO ] - [main][ springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)] : Scanning for api listing references
[2019-08-28 14:46:40.390] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting...
[2019-08-28 14:46:40.390] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
[2019-08-28 14:46:40.392] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Started.
[2019-08-28 14:46:40.414] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Started AdvertInfoTester in 25.922 seconds (JVM running for 28.519)
[2019-08-28 14:46:43.106] [INFO ] - [Thread-8][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Closing org.springframework.web.context.support.GenericWebApplicationContext@41ffaeb8: startup date [Wed Aug 28 14:46:16 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@42deb43a
[2019-08-28 14:46:43.106] [INFO ] - [Thread-2][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$2.run(AwaitingNonWebApplicationListener.java:83)] :  [Dubbo] Current Spring Boot Application is about to shutdown...
[2019-08-28 14:46:43.111] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:64)] :  [DUBBO] Close all registries [], dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:46:43.113] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(DubboProtocol.java:438)] :  [DUBBO] Close dubbo connect: 192.168.1.12:0-->localhost/127.0.0.1:20881, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:46:43.114] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:63)] :  [DUBBO] Destroy reference: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyService?application=service-consumer&default.check=false&default.timeout=5000&dubbo=2.6.2&interface=com.bittrade.currency.api.service.ITCurrencyService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getCurrencies,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,findAllLegalCurrency,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,findUsableCurrency,updateById,pageMaps,listByMap,getByPK&pid=3552&register.ip=192.168.1.12&side=consumer&timestamp=1566974791891, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:46:43.127] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:63)] :  [DUBBO] Destroy reference: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&default.check=false&default.timeout=5000&dubbo=2.6.2&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=3552&register.ip=192.168.1.12&side=consumer&timestamp=1566974789988, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:46:43.265] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:349)] : Initializing Eureka in region us-east-1
[2019-08-28 14:46:43.588] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70)] : Using JSON encoding codec LegacyJacksonJson
[2019-08-28 14:46:43.589] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71)] : Using JSON decoding codec LegacyJacksonJson
[2019-08-28 14:46:43.872] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80)] : Using XML encoding codec XStreamXml
[2019-08-28 14:46:43.873] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81)] : Using XML decoding codec XStreamXml
[2019-08-28 14:46:44.375] [INFO ] - [Thread-8][ com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] : Resolving eureka endpoints via configuration
[2019-08-28 14:46:44.419] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958)] : Disable delta property : false
[2019-08-28 14:46:44.419] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:959)] : Single vip registry refresh property : null
[2019-08-28 14:46:44.419] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960)] : Force full registry fetch : false
[2019-08-28 14:46:44.420] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:961)] : Application is null : false
[2019-08-28 14:46:44.420] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:962)] : Registered Applications size is zero : true
[2019-08-28 14:46:44.420] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:964)] : Application version is -1: true
[2019-08-28 14:46:44.420] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1047)] : Getting all instance registry info from the eureka server
[2019-08-28 14:46:46.603] [ERROR] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83)] : Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$5c7f851.CGLIB$eurekaClient$1(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$5c7f851$$FastClassBySpringCGLIB$$f6dda2d5.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:365)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$5c7f851.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:583)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1246)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:535)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:193)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 65 common frames omitted
[2019-08-28 14:46:46.605] [WARN ] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:130)] : Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2019-08-28 14:46:46.606] [ERROR] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:972)] : DiscoveryClient_BITTRADE-C2C/192.168.1.12:-1:bittrade-c2c:@project.version@ - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$5c7f851.CGLIB$eurekaClient$1(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$5c7f851$$FastClassBySpringCGLIB$$f6dda2d5.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:365)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$5c7f851.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:583)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1246)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:535)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:193)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
[2019-08-28 14:46:46.608] [WARN ] - [Thread-8][ com.netflix.discovery.DiscoveryClient$1.get(DiscoveryClient.java:290)] : Using default backup registry implementation which does not do anything.
[2019-08-28 14:46:46.612] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1264)] : Starting heartbeat executor: renew interval is: 30
[2019-08-28 14:46:46.620] [INFO ] - [Thread-8][ com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60)] : InstanceInfoReplicator onDemand update allowed rate per min is 4
[2019-08-28 14:46:46.629] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:449)] : Discovery Client initialized at timestamp 1566974806625 with initial instances count: 0
[2019-08-28 14:46:46.653] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:888)] : Shutting down DiscoveryClient ...
[2019-08-28 14:46:49.654] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:922)] : Unregistering ...
[2019-08-28 14:46:51.664] [ERROR] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83)] : Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:923)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:901)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:246)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:494)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 46 common frames omitted
[2019-08-28 14:46:51.666] [WARN ] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:130)] : Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2019-08-28 14:46:51.667] [ERROR] - [Thread-8][ com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:926)] : DiscoveryClient_BITTRADE-C2C/192.168.1.12:-1:bittrade-c2c:@project.version@ - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:923)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:901)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:246)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:494)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
[2019-08-28 14:46:51.693] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:911)] : Completed shut down of DiscoveryClient
[2019-08-28 14:46:51.711] [INFO ] - [Thread-8][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:1948)] : {dataSource-1} closing ...
[2019-08-28 14:46:51.720] [INFO ] - [Thread-8][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:2020)] : {dataSource-1} closed
[2019-08-28 14:49:35.169] [INFO ] - [main][?#?:?] : using logger: com.alibaba.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[2019-08-28 14:49:35.180] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-28 14:49:35.187] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {}
[2019-08-28 14:49:35.639] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@f5c79a6: startup date [Wed Aug 28 14:49:35 CST 2019]; root of context hierarchy
[2019-08-28 14:49:36.180] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-28 14:49:36.269] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f5f97a54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:49:36.487] [INFO ] - [pool-1-thread-1][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$1.run(AwaitingNonWebApplicationListener.java:61)] :  [Dubbo] Current Spring Boot Application is await...
[2019-08-28 14:49:37.032] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-28 14:49:37.034] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {dubbo.application.id=service-consumer, dubbo.application.name=service-consumer, dubbo.consumer.check=false, dubbo.consumer.timeout=5000, dubbo.monitor=, dubbo.protocol.id=dubbo, dubbo.protocol.name=dubbo, dubbo.protocol.port=20884, dubbo.provider.timeout=5000, dubbo.registry.address=N/A, dubbo.registry.check=false, dubbo.registry.id=my-registry, dubbo.registry.protocol=zookeeper, dubbo.scan=}
[2019-08-28 14:49:37.106] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : The following profiles are active: common,data,eureka,dubbo_provider,dubbo_consumer
[2019-08-28 14:49:37.115] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Refreshing org.springframework.web.context.support.GenericWebApplicationContext@7ed9499e: startup date [Wed Aug 28 14:49:37 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@f5c79a6
[2019-08-28 14:49:38.772] [WARN ] - [main][ org.mybatis.logging.Logger.warn(Logger.java:44)] : No MyBatis mapper was found in '[com.baomidou.cloud.service.*.mapper*]' package. Please check your configuration.
[2019-08-28 14:49:39.724] [INFO ] - [main][ org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:172)] : Multiple Spring Data modules found, entering strict repository configuration mode!
[2019-08-28 14:49:40.154] [WARN ] - [main][ com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans(ServiceAnnotationBeanPostProcessor.java:155)] :  [DUBBO] No Spring Bean annotating Dubbo's @Service was found under package[com.bittrade.c2c], dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:49:40.654] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : BeanFactory id=61352edb-e99a-3c04-9bd9-f50ca066a043
[2019-08-28 14:49:40.891] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-28 14:49:41.249] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:49:41.264] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionProperties' of type [com.core.framework.props.TransactionProperties$$EnhancerBySpringCGLIB$$eb2839fd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:49:41.282] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$f38b6cc9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:49:41.288] [INFO ] - [main][ com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource(DruidDataSourceAutoConfigure.java:56)] : Init DruidDataSource
[2019-08-28 14:49:41.430] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:49:41.630] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003)] : {dataSource-1} inited
[2019-08-28 14:49:41.632] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:49:41.678] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:49:41.691] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$$EnhancerBySpringCGLIB$$6e537261] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:49:41.718] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:49:41.728] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:49:41.739] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration$$EnhancerBySpringCGLIB$$86e00fc6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:49:41.780] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:49:41.781] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionConfig' of type [com.core.framework.config.TransactionConfig$$EnhancerBySpringCGLIB$$dfe3f4a2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:49:41.812] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'defaultPointcutAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:49:41.832] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d9df7757] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:49:42.172] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' of type [com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration$$EnhancerBySpringCGLIB$$e8e11cc9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:49:42.190] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:49:42.199] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:49:42.202] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:49:42.205] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:49:42.208] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:49:42.274] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f5f97a54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:49:47.437] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'clientInboundChannelExecutor'
[2019-08-28 14:49:47.475] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'clientOutboundChannelExecutor'
[2019-08-28 14:49:47.998] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService
[2019-08-28 14:49:48.312] [INFO ] - [main][ com.core.framework.config.redis.JedisClusterConfig.getJedisCluster(JedisClusterConfig.java:35)] : 进入redis集群初始化方法：访问集群地址为：[154.222.138.5:7000, 154.222.138.5:7001, 154.222.138.5:7002, 154.222.138.5:7003, 154.222.138.5:7004, 154.222.138.5:7005]
[2019-08-28 14:49:49.863] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyTradeServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:49:51.508] [WARN ] - [main][ com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:98)] :  [DUBBO] Failed to start NettyClient HAHE/192.168.1.12 connect to the server localhost/127.0.0.1:20881 (check == false, ignore and retry later!), cause: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=6432&register.ip=192.168.1.12&side=consumer&timestamp=1566974989864) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=6432&register.ip=192.168.1.12&side=consumer&timestamp=1566974989864) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:89)
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.<init>(NettyClient.java:59)
	at com.alibaba.dubbo.remoting.transport.netty.NettyTransporter.connect(NettyTransporter.java:37)
	at com.alibaba.dubbo.remoting.Transporter$Adaptive.connect(Transporter$Adaptive.java)
	at com.alibaba.dubbo.remoting.Transporters.connect(Transporters.java:75)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchanger.connect(HeaderExchanger.java:39)
	at com.alibaba.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:109)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.initClient(DubboProtocol.java:409)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getSharedClient(DubboProtocol.java:377)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getClients(DubboProtocol.java:354)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.refer(DubboProtocol.java:336)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:108)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:65)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:67)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:394)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:333)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:163)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:66)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceFieldElement.inject(ReferenceAnnotationBeanPostProcessor.java:367)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.postProcessPropertyValues(ReferenceAnnotationBeanPostProcessor.java:92)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:759)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:548)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:386)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:89)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:41)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:541)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:763)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:463)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:209)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-08-28 14:49:51.714] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:49:52.866] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-28 14:49:52.867] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-28 14:49:52.902] [INFO ] - [main][ com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281)] : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@3d6745ed
[2019-08-28 14:49:53.187] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/sendMessage],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.sendMessage(com.bittrade.c2c.vo.SendVo)
[2019-08-28 14:49:53.190] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/sendOrder],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.pullOrderDetail(com.bittrade.c2c.vo.SendOrderVo)
[2019-08-28 14:49:53.191] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/pullUnreadMessage],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.pullMessage(java.lang.Long)
[2019-08-28 14:49:53.203] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.listAdverts(com.core.common.DTO.PageDTO<com.bittrade.pojo.dto.TAdvertInfoDTO>,com.bittrade.pojo.vo.QueryAdvertVO,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:49:53.204] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/publish_advert],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.publishAdvert(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.TAdvertInfoDTO)
[2019-08-28 14:49:53.205] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts/details/{advert_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.getAdvertDetails(java.lang.Long)
[2019-08-28 14:49:53.206] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/suspend],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.suspendAdverts(java.util.List<java.lang.Long>,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:49:53.207] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts/users/{coin_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.listAdvertsUsers(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.AdvertUserVO>,java.lang.Long,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:49:53.208] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/revoke/{advert_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.revokeAdverts(java.lang.Long,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:49:53.209] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/place_advert_order/{advert_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.placeAdvertOrder(java.lang.Long,java.math.BigDecimal,java.lang.String,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:49:53.210] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 14:49:53.211] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 14:49:53.212] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 14:49:53.214] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 14:49:53.215] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 14:49:53.216] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 14:49:53.217] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 14:49:53.218] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 14:49:53.219] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 14:49:53.219] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 14:49:53.225] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 14:49:53.226] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 14:49:53.228] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 14:49:53.230] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 14:49:53.231] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 14:49:53.242] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/details/{order_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.getAdvertOrderDetails(java.lang.Long)
[2019-08-28 14:49:53.243] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/click_already_paid/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.clickAlreadyPaid(java.lang.Long)
[2019-08-28 14:49:53.245] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/already_cancel],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.alreadyCancelAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:49:53.248] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/already_complete],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.alreadyCompleteAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:49:53.249] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/no_complete],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.noCompleteAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:49:53.250] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/click_already_receipt/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.clickAlreadyReceipt(java.lang.Long)
[2019-08-28 14:49:53.251] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/cancel/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.cancelAdvertOrder(java.lang.Long)
[2019-08-28 14:49:53.252] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 14:49:53.253] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 14:49:53.254] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 14:49:53.255] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 14:49:53.256] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 14:49:53.257] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 14:49:53.258] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 14:49:53.260] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 14:49:53.261] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 14:49:53.262] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 14:49:53.263] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 14:49:53.264] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 14:49:53.266] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 14:49:53.267] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 14:49:53.268] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 14:49:53.277] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/detail],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetsVO>> com.common.bittrade.controller.TLegalCurrencyAccountController.detail(com.core.web.constant.entity.LoginUser)
[2019-08-28 14:49:53.279] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getAssetsFeign],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.math.BigDecimal com.common.bittrade.controller.TLegalCurrencyAccountController.getAssetsFeign(java.lang.Long)
[2019-08-28 14:49:53.280] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/conversionTotal],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.ConversionVo> com.common.bittrade.controller.TLegalCurrencyAccountController.totalConversion(com.core.web.constant.entity.LoginUser)
[2019-08-28 14:49:53.281] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/availableBalanceFeign],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.lang.String com.common.bittrade.controller.TLegalCurrencyAccountController.availableBalanceFeign(java.lang.Long,java.lang.String)
[2019-08-28 14:49:53.283] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 14:49:53.284] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 14:49:53.285] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 14:49:53.286] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 14:49:53.287] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 14:49:53.288] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 14:49:53.288] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 14:49:53.289] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 14:49:53.290] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 14:49:53.291] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 14:49:53.291] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 14:49:53.292] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 14:49:53.293] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 14:49:53.294] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 14:49:53.294] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 14:49:53.299] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/legalCurrency_coins],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.common.bittrade.controller.TLegalCurrencyCoinController.listLegalCurrencyCoins()
[2019-08-28 14:49:53.300] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 14:49:53.301] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 14:49:53.302] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 14:49:53.303] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 14:49:53.303] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 14:49:53.304] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 14:49:53.305] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 14:49:53.306] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 14:49:53.307] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 14:49:53.307] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 14:49:53.308] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 14:49:53.309] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 14:49:53.310] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 14:49:53.311] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 14:49:53.312] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 14:49:53.317] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/queryType],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetRecordTypeVO>> com.common.bittrade.controller.TLegalCurrencyRecordController.queryTypeForFund()
[2019-08-28 14:49:53.318] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/queryAccountRecord],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.RecordVO>> com.common.bittrade.controller.TLegalCurrencyRecordController.queryAccountRecord(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.AccountTypeDto)
[2019-08-28 14:49:53.319] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 14:49:53.320] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 14:49:53.321] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 14:49:53.322] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 14:49:53.323] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 14:49:53.324] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 14:49:53.324] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 14:49:53.325] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 14:49:53.326] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 14:49:53.327] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 14:49:53.327] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 14:49:53.329] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 14:49:53.330] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 14:49:53.330] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 14:49:53.331] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 14:49:53.336] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/rechargecoinlist],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO com.common.bittrade.controller.WCoinController.rechargecoinlist()
[2019-08-28 14:49:53.337] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/Withdrawcoinlist],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO com.common.bittrade.controller.WCoinController.withdrawcoinlist()
[2019-08-28 14:49:53.338] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/getList],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.model.WCoin>> com.common.bittrade.controller.WCoinController.getList()
[2019-08-28 14:49:53.340] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccount/detail],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetsVO>> com.common.bittrade.controller.WWalletAccountController.detail(com.core.web.constant.entity.LoginUser)
[2019-08-28 14:49:53.341] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccount/conversionTotal],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.ConversionVo> com.common.bittrade.controller.WWalletAccountController.totalConversion(com.core.web.constant.entity.LoginUser)
[2019-08-28 14:49:53.343] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryTypeForFund],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetRecordTypeVO>> com.common.bittrade.controller.WWalletAccountRecordController.queryTypeForFund()
[2019-08-28 14:49:53.343] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryCurrencies],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.model.WCoin>> com.common.bittrade.controller.WWalletAccountRecordController.queryCurrencies()
[2019-08-28 14:49:53.344] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryFundAccountRecord],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.RecordVO>> com.common.bittrade.controller.WWalletAccountRecordController.queryFundAccountRecord(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.AccountTypeDto)
[2019-08-28 14:49:53.349] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
[2019-08-28 14:49:53.350] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
[2019-08-28 14:49:53.352] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
[2019-08-28 14:49:53.358] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2019-08-28 14:49:53.359] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2019-08-28 14:49:53.446] [WARN ] - [DubboClientReconnectTimer-thread-1][ com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:171)] :  [DUBBO] client reconnect to localhost:20881 find error . url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=6432&register.ip=192.168.1.12&side=consumer&timestamp=1566974989864, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=6432&register.ip=192.168.1.12&side=consumer&timestamp=1566974989864) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:156)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	... 3 common frames omitted
[2019-08-28 14:49:55.077] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Exposing 2 endpoint(s) beneath base path '/actuator'
[2019-08-28 14:49:55.123] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2019-08-28 14:49:55.125] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2019-08-28 14:49:55.127] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2019-08-28 14:49:55.585] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'messageBrokerTaskScheduler'
[2019-08-28 14:49:55.741] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped URL path [/c2c/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
[2019-08-28 14:49:55.774] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'brokerChannelExecutor'
[2019-08-28 14:49:56.207] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[2019-08-28 14:49:56.747] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@7ed9499e: startup date [Wed Aug 28 14:49:37 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@f5c79a6
[2019-08-28 14:49:56.853] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Detected @ExceptionHandler methods in globalExceptionHandler
[2019-08-28 14:49:57.338] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-28 14:49:57.338] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-28 14:49:59.171] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting beans in phase 0
[2019-08-28 14:49:59.171] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting beans in phase 2147483647
[2019-08-28 14:49:59.171] [INFO ] - [main][ springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:151)] : Context refreshed
[2019-08-28 14:49:59.247] [INFO ] - [main][ springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:154)] : Found 1 custom documentation plugin(s)
[2019-08-28 14:49:59.323] [INFO ] - [main][ springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)] : Scanning for api listing references
[2019-08-28 14:49:59.889] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting...
[2019-08-28 14:49:59.890] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
[2019-08-28 14:49:59.891] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Started.
[2019-08-28 14:49:59.913] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Started AdvertInfoTester in 25.111 seconds (JVM running for 27.705)
[2019-08-28 14:50:15.161] [INFO ] - [Thread-2][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$2.run(AwaitingNonWebApplicationListener.java:83)] :  [Dubbo] Current Spring Boot Application is about to shutdown...
[2019-08-28 14:50:15.167] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:64)] :  [DUBBO] Close all registries [], dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:50:15.168] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(DubboProtocol.java:438)] :  [DUBBO] Close dubbo connect: 192.168.1.12:0-->localhost/127.0.0.1:20881, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:50:15.169] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:63)] :  [DUBBO] Destroy reference: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&default.check=false&default.timeout=5000&dubbo=2.6.2&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=6432&register.ip=192.168.1.12&side=consumer&timestamp=1566974989864, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:50:15.180] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:63)] :  [DUBBO] Destroy reference: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyService?application=service-consumer&default.check=false&default.timeout=5000&dubbo=2.6.2&interface=com.bittrade.currency.api.service.ITCurrencyService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getCurrencies,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,findAllLegalCurrency,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,findUsableCurrency,updateById,pageMaps,listByMap,getByPK&pid=6432&register.ip=192.168.1.12&side=consumer&timestamp=1566974991715, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:50:15.299] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:349)] : Initializing Eureka in region us-east-1
[2019-08-28 14:50:15.622] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70)] : Using JSON encoding codec LegacyJacksonJson
[2019-08-28 14:50:15.622] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71)] : Using JSON decoding codec LegacyJacksonJson
[2019-08-28 14:50:15.937] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80)] : Using XML encoding codec XStreamXml
[2019-08-28 14:50:15.938] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81)] : Using XML decoding codec XStreamXml
[2019-08-28 14:50:16.496] [INFO ] - [Thread-8][ com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] : Resolving eureka endpoints via configuration
[2019-08-28 14:50:16.540] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958)] : Disable delta property : false
[2019-08-28 14:50:16.541] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:959)] : Single vip registry refresh property : null
[2019-08-28 14:50:16.541] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960)] : Force full registry fetch : false
[2019-08-28 14:50:16.541] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:961)] : Application is null : false
[2019-08-28 14:50:16.542] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:962)] : Registered Applications size is zero : true
[2019-08-28 14:50:16.542] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:964)] : Application version is -1: true
[2019-08-28 14:50:16.542] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1047)] : Getting all instance registry info from the eureka server
[2019-08-28 14:50:18.705] [ERROR] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83)] : Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$fd627373.CGLIB$eurekaClient$0(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$fd627373$$FastClassBySpringCGLIB$$f7446ff4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:365)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$fd627373.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:583)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1246)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:535)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:193)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 65 common frames omitted
[2019-08-28 14:50:18.707] [WARN ] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:130)] : Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2019-08-28 14:50:18.709] [ERROR] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:972)] : DiscoveryClient_BITTRADE-C2C/192.168.1.12:-1:bittrade-c2c:@project.version@ - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$fd627373.CGLIB$eurekaClient$0(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$fd627373$$FastClassBySpringCGLIB$$f7446ff4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:365)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$fd627373.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:583)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1246)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:535)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:193)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
[2019-08-28 14:50:18.710] [WARN ] - [Thread-8][ com.netflix.discovery.DiscoveryClient$1.get(DiscoveryClient.java:290)] : Using default backup registry implementation which does not do anything.
[2019-08-28 14:50:18.714] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1264)] : Starting heartbeat executor: renew interval is: 30
[2019-08-28 14:50:18.726] [INFO ] - [Thread-8][ com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60)] : InstanceInfoReplicator onDemand update allowed rate per min is 4
[2019-08-28 14:50:18.737] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:449)] : Discovery Client initialized at timestamp 1566975018735 with initial instances count: 0
[2019-08-28 14:50:18.756] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:888)] : Shutting down DiscoveryClient ...
[2019-08-28 14:50:21.758] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:922)] : Unregistering ...
[2019-08-28 14:50:23.779] [ERROR] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83)] : Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:923)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:901)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:246)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:494)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 46 common frames omitted
[2019-08-28 14:50:23.780] [WARN ] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:130)] : Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2019-08-28 14:50:23.781] [ERROR] - [Thread-8][ com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:926)] : DiscoveryClient_BITTRADE-C2C/192.168.1.12:-1:bittrade-c2c:@project.version@ - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:923)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:901)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:246)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:494)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
[2019-08-28 14:50:23.795] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:911)] : Completed shut down of DiscoveryClient
[2019-08-28 14:50:24.814] [INFO ] - [Thread-8][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:1948)] : {dataSource-1} closing ...
[2019-08-28 14:50:24.825] [INFO ] - [Thread-8][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:2020)] : {dataSource-1} closed
[2019-08-28 14:51:35.193] [INFO ] - [main][?#?:?] : using logger: com.alibaba.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[2019-08-28 14:51:35.204] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-28 14:51:35.211] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {}
[2019-08-28 14:51:35.658] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1a6f5124: startup date [Wed Aug 28 14:51:35 CST 2019]; root of context hierarchy
[2019-08-28 14:51:36.197] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-28 14:51:36.287] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$65e83111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:51:36.491] [INFO ] - [pool-1-thread-1][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$1.run(AwaitingNonWebApplicationListener.java:61)] :  [Dubbo] Current Spring Boot Application is await...
[2019-08-28 14:51:37.019] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-28 14:51:37.021] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {dubbo.application.id=service-consumer, dubbo.application.name=service-consumer, dubbo.consumer.check=false, dubbo.consumer.timeout=5000, dubbo.monitor=, dubbo.protocol.id=dubbo, dubbo.protocol.name=dubbo, dubbo.protocol.port=20884, dubbo.provider.timeout=5000, dubbo.registry.address=N/A, dubbo.registry.check=false, dubbo.registry.id=my-registry, dubbo.registry.protocol=zookeeper, dubbo.scan=}
[2019-08-28 14:51:37.094] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : The following profiles are active: common,data,eureka,dubbo_provider,dubbo_consumer
[2019-08-28 14:51:37.104] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Refreshing org.springframework.web.context.support.GenericWebApplicationContext@34f392be: startup date [Wed Aug 28 14:51:37 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1a6f5124
[2019-08-28 14:51:38.841] [WARN ] - [main][ org.mybatis.logging.Logger.warn(Logger.java:44)] : No MyBatis mapper was found in '[com.baomidou.cloud.service.*.mapper*]' package. Please check your configuration.
[2019-08-28 14:51:39.859] [INFO ] - [main][ org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:172)] : Multiple Spring Data modules found, entering strict repository configuration mode!
[2019-08-28 14:51:40.273] [WARN ] - [main][ com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans(ServiceAnnotationBeanPostProcessor.java:155)] :  [DUBBO] No Spring Bean annotating Dubbo's @Service was found under package[com.bittrade.c2c], dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:51:40.774] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : BeanFactory id=61352edb-e99a-3c04-9bd9-f50ca066a043
[2019-08-28 14:51:41.005] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-28 14:51:41.365] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:51:41.378] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionProperties' of type [com.core.framework.props.TransactionProperties$$EnhancerBySpringCGLIB$$5b16f0ba] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:51:41.396] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$637a2386] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:51:41.402] [INFO ] - [main][ com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource(DruidDataSourceAutoConfigure.java:56)] : Init DruidDataSource
[2019-08-28 14:51:41.536] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:51:41.721] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003)] : {dataSource-1} inited
[2019-08-28 14:51:41.722] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:51:41.766] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:51:41.779] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$$EnhancerBySpringCGLIB$$de42291e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:51:41.810] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:51:41.820] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:51:41.830] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration$$EnhancerBySpringCGLIB$$f6cec683] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:51:41.875] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:51:41.878] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionConfig' of type [com.core.framework.config.TransactionConfig$$EnhancerBySpringCGLIB$$4fd2ab5f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:51:41.925] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'defaultPointcutAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:51:41.950] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$49ce2e14] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:51:42.324] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' of type [com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration$$EnhancerBySpringCGLIB$$58cfd386] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:51:42.341] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:51:42.351] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:51:42.354] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:51:42.358] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:51:42.361] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:51:42.433] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$65e83111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 14:51:47.794] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'clientInboundChannelExecutor'
[2019-08-28 14:51:47.829] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'clientOutboundChannelExecutor'
[2019-08-28 14:51:48.354] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService
[2019-08-28 14:51:48.649] [INFO ] - [main][ com.core.framework.config.redis.JedisClusterConfig.getJedisCluster(JedisClusterConfig.java:35)] : 进入redis集群初始化方法：访问集群地址为：[154.222.138.5:7000, 154.222.138.5:7001, 154.222.138.5:7002, 154.222.138.5:7003, 154.222.138.5:7004, 154.222.138.5:7005]
[2019-08-28 14:51:50.300] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyTradeServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:51:51.969] [WARN ] - [main][ com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:98)] :  [DUBBO] Failed to start NettyClient HAHE/192.168.1.12 connect to the server localhost/127.0.0.1:20881 (check == false, ignore and retry later!), cause: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=6496&register.ip=192.168.1.12&side=consumer&timestamp=1566975110303) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=6496&register.ip=192.168.1.12&side=consumer&timestamp=1566975110303) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:89)
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.<init>(NettyClient.java:59)
	at com.alibaba.dubbo.remoting.transport.netty.NettyTransporter.connect(NettyTransporter.java:37)
	at com.alibaba.dubbo.remoting.Transporter$Adaptive.connect(Transporter$Adaptive.java)
	at com.alibaba.dubbo.remoting.Transporters.connect(Transporters.java:75)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchanger.connect(HeaderExchanger.java:39)
	at com.alibaba.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:109)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.initClient(DubboProtocol.java:409)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getSharedClient(DubboProtocol.java:377)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getClients(DubboProtocol.java:354)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.refer(DubboProtocol.java:336)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:65)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:108)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:67)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:394)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:333)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:163)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:66)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceFieldElement.inject(ReferenceAnnotationBeanPostProcessor.java:367)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.postProcessPropertyValues(ReferenceAnnotationBeanPostProcessor.java:92)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:759)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:548)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:386)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:89)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:41)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:541)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:763)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:463)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:209)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-08-28 14:51:52.164] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:51:53.357] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-28 14:51:53.358] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-28 14:51:53.396] [INFO ] - [main][ com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281)] : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@3083e6ef
[2019-08-28 14:51:53.697] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/sendMessage],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.sendMessage(com.bittrade.c2c.vo.SendVo)
[2019-08-28 14:51:53.699] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/pullUnreadMessage],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.pullMessage(java.lang.Long)
[2019-08-28 14:51:53.700] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/sendOrder],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.pullOrderDetail(com.bittrade.c2c.vo.SendOrderVo)
[2019-08-28 14:51:53.714] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/publish_advert],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.publishAdvert(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.TAdvertInfoDTO)
[2019-08-28 14:51:53.715] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts/details/{advert_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.getAdvertDetails(java.lang.Long)
[2019-08-28 14:51:53.716] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/suspend],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.suspendAdverts(java.util.List<java.lang.Long>,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:51:53.717] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/place_advert_order/{advert_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.placeAdvertOrder(java.lang.Long,java.math.BigDecimal,java.lang.String,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:51:53.718] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/revoke/{advert_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.revokeAdverts(java.lang.Long,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:51:53.719] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts/users/{coin_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.listAdvertsUsers(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.AdvertUserVO>,java.lang.Long,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:51:53.720] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.listAdverts(com.core.common.DTO.PageDTO<com.bittrade.pojo.dto.TAdvertInfoDTO>,com.bittrade.pojo.vo.QueryAdvertVO,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:51:53.721] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 14:51:53.722] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 14:51:53.723] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 14:51:53.724] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 14:51:53.725] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 14:51:53.726] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 14:51:53.727] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 14:51:53.728] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 14:51:53.729] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 14:51:53.730] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 14:51:53.731] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 14:51:53.732] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 14:51:53.733] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 14:51:53.733] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 14:51:53.734] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 14:51:53.741] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/details/{order_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.getAdvertOrderDetails(java.lang.Long)
[2019-08-28 14:51:53.742] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/click_already_paid/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.clickAlreadyPaid(java.lang.Long)
[2019-08-28 14:51:53.743] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/cancel/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.cancelAdvertOrder(java.lang.Long)
[2019-08-28 14:51:53.744] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/click_already_receipt/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.clickAlreadyReceipt(java.lang.Long)
[2019-08-28 14:51:53.745] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/already_complete],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.alreadyCompleteAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:51:53.746] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/no_complete],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.noCompleteAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:51:53.746] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/already_cancel],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.alreadyCancelAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 14:51:53.747] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 14:51:53.748] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 14:51:53.749] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 14:51:53.750] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 14:51:53.750] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 14:51:53.751] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 14:51:53.752] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 14:51:53.753] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 14:51:53.754] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 14:51:53.755] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 14:51:53.755] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 14:51:53.756] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 14:51:53.757] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 14:51:53.758] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 14:51:53.759] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 14:51:53.765] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/availableBalanceFeign],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.lang.String com.common.bittrade.controller.TLegalCurrencyAccountController.availableBalanceFeign(java.lang.Long,java.lang.String)
[2019-08-28 14:51:53.767] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/conversionTotal],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.ConversionVo> com.common.bittrade.controller.TLegalCurrencyAccountController.totalConversion(com.core.web.constant.entity.LoginUser)
[2019-08-28 14:51:53.768] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getAssetsFeign],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.math.BigDecimal com.common.bittrade.controller.TLegalCurrencyAccountController.getAssetsFeign(java.lang.Long)
[2019-08-28 14:51:53.769] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/detail],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetsVO>> com.common.bittrade.controller.TLegalCurrencyAccountController.detail(com.core.web.constant.entity.LoginUser)
[2019-08-28 14:51:53.770] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 14:51:53.771] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 14:51:53.772] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 14:51:53.774] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 14:51:53.775] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 14:51:53.776] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 14:51:53.778] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 14:51:53.779] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 14:51:53.779] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 14:51:53.780] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 14:51:53.781] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 14:51:53.782] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 14:51:53.783] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 14:51:53.784] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 14:51:53.785] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 14:51:53.790] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/legalCurrency_coins],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.common.bittrade.controller.TLegalCurrencyCoinController.listLegalCurrencyCoins()
[2019-08-28 14:51:53.791] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 14:51:53.793] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 14:51:53.793] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 14:51:53.794] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 14:51:53.795] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 14:51:53.796] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 14:51:53.797] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 14:51:53.798] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 14:51:53.798] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 14:51:53.799] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 14:51:53.800] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 14:51:53.801] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 14:51:53.801] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 14:51:53.802] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 14:51:53.803] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 14:51:53.810] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/queryAccountRecord],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.RecordVO>> com.common.bittrade.controller.TLegalCurrencyRecordController.queryAccountRecord(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.AccountTypeDto)
[2019-08-28 14:51:53.812] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/queryType],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetRecordTypeVO>> com.common.bittrade.controller.TLegalCurrencyRecordController.queryTypeForFund()
[2019-08-28 14:51:53.813] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 14:51:53.814] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 14:51:53.815] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 14:51:53.817] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 14:51:53.818] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 14:51:53.819] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 14:51:53.820] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 14:51:53.821] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 14:51:53.822] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 14:51:53.823] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 14:51:53.824] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 14:51:53.825] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 14:51:53.826] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 14:51:53.827] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 14:51:53.828] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 14:51:53.833] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/rechargecoinlist],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO com.common.bittrade.controller.WCoinController.rechargecoinlist()
[2019-08-28 14:51:53.834] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/Withdrawcoinlist],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO com.common.bittrade.controller.WCoinController.withdrawcoinlist()
[2019-08-28 14:51:53.835] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/getList],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.model.WCoin>> com.common.bittrade.controller.WCoinController.getList()
[2019-08-28 14:51:53.837] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccount/conversionTotal],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.ConversionVo> com.common.bittrade.controller.WWalletAccountController.totalConversion(com.core.web.constant.entity.LoginUser)
[2019-08-28 14:51:53.838] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccount/detail],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetsVO>> com.common.bittrade.controller.WWalletAccountController.detail(com.core.web.constant.entity.LoginUser)
[2019-08-28 14:51:53.840] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryFundAccountRecord],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.RecordVO>> com.common.bittrade.controller.WWalletAccountRecordController.queryFundAccountRecord(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.AccountTypeDto)
[2019-08-28 14:51:53.840] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryTypeForFund],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetRecordTypeVO>> com.common.bittrade.controller.WWalletAccountRecordController.queryTypeForFund()
[2019-08-28 14:51:53.841] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryCurrencies],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.model.WCoin>> com.common.bittrade.controller.WWalletAccountRecordController.queryCurrencies()
[2019-08-28 14:51:53.846] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
[2019-08-28 14:51:53.847] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
[2019-08-28 14:51:53.848] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
[2019-08-28 14:51:53.856] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2019-08-28 14:51:53.857] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2019-08-28 14:51:53.910] [WARN ] - [DubboClientReconnectTimer-thread-1][ com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:171)] :  [DUBBO] client reconnect to localhost:20881 find error . url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=6496&register.ip=192.168.1.12&side=consumer&timestamp=1566975110303, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=6496&register.ip=192.168.1.12&side=consumer&timestamp=1566975110303) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:156)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	... 3 common frames omitted
[2019-08-28 14:51:55.532] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Exposing 2 endpoint(s) beneath base path '/actuator'
[2019-08-28 14:51:55.573] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2019-08-28 14:51:55.575] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2019-08-28 14:51:55.576] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2019-08-28 14:51:56.031] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'messageBrokerTaskScheduler'
[2019-08-28 14:51:56.210] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped URL path [/c2c/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
[2019-08-28 14:51:56.248] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'brokerChannelExecutor'
[2019-08-28 14:51:56.692] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[2019-08-28 14:51:57.302] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@34f392be: startup date [Wed Aug 28 14:51:37 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1a6f5124
[2019-08-28 14:51:57.430] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Detected @ExceptionHandler methods in globalExceptionHandler
[2019-08-28 14:51:57.904] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-28 14:51:57.905] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-28 14:52:00.014] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting beans in phase 0
[2019-08-28 14:52:00.015] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting beans in phase 2147483647
[2019-08-28 14:52:00.015] [INFO ] - [main][ springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:151)] : Context refreshed
[2019-08-28 14:52:00.066] [INFO ] - [main][ springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:154)] : Found 1 custom documentation plugin(s)
[2019-08-28 14:52:00.143] [INFO ] - [main][ springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)] : Scanning for api listing references
[2019-08-28 14:52:00.776] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting...
[2019-08-28 14:52:00.777] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
[2019-08-28 14:52:00.778] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Started.
[2019-08-28 14:52:00.802] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Started AdvertInfoTester in 25.973 seconds (JVM running for 28.607)
[2019-08-28 14:52:03.857] [INFO ] - [Thread-2][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$2.run(AwaitingNonWebApplicationListener.java:83)] :  [Dubbo] Current Spring Boot Application is about to shutdown...
[2019-08-28 14:52:03.863] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:64)] :  [DUBBO] Close all registries [], dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:52:03.864] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(DubboProtocol.java:438)] :  [DUBBO] Close dubbo connect: 192.168.1.12:0-->localhost/127.0.0.1:20881, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:52:03.865] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:63)] :  [DUBBO] Destroy reference: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyService?application=service-consumer&default.check=false&default.timeout=5000&dubbo=2.6.2&interface=com.bittrade.currency.api.service.ITCurrencyService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getCurrencies,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,findAllLegalCurrency,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,findUsableCurrency,updateById,pageMaps,listByMap,getByPK&pid=6496&register.ip=192.168.1.12&side=consumer&timestamp=1566975112165, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:52:03.873] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:63)] :  [DUBBO] Destroy reference: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&default.check=false&default.timeout=5000&dubbo=2.6.2&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=6496&register.ip=192.168.1.12&side=consumer&timestamp=1566975110303, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 14:52:03.991] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:349)] : Initializing Eureka in region us-east-1
[2019-08-28 14:52:04.321] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70)] : Using JSON encoding codec LegacyJacksonJson
[2019-08-28 14:52:04.321] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71)] : Using JSON decoding codec LegacyJacksonJson
[2019-08-28 14:52:04.633] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80)] : Using XML encoding codec XStreamXml
[2019-08-28 14:52:04.633] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81)] : Using XML decoding codec XStreamXml
[2019-08-28 14:52:05.188] [INFO ] - [Thread-8][ com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] : Resolving eureka endpoints via configuration
[2019-08-28 14:52:05.231] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958)] : Disable delta property : false
[2019-08-28 14:52:05.231] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:959)] : Single vip registry refresh property : null
[2019-08-28 14:52:05.232] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960)] : Force full registry fetch : false
[2019-08-28 14:52:05.232] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:961)] : Application is null : false
[2019-08-28 14:52:05.232] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:962)] : Registered Applications size is zero : true
[2019-08-28 14:52:05.232] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:964)] : Application version is -1: true
[2019-08-28 14:52:05.233] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1047)] : Getting all instance registry info from the eureka server
[2019-08-28 14:52:07.412] [ERROR] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83)] : Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$6d512a30.CGLIB$eurekaClient$0(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$6d512a30$$FastClassBySpringCGLIB$$7b477c58.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:365)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$6d512a30.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:583)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1246)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:535)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:193)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 65 common frames omitted
[2019-08-28 14:52:07.414] [WARN ] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:130)] : Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2019-08-28 14:52:07.416] [ERROR] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:972)] : DiscoveryClient_BITTRADE-C2C/192.168.1.12:-1:bittrade-c2c:@project.version@ - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$6d512a30.CGLIB$eurekaClient$0(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$6d512a30$$FastClassBySpringCGLIB$$7b477c58.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:365)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$6d512a30.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:583)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1246)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:535)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:193)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
[2019-08-28 14:52:07.417] [WARN ] - [Thread-8][ com.netflix.discovery.DiscoveryClient$1.get(DiscoveryClient.java:290)] : Using default backup registry implementation which does not do anything.
[2019-08-28 14:52:07.421] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1264)] : Starting heartbeat executor: renew interval is: 30
[2019-08-28 14:52:07.429] [INFO ] - [Thread-8][ com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60)] : InstanceInfoReplicator onDemand update allowed rate per min is 4
[2019-08-28 14:52:07.439] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:449)] : Discovery Client initialized at timestamp 1566975127436 with initial instances count: 0
[2019-08-28 14:52:07.468] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:888)] : Shutting down DiscoveryClient ...
[2019-08-28 14:52:10.471] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:922)] : Unregistering ...
[2019-08-28 14:52:12.501] [ERROR] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83)] : Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:923)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:901)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:246)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:494)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 46 common frames omitted
[2019-08-28 14:52:12.502] [WARN ] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:130)] : Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2019-08-28 14:52:12.503] [ERROR] - [Thread-8][ com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:926)] : DiscoveryClient_BITTRADE-C2C/192.168.1.12:-1:bittrade-c2c:@project.version@ - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:923)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:901)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:246)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:494)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
[2019-08-28 14:52:12.529] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:911)] : Completed shut down of DiscoveryClient
[2019-08-28 14:52:12.548] [INFO ] - [Thread-8][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:1948)] : {dataSource-1} closing ...
[2019-08-28 14:52:12.554] [INFO ] - [Thread-8][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:2020)] : {dataSource-1} closed
[2019-08-28 15:05:41.568] [INFO ] - [main][?#?:?] : using logger: com.alibaba.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[2019-08-28 15:05:41.576] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-28 15:05:41.582] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {}
[2019-08-28 15:05:41.859] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6c61a903: startup date [Wed Aug 28 15:05:41 CST 2019]; root of context hierarchy
[2019-08-28 15:05:42.266] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-28 15:05:42.337] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8b5327ea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:05:42.515] [INFO ] - [pool-1-thread-1][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$1.run(AwaitingNonWebApplicationListener.java:61)] :  [Dubbo] Current Spring Boot Application is await...
[2019-08-28 15:05:42.937] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-28 15:05:42.939] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {dubbo.application.id=service-consumer, dubbo.application.name=service-consumer, dubbo.consumer.check=false, dubbo.consumer.timeout=5000, dubbo.monitor=, dubbo.protocol.id=dubbo, dubbo.protocol.name=dubbo, dubbo.protocol.port=20884, dubbo.provider.timeout=5000, dubbo.registry.address=N/A, dubbo.registry.check=false, dubbo.registry.id=my-registry, dubbo.registry.protocol=zookeeper, dubbo.scan=}
[2019-08-28 15:05:42.987] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : The following profiles are active: common,data,eureka,dubbo_provider,dubbo_consumer
[2019-08-28 15:05:42.996] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Refreshing org.springframework.web.context.support.GenericWebApplicationContext@59fc684e: startup date [Wed Aug 28 15:05:42 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6c61a903
[2019-08-28 15:05:44.280] [WARN ] - [main][ org.mybatis.logging.Logger.warn(Logger.java:44)] : No MyBatis mapper was found in '[com.baomidou.cloud.service.*.mapper*]' package. Please check your configuration.
[2019-08-28 15:05:44.987] [INFO ] - [main][ org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:172)] : Multiple Spring Data modules found, entering strict repository configuration mode!
[2019-08-28 15:05:45.348] [WARN ] - [main][ com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans(ServiceAnnotationBeanPostProcessor.java:155)] :  [DUBBO] No Spring Bean annotating Dubbo's @Service was found under package[com.bittrade.c2c], dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 15:05:45.833] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : BeanFactory id=61352edb-e99a-3c04-9bd9-f50ca066a043
[2019-08-28 15:05:46.022] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-28 15:05:46.288] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:05:46.304] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionProperties' of type [com.core.framework.props.TransactionProperties$$EnhancerBySpringCGLIB$$8081e793] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:05:46.319] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$88e51a5f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:05:46.324] [INFO ] - [main][ com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource(DruidDataSourceAutoConfigure.java:56)] : Init DruidDataSource
[2019-08-28 15:05:46.433] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:05:46.564] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003)] : {dataSource-1} inited
[2019-08-28 15:05:46.565] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:05:46.597] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:05:46.609] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$$EnhancerBySpringCGLIB$$3ad1ff7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:05:46.631] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:05:46.637] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:05:46.646] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration$$EnhancerBySpringCGLIB$$1c39bd5c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:05:46.682] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:05:46.683] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionConfig' of type [com.core.framework.config.TransactionConfig$$EnhancerBySpringCGLIB$$753da238] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:05:46.708] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'defaultPointcutAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:05:46.726] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6f3924ed] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:05:47.027] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' of type [com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration$$EnhancerBySpringCGLIB$$7e3aca5f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:05:47.043] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:05:47.053] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:05:47.057] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:05:47.061] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:05:47.064] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:05:47.127] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8b5327ea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:05:51.611] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'clientInboundChannelExecutor'
[2019-08-28 15:05:51.639] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'clientOutboundChannelExecutor'
[2019-08-28 15:05:52.030] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService
[2019-08-28 15:05:52.267] [INFO ] - [main][ com.core.framework.config.redis.JedisClusterConfig.getJedisCluster(JedisClusterConfig.java:35)] : 进入redis集群初始化方法：访问集群地址为：[154.222.138.5:7000, 154.222.138.5:7001, 154.222.138.5:7002, 154.222.138.5:7003, 154.222.138.5:7004, 154.222.138.5:7005]
[2019-08-28 15:05:53.736] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyTradeServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 15:05:55.040] [WARN ] - [main][ com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:98)] :  [DUBBO] Failed to start NettyClient HAHE/192.168.1.12 connect to the server localhost/127.0.0.1:20881 (check == false, ignore and retry later!), cause: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=6740&register.ip=192.168.1.12&side=consumer&timestamp=1566975953737) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=6740&register.ip=192.168.1.12&side=consumer&timestamp=1566975953737) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:89)
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.<init>(NettyClient.java:59)
	at com.alibaba.dubbo.remoting.transport.netty.NettyTransporter.connect(NettyTransporter.java:37)
	at com.alibaba.dubbo.remoting.Transporter$Adaptive.connect(Transporter$Adaptive.java)
	at com.alibaba.dubbo.remoting.Transporters.connect(Transporters.java:75)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchanger.connect(HeaderExchanger.java:39)
	at com.alibaba.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:109)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.initClient(DubboProtocol.java:409)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getSharedClient(DubboProtocol.java:377)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getClients(DubboProtocol.java:354)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.refer(DubboProtocol.java:336)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:65)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:108)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:67)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:394)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:333)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:163)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:66)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceFieldElement.inject(ReferenceAnnotationBeanPostProcessor.java:367)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.postProcessPropertyValues(ReferenceAnnotationBeanPostProcessor.java:92)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:759)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:548)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:386)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:89)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:41)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:541)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:763)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:463)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:209)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-08-28 15:05:55.201] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 15:05:56.408] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-28 15:05:56.409] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-28 15:05:56.436] [INFO ] - [main][ com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281)] : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@65015a49
[2019-08-28 15:05:56.674] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/sendMessage],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.sendMessage(com.bittrade.c2c.vo.SendVo)
[2019-08-28 15:05:56.676] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/pullUnreadMessage],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.pullMessage(java.lang.Long)
[2019-08-28 15:05:56.677] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/sendOrder],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.pullOrderDetail(com.bittrade.c2c.vo.SendOrderVo)
[2019-08-28 15:05:56.688] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/publish_advert],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.publishAdvert(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.TAdvertInfoDTO)
[2019-08-28 15:05:56.689] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/suspend],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.suspendAdverts(java.util.List<java.lang.Long>,com.core.web.constant.entity.LoginUser)
[2019-08-28 15:05:56.690] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts/details/{advert_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.getAdvertDetails(java.lang.Long)
[2019-08-28 15:05:56.691] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/revoke/{advert_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.revokeAdverts(java.lang.Long,com.core.web.constant.entity.LoginUser)
[2019-08-28 15:05:56.692] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/place_advert_order/{advert_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.placeAdvertOrder(java.lang.Long,java.math.BigDecimal,java.lang.String,com.core.web.constant.entity.LoginUser)
[2019-08-28 15:05:56.693] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.listAdverts(com.core.common.DTO.PageDTO<com.bittrade.pojo.dto.TAdvertInfoDTO>,com.bittrade.pojo.vo.QueryAdvertVO,com.core.web.constant.entity.LoginUser)
[2019-08-28 15:05:56.694] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts/users/{coin_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.listAdvertsUsers(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.AdvertUserVO>,java.lang.Long,com.core.web.constant.entity.LoginUser)
[2019-08-28 15:05:56.695] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 15:05:56.696] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 15:05:56.696] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 15:05:56.697] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 15:05:56.698] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 15:05:56.699] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 15:05:56.700] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 15:05:56.700] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 15:05:56.701] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 15:05:56.702] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 15:05:56.703] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 15:05:56.703] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 15:05:56.704] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 15:05:56.705] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 15:05:56.705] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 15:05:56.713] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/details/{order_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.getAdvertOrderDetails(java.lang.Long)
[2019-08-28 15:05:56.714] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/cancel/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.cancelAdvertOrder(java.lang.Long)
[2019-08-28 15:05:56.715] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/no_complete],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.noCompleteAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 15:05:56.716] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/click_already_receipt/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.clickAlreadyReceipt(java.lang.Long)
[2019-08-28 15:05:56.717] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/already_complete],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.alreadyCompleteAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 15:05:56.718] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/already_cancel],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.alreadyCancelAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 15:05:56.719] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/click_already_paid/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.clickAlreadyPaid(java.lang.Long)
[2019-08-28 15:05:56.720] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 15:05:56.721] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 15:05:56.722] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 15:05:56.723] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 15:05:56.724] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 15:05:56.725] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 15:05:56.725] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 15:05:56.726] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 15:05:56.727] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 15:05:56.727] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 15:05:56.728] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 15:05:56.729] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 15:05:56.729] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 15:05:56.730] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 15:05:56.731] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 15:05:56.737] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/detail],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetsVO>> com.common.bittrade.controller.TLegalCurrencyAccountController.detail(com.core.web.constant.entity.LoginUser)
[2019-08-28 15:05:56.737] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/availableBalanceFeign],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.lang.String com.common.bittrade.controller.TLegalCurrencyAccountController.availableBalanceFeign(java.lang.Long,java.lang.String)
[2019-08-28 15:05:56.738] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/conversionTotal],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.ConversionVo> com.common.bittrade.controller.TLegalCurrencyAccountController.totalConversion(com.core.web.constant.entity.LoginUser)
[2019-08-28 15:05:56.739] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getAssetsFeign],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.math.BigDecimal com.common.bittrade.controller.TLegalCurrencyAccountController.getAssetsFeign(java.lang.Long)
[2019-08-28 15:05:56.740] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 15:05:56.740] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 15:05:56.741] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 15:05:56.742] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 15:05:56.742] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 15:05:56.743] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 15:05:56.744] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 15:05:56.745] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 15:05:56.746] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 15:05:56.747] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 15:05:56.748] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 15:05:56.749] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 15:05:56.750] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 15:05:56.751] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 15:05:56.752] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 15:05:56.757] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/legalCurrency_coins],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.common.bittrade.controller.TLegalCurrencyCoinController.listLegalCurrencyCoins()
[2019-08-28 15:05:56.758] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 15:05:56.758] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 15:05:56.759] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 15:05:56.760] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 15:05:56.760] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 15:05:56.761] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 15:05:56.762] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 15:05:56.762] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 15:05:56.763] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 15:05:56.764] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 15:05:56.764] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 15:05:56.765] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 15:05:56.766] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 15:05:56.767] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 15:05:56.768] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 15:05:56.773] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/queryAccountRecord],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.RecordVO>> com.common.bittrade.controller.TLegalCurrencyRecordController.queryAccountRecord(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.AccountTypeDto)
[2019-08-28 15:05:56.774] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/queryType],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetRecordTypeVO>> com.common.bittrade.controller.TLegalCurrencyRecordController.queryTypeForFund()
[2019-08-28 15:05:56.774] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 15:05:56.775] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 15:05:56.776] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 15:05:56.776] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 15:05:56.777] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 15:05:56.778] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 15:05:56.778] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 15:05:56.779] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 15:05:56.780] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 15:05:56.781] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 15:05:56.782] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 15:05:56.782] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 15:05:56.783] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 15:05:56.784] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 15:05:56.786] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 15:05:56.790] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/Withdrawcoinlist],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO com.common.bittrade.controller.WCoinController.withdrawcoinlist()
[2019-08-28 15:05:56.790] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/rechargecoinlist],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO com.common.bittrade.controller.WCoinController.rechargecoinlist()
[2019-08-28 15:05:56.791] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/getList],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.model.WCoin>> com.common.bittrade.controller.WCoinController.getList()
[2019-08-28 15:05:56.792] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccount/detail],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetsVO>> com.common.bittrade.controller.WWalletAccountController.detail(com.core.web.constant.entity.LoginUser)
[2019-08-28 15:05:56.793] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccount/conversionTotal],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.ConversionVo> com.common.bittrade.controller.WWalletAccountController.totalConversion(com.core.web.constant.entity.LoginUser)
[2019-08-28 15:05:56.795] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryFundAccountRecord],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.RecordVO>> com.common.bittrade.controller.WWalletAccountRecordController.queryFundAccountRecord(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.AccountTypeDto)
[2019-08-28 15:05:56.795] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryCurrencies],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.model.WCoin>> com.common.bittrade.controller.WWalletAccountRecordController.queryCurrencies()
[2019-08-28 15:05:56.796] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryTypeForFund],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetRecordTypeVO>> com.common.bittrade.controller.WWalletAccountRecordController.queryTypeForFund()
[2019-08-28 15:05:56.801] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
[2019-08-28 15:05:56.802] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
[2019-08-28 15:05:56.803] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
[2019-08-28 15:05:56.809] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2019-08-28 15:05:56.810] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2019-08-28 15:05:56.993] [WARN ] - [DubboClientReconnectTimer-thread-1][ com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:171)] :  [DUBBO] client reconnect to localhost:20881 find error . url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=6740&register.ip=192.168.1.12&side=consumer&timestamp=1566975953737, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=6740&register.ip=192.168.1.12&side=consumer&timestamp=1566975953737) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:156)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	... 3 common frames omitted
[2019-08-28 15:05:58.096] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Exposing 2 endpoint(s) beneath base path '/actuator'
[2019-08-28 15:05:58.126] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2019-08-28 15:05:58.128] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2019-08-28 15:05:58.129] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2019-08-28 15:05:58.475] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'messageBrokerTaskScheduler'
[2019-08-28 15:05:58.584] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped URL path [/c2c/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
[2019-08-28 15:05:58.609] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'brokerChannelExecutor'
[2019-08-28 15:05:58.949] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[2019-08-28 15:05:59.417] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@59fc684e: startup date [Wed Aug 28 15:05:42 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6c61a903
[2019-08-28 15:05:59.500] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Detected @ExceptionHandler methods in globalExceptionHandler
[2019-08-28 15:05:59.862] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-28 15:05:59.863] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-28 15:06:01.273] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting beans in phase 0
[2019-08-28 15:06:01.274] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting beans in phase 2147483647
[2019-08-28 15:06:01.274] [INFO ] - [main][ springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:151)] : Context refreshed
[2019-08-28 15:06:01.310] [INFO ] - [main][ springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:154)] : Found 1 custom documentation plugin(s)
[2019-08-28 15:06:01.367] [INFO ] - [main][ springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)] : Scanning for api listing references
[2019-08-28 15:06:01.849] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting...
[2019-08-28 15:06:01.850] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
[2019-08-28 15:06:01.852] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Started.
[2019-08-28 15:06:01.873] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Started AdvertInfoTester in 20.601 seconds (JVM running for 22.169)
[2019-08-28 15:06:02.537] [INFO ] - [Thread-8][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Closing org.springframework.web.context.support.GenericWebApplicationContext@59fc684e: startup date [Wed Aug 28 15:05:42 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6c61a903
[2019-08-28 15:06:02.537] [INFO ] - [Thread-2][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$2.run(AwaitingNonWebApplicationListener.java:83)] :  [Dubbo] Current Spring Boot Application is about to shutdown...
[2019-08-28 15:06:02.539] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:64)] :  [DUBBO] Close all registries [], dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 15:06:02.540] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(DubboProtocol.java:438)] :  [DUBBO] Close dubbo connect: 192.168.1.12:0-->localhost/127.0.0.1:20881, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 15:06:02.541] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:63)] :  [DUBBO] Destroy reference: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&default.check=false&default.timeout=5000&dubbo=2.6.2&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=6740&register.ip=192.168.1.12&side=consumer&timestamp=1566975953737, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 15:06:02.634] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:349)] : Initializing Eureka in region us-east-1
[2019-08-28 15:06:02.936] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70)] : Using JSON encoding codec LegacyJacksonJson
[2019-08-28 15:06:02.937] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71)] : Using JSON decoding codec LegacyJacksonJson
[2019-08-28 15:06:03.014] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:63)] :  [DUBBO] Destroy reference: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyService?application=service-consumer&default.check=false&default.timeout=5000&dubbo=2.6.2&interface=com.bittrade.currency.api.service.ITCurrencyService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getCurrencies,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,findAllLegalCurrency,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,findUsableCurrency,updateById,pageMaps,listByMap,getByPK&pid=6740&register.ip=192.168.1.12&side=consumer&timestamp=1566975955202, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 15:06:03.210] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80)] : Using XML encoding codec XStreamXml
[2019-08-28 15:06:03.211] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81)] : Using XML decoding codec XStreamXml
[2019-08-28 15:06:03.527] [INFO ] - [Thread-8][ com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] : Resolving eureka endpoints via configuration
[2019-08-28 15:06:03.561] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958)] : Disable delta property : false
[2019-08-28 15:06:03.561] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:959)] : Single vip registry refresh property : null
[2019-08-28 15:06:03.562] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960)] : Force full registry fetch : false
[2019-08-28 15:06:03.562] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:961)] : Application is null : false
[2019-08-28 15:06:03.562] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:962)] : Registered Applications size is zero : true
[2019-08-28 15:06:03.562] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:964)] : Application version is -1: true
[2019-08-28 15:06:03.562] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1047)] : Getting all instance registry info from the eureka server
[2019-08-28 15:06:05.678] [ERROR] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83)] : Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$92bc2109.CGLIB$eurekaClient$0(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$92bc2109$$FastClassBySpringCGLIB$$ad7d66e4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:365)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$92bc2109.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:583)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1246)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:535)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:193)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 65 common frames omitted
[2019-08-28 15:06:05.680] [WARN ] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:130)] : Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2019-08-28 15:06:05.681] [ERROR] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:972)] : DiscoveryClient_BITTRADE-C2C/192.168.1.12:-1:bittrade-c2c:@project.version@ - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$92bc2109.CGLIB$eurekaClient$0(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$92bc2109$$FastClassBySpringCGLIB$$ad7d66e4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:365)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$92bc2109.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:583)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1246)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:535)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:193)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
[2019-08-28 15:06:05.683] [WARN ] - [Thread-8][ com.netflix.discovery.DiscoveryClient$1.get(DiscoveryClient.java:290)] : Using default backup registry implementation which does not do anything.
[2019-08-28 15:06:05.686] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1264)] : Starting heartbeat executor: renew interval is: 30
[2019-08-28 15:06:05.693] [INFO ] - [Thread-8][ com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60)] : InstanceInfoReplicator onDemand update allowed rate per min is 4
[2019-08-28 15:06:05.703] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:449)] : Discovery Client initialized at timestamp 1566975965700 with initial instances count: 0
[2019-08-28 15:06:05.723] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:888)] : Shutting down DiscoveryClient ...
[2019-08-28 15:06:08.726] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:922)] : Unregistering ...
[2019-08-28 15:06:10.753] [ERROR] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83)] : Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:923)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:901)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:246)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:494)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 46 common frames omitted
[2019-08-28 15:06:10.755] [WARN ] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:130)] : Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2019-08-28 15:06:10.756] [ERROR] - [Thread-8][ com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:926)] : DiscoveryClient_BITTRADE-C2C/192.168.1.12:-1:bittrade-c2c:@project.version@ - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:923)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:901)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:246)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:494)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
[2019-08-28 15:06:10.782] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:911)] : Completed shut down of DiscoveryClient
[2019-08-28 15:06:10.794] [INFO ] - [Thread-8][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:1948)] : {dataSource-1} closing ...
[2019-08-28 15:06:10.800] [INFO ] - [Thread-8][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:2020)] : {dataSource-1} closed
[2019-08-28 15:08:18.064] [INFO ] - [main][?#?:?] : using logger: com.alibaba.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[2019-08-28 15:08:18.074] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-28 15:08:18.081] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {}
[2019-08-28 15:08:18.536] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6058e535: startup date [Wed Aug 28 15:08:18 CST 2019]; root of context hierarchy
[2019-08-28 15:08:19.065] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-28 15:08:19.156] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$eca8231] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:08:19.365] [INFO ] - [pool-1-thread-1][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$1.run(AwaitingNonWebApplicationListener.java:61)] :  [Dubbo] Current Spring Boot Application is await...
[2019-08-28 15:08:19.945] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-28 15:08:19.948] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {dubbo.application.id=service-consumer, dubbo.application.name=service-consumer, dubbo.consumer.check=false, dubbo.consumer.timeout=5000, dubbo.monitor=, dubbo.protocol.id=dubbo, dubbo.protocol.name=dubbo, dubbo.protocol.port=20884, dubbo.provider.timeout=5000, dubbo.registry.address=N/A, dubbo.registry.check=false, dubbo.registry.id=my-registry, dubbo.registry.protocol=zookeeper, dubbo.scan=}
[2019-08-28 15:08:20.026] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : The following profiles are active: common,data,eureka,dubbo_provider,dubbo_consumer
[2019-08-28 15:08:20.043] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Refreshing org.springframework.web.context.support.GenericWebApplicationContext@782bf610: startup date [Wed Aug 28 15:08:20 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6058e535
[2019-08-28 15:08:21.910] [WARN ] - [main][ org.mybatis.logging.Logger.warn(Logger.java:44)] : No MyBatis mapper was found in '[com.baomidou.cloud.service.*.mapper*]' package. Please check your configuration.
[2019-08-28 15:08:22.972] [INFO ] - [main][ org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:172)] : Multiple Spring Data modules found, entering strict repository configuration mode!
[2019-08-28 15:08:23.481] [WARN ] - [main][ com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans(ServiceAnnotationBeanPostProcessor.java:155)] :  [DUBBO] No Spring Bean annotating Dubbo's @Service was found under package[com.bittrade.c2c], dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 15:08:24.033] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : BeanFactory id=61352edb-e99a-3c04-9bd9-f50ca066a043
[2019-08-28 15:08:24.275] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-28 15:08:24.611] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:08:24.629] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionProperties' of type [com.core.framework.props.TransactionProperties$$EnhancerBySpringCGLIB$$3f941da] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:08:24.650] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$c5c74a6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:08:24.658] [INFO ] - [main][ com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource(DruidDataSourceAutoConfigure.java:56)] : Init DruidDataSource
[2019-08-28 15:08:24.809] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:08:25.011] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003)] : {dataSource-1} inited
[2019-08-28 15:08:25.012] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:08:25.053] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:08:25.074] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$$EnhancerBySpringCGLIB$$87247a3e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:08:25.099] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:08:25.107] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:08:25.116] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration$$EnhancerBySpringCGLIB$$9fb117a3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:08:25.161] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:08:25.163] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionConfig' of type [com.core.framework.config.TransactionConfig$$EnhancerBySpringCGLIB$$f8b4fc7f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:08:25.195] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'defaultPointcutAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:08:25.218] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f2b07f34] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:08:25.593] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' of type [com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration$$EnhancerBySpringCGLIB$$1b224a6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:08:25.612] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:08:25.623] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:08:25.629] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:08:25.635] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:08:25.642] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:08:25.717] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$eca8231] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:08:30.944] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'clientInboundChannelExecutor'
[2019-08-28 15:08:30.981] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'clientOutboundChannelExecutor'
[2019-08-28 15:08:31.583] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService
[2019-08-28 15:08:31.896] [INFO ] - [main][ com.core.framework.config.redis.JedisClusterConfig.getJedisCluster(JedisClusterConfig.java:35)] : 进入redis集群初始化方法：访问集群地址为：[154.222.138.5:7000, 154.222.138.5:7001, 154.222.138.5:7002, 154.222.138.5:7003, 154.222.138.5:7004, 154.222.138.5:7005]
[2019-08-28 15:08:33.674] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyTradeServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 15:08:35.348] [WARN ] - [main][ com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:98)] :  [DUBBO] Failed to start NettyClient HAHE/192.168.1.12 connect to the server localhost/127.0.0.1:20881 (check == false, ignore and retry later!), cause: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=2892&register.ip=192.168.1.12&side=consumer&timestamp=1566976113675) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=2892&register.ip=192.168.1.12&side=consumer&timestamp=1566976113675) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:89)
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.<init>(NettyClient.java:59)
	at com.alibaba.dubbo.remoting.transport.netty.NettyTransporter.connect(NettyTransporter.java:37)
	at com.alibaba.dubbo.remoting.Transporter$Adaptive.connect(Transporter$Adaptive.java)
	at com.alibaba.dubbo.remoting.Transporters.connect(Transporters.java:75)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchanger.connect(HeaderExchanger.java:39)
	at com.alibaba.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:109)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.initClient(DubboProtocol.java:409)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getSharedClient(DubboProtocol.java:377)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getClients(DubboProtocol.java:354)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.refer(DubboProtocol.java:336)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:67)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:108)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:65)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:394)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:333)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:163)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:66)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceFieldElement.inject(ReferenceAnnotationBeanPostProcessor.java:367)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.postProcessPropertyValues(ReferenceAnnotationBeanPostProcessor.java:92)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:759)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:548)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:386)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:89)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:41)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:541)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:763)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:463)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:209)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-08-28 15:08:35.546] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 15:08:36.746] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-28 15:08:36.747] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-28 15:08:36.788] [INFO ] - [main][ com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281)] : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1ee52741
[2019-08-28 15:08:37.083] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/sendMessage],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.sendMessage(com.bittrade.c2c.vo.SendVo)
[2019-08-28 15:08:37.085] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/sendOrder],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.pullOrderDetail(com.bittrade.c2c.vo.SendOrderVo)
[2019-08-28 15:08:37.086] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/pullUnreadMessage],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.pullMessage(java.lang.Long)
[2019-08-28 15:08:37.099] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts/users/{coin_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.listAdvertsUsers(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.AdvertUserVO>,java.lang.Long,com.core.web.constant.entity.LoginUser)
[2019-08-28 15:08:37.100] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/place_advert_order/{advert_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.placeAdvertOrder(java.lang.Long,java.math.BigDecimal,java.lang.String,com.core.web.constant.entity.LoginUser)
[2019-08-28 15:08:37.101] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/revoke/{advert_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.revokeAdverts(java.lang.Long,com.core.web.constant.entity.LoginUser)
[2019-08-28 15:08:37.102] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts/details/{advert_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.getAdvertDetails(java.lang.Long)
[2019-08-28 15:08:37.103] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/suspend],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.suspendAdverts(java.util.List<java.lang.Long>,com.core.web.constant.entity.LoginUser)
[2019-08-28 15:08:37.104] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.listAdverts(com.core.common.DTO.PageDTO<com.bittrade.pojo.dto.TAdvertInfoDTO>,com.bittrade.pojo.vo.QueryAdvertVO,com.core.web.constant.entity.LoginUser)
[2019-08-28 15:08:37.105] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/publish_advert],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.publishAdvert(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.TAdvertInfoDTO)
[2019-08-28 15:08:37.106] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 15:08:37.107] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 15:08:37.108] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 15:08:37.109] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 15:08:37.110] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 15:08:37.111] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 15:08:37.112] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 15:08:37.114] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 15:08:37.115] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 15:08:37.116] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 15:08:37.116] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 15:08:37.117] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 15:08:37.118] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 15:08:37.119] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 15:08:37.120] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 15:08:37.128] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/details/{order_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.getAdvertOrderDetails(java.lang.Long)
[2019-08-28 15:08:37.129] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/cancel/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.cancelAdvertOrder(java.lang.Long)
[2019-08-28 15:08:37.130] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/click_already_receipt/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.clickAlreadyReceipt(java.lang.Long)
[2019-08-28 15:08:37.131] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/no_complete],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.noCompleteAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 15:08:37.132] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/already_cancel],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.alreadyCancelAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 15:08:37.133] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/already_complete],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.alreadyCompleteAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 15:08:37.134] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/click_already_paid/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.clickAlreadyPaid(java.lang.Long)
[2019-08-28 15:08:37.135] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 15:08:37.135] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 15:08:37.136] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 15:08:37.137] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 15:08:37.138] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 15:08:37.139] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 15:08:37.139] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 15:08:37.140] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 15:08:37.141] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 15:08:37.142] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 15:08:37.143] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 15:08:37.143] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 15:08:37.144] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 15:08:37.145] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 15:08:37.146] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 15:08:37.153] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/detail],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetsVO>> com.common.bittrade.controller.TLegalCurrencyAccountController.detail(com.core.web.constant.entity.LoginUser)
[2019-08-28 15:08:37.154] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/availableBalanceFeign],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.lang.String com.common.bittrade.controller.TLegalCurrencyAccountController.availableBalanceFeign(java.lang.Long,java.lang.String)
[2019-08-28 15:08:37.154] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getAssetsFeign],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.math.BigDecimal com.common.bittrade.controller.TLegalCurrencyAccountController.getAssetsFeign(java.lang.Long)
[2019-08-28 15:08:37.155] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/conversionTotal],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.ConversionVo> com.common.bittrade.controller.TLegalCurrencyAccountController.totalConversion(com.core.web.constant.entity.LoginUser)
[2019-08-28 15:08:37.156] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 15:08:37.157] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 15:08:37.158] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 15:08:37.160] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 15:08:37.161] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 15:08:37.162] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 15:08:37.163] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 15:08:37.164] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 15:08:37.165] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 15:08:37.166] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 15:08:37.167] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 15:08:37.168] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 15:08:37.169] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 15:08:37.170] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 15:08:37.171] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 15:08:37.175] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/legalCurrency_coins],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.common.bittrade.controller.TLegalCurrencyCoinController.listLegalCurrencyCoins()
[2019-08-28 15:08:37.176] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 15:08:37.177] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 15:08:37.178] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 15:08:37.179] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 15:08:37.180] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 15:08:37.181] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 15:08:37.182] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 15:08:37.183] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 15:08:37.183] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 15:08:37.184] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 15:08:37.185] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 15:08:37.186] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 15:08:37.187] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 15:08:37.188] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 15:08:37.188] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 15:08:37.194] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/queryAccountRecord],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.RecordVO>> com.common.bittrade.controller.TLegalCurrencyRecordController.queryAccountRecord(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.AccountTypeDto)
[2019-08-28 15:08:37.194] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/queryType],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetRecordTypeVO>> com.common.bittrade.controller.TLegalCurrencyRecordController.queryTypeForFund()
[2019-08-28 15:08:37.195] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 15:08:37.196] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 15:08:37.197] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 15:08:37.198] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 15:08:37.199] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 15:08:37.200] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 15:08:37.200] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 15:08:37.201] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 15:08:37.202] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 15:08:37.203] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 15:08:37.204] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 15:08:37.205] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 15:08:37.206] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 15:08:37.207] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 15:08:37.208] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 15:08:37.212] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/getList],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.model.WCoin>> com.common.bittrade.controller.WCoinController.getList()
[2019-08-28 15:08:37.213] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/rechargecoinlist],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO com.common.bittrade.controller.WCoinController.rechargecoinlist()
[2019-08-28 15:08:37.214] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/Withdrawcoinlist],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO com.common.bittrade.controller.WCoinController.withdrawcoinlist()
[2019-08-28 15:08:37.215] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccount/detail],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetsVO>> com.common.bittrade.controller.WWalletAccountController.detail(com.core.web.constant.entity.LoginUser)
[2019-08-28 15:08:37.216] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccount/conversionTotal],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.ConversionVo> com.common.bittrade.controller.WWalletAccountController.totalConversion(com.core.web.constant.entity.LoginUser)
[2019-08-28 15:08:37.218] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryFundAccountRecord],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.RecordVO>> com.common.bittrade.controller.WWalletAccountRecordController.queryFundAccountRecord(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.AccountTypeDto)
[2019-08-28 15:08:37.219] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryCurrencies],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.model.WCoin>> com.common.bittrade.controller.WWalletAccountRecordController.queryCurrencies()
[2019-08-28 15:08:37.220] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryTypeForFund],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetRecordTypeVO>> com.common.bittrade.controller.WWalletAccountRecordController.queryTypeForFund()
[2019-08-28 15:08:37.224] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
[2019-08-28 15:08:37.225] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
[2019-08-28 15:08:37.226] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
[2019-08-28 15:08:37.231] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2019-08-28 15:08:37.232] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2019-08-28 15:08:37.283] [WARN ] - [DubboClientReconnectTimer-thread-1][ com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:171)] :  [DUBBO] client reconnect to localhost:20881 find error . url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=2892&register.ip=192.168.1.12&side=consumer&timestamp=1566976113675, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=2892&register.ip=192.168.1.12&side=consumer&timestamp=1566976113675) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:156)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	... 3 common frames omitted
[2019-08-28 15:08:38.961] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Exposing 2 endpoint(s) beneath base path '/actuator'
[2019-08-28 15:08:39.003] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2019-08-28 15:08:39.005] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2019-08-28 15:08:39.006] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2019-08-28 15:08:39.437] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'messageBrokerTaskScheduler'
[2019-08-28 15:08:39.605] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped URL path [/c2c/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
[2019-08-28 15:08:39.639] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'brokerChannelExecutor'
[2019-08-28 15:08:40.052] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[2019-08-28 15:08:40.588] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@782bf610: startup date [Wed Aug 28 15:08:20 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6058e535
[2019-08-28 15:08:40.686] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Detected @ExceptionHandler methods in globalExceptionHandler
[2019-08-28 15:08:41.153] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-28 15:08:41.154] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-28 15:08:43.091] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting beans in phase 0
[2019-08-28 15:08:43.091] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting beans in phase 2147483647
[2019-08-28 15:08:43.091] [INFO ] - [main][ springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:151)] : Context refreshed
[2019-08-28 15:08:43.136] [INFO ] - [main][ springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:154)] : Found 1 custom documentation plugin(s)
[2019-08-28 15:08:43.205] [INFO ] - [main][ springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)] : Scanning for api listing references
[2019-08-28 15:08:43.822] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting...
[2019-08-28 15:08:43.822] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
[2019-08-28 15:08:43.824] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Started.
[2019-08-28 15:08:43.848] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Started AdvertInfoTester in 26.158 seconds (JVM running for 28.764)
[2019-08-28 15:09:39.633] [INFO ] - [MessageBroker-1][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
[2019-08-28 15:09:40.305] [INFO ] - [Thread-2][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$2.run(AwaitingNonWebApplicationListener.java:83)] :  [Dubbo] Current Spring Boot Application is about to shutdown...
[2019-08-28 15:09:40.311] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:64)] :  [DUBBO] Close all registries [], dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 15:09:40.312] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(DubboProtocol.java:438)] :  [DUBBO] Close dubbo connect: 192.168.1.12:0-->localhost/127.0.0.1:20881, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 15:09:40.313] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:63)] :  [DUBBO] Destroy reference: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyService?application=service-consumer&default.check=false&default.timeout=5000&dubbo=2.6.2&interface=com.bittrade.currency.api.service.ITCurrencyService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getCurrencies,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,findAllLegalCurrency,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,findUsableCurrency,updateById,pageMaps,listByMap,getByPK&pid=2892&register.ip=192.168.1.12&side=consumer&timestamp=1566976115547, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 15:09:40.368] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:63)] :  [DUBBO] Destroy reference: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&default.check=false&default.timeout=5000&dubbo=2.6.2&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=2892&register.ip=192.168.1.12&side=consumer&timestamp=1566976113675, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 15:09:40.456] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:349)] : Initializing Eureka in region us-east-1
[2019-08-28 15:09:40.795] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70)] : Using JSON encoding codec LegacyJacksonJson
[2019-08-28 15:09:40.795] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71)] : Using JSON decoding codec LegacyJacksonJson
[2019-08-28 15:09:41.102] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80)] : Using XML encoding codec XStreamXml
[2019-08-28 15:09:41.103] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81)] : Using XML decoding codec XStreamXml
[2019-08-28 15:09:41.666] [INFO ] - [Thread-8][ com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] : Resolving eureka endpoints via configuration
[2019-08-28 15:09:41.710] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958)] : Disable delta property : false
[2019-08-28 15:09:41.711] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:959)] : Single vip registry refresh property : null
[2019-08-28 15:09:41.711] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960)] : Force full registry fetch : false
[2019-08-28 15:09:41.711] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:961)] : Application is null : false
[2019-08-28 15:09:41.712] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:962)] : Registered Applications size is zero : true
[2019-08-28 15:09:41.712] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:964)] : Application version is -1: true
[2019-08-28 15:09:41.712] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1047)] : Getting all instance registry info from the eureka server
[2019-08-28 15:09:43.900] [ERROR] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83)] : Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$16337b50.CGLIB$eurekaClient$1(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$16337b50$$FastClassBySpringCGLIB$$ef37bded.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:365)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$16337b50.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:583)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1246)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:535)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:193)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 65 common frames omitted
[2019-08-28 15:09:43.903] [WARN ] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:130)] : Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2019-08-28 15:09:43.904] [ERROR] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:972)] : DiscoveryClient_BITTRADE-C2C/192.168.1.12:-1:bittrade-c2c:@project.version@ - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$16337b50.CGLIB$eurekaClient$1(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$16337b50$$FastClassBySpringCGLIB$$ef37bded.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:365)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$16337b50.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:583)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1246)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:535)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:193)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
[2019-08-28 15:09:43.906] [WARN ] - [Thread-8][ com.netflix.discovery.DiscoveryClient$1.get(DiscoveryClient.java:290)] : Using default backup registry implementation which does not do anything.
[2019-08-28 15:09:43.910] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1264)] : Starting heartbeat executor: renew interval is: 30
[2019-08-28 15:09:43.917] [INFO ] - [Thread-8][ com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60)] : InstanceInfoReplicator onDemand update allowed rate per min is 4
[2019-08-28 15:09:43.929] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:449)] : Discovery Client initialized at timestamp 1566976183925 with initial instances count: 0
[2019-08-28 15:09:43.949] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:888)] : Shutting down DiscoveryClient ...
[2019-08-28 15:09:46.950] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:922)] : Unregistering ...
[2019-08-28 15:09:48.966] [ERROR] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83)] : Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:923)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:901)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:246)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:494)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 46 common frames omitted
[2019-08-28 15:09:48.968] [WARN ] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:130)] : Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2019-08-28 15:09:48.969] [ERROR] - [Thread-8][ com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:926)] : DiscoveryClient_BITTRADE-C2C/192.168.1.12:-1:bittrade-c2c:@project.version@ - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:923)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:901)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:246)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:494)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
[2019-08-28 15:09:48.993] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:911)] : Completed shut down of DiscoveryClient
[2019-08-28 15:09:51.778] [INFO ] - [Thread-8][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:1948)] : {dataSource-1} closing ...
[2019-08-28 15:09:51.789] [INFO ] - [Thread-8][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:2020)] : {dataSource-1} closed
[2019-08-28 15:20:01.469] [INFO ] - [main][?#?:?] : using logger: com.alibaba.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[2019-08-28 15:20:01.480] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-28 15:20:01.490] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {}
[2019-08-28 15:20:01.952] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1edb61b1: startup date [Wed Aug 28 15:20:01 CST 2019]; root of context hierarchy
[2019-08-28 15:20:02.485] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-28 15:20:02.581] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d123f4fd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:20:02.806] [INFO ] - [pool-1-thread-1][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$1.run(AwaitingNonWebApplicationListener.java:61)] :  [Dubbo] Current Spring Boot Application is await...
[2019-08-28 15:20:03.357] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-28 15:20:03.358] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {dubbo.application.id=service-consumer, dubbo.application.name=service-consumer, dubbo.consumer.check=false, dubbo.consumer.timeout=5000, dubbo.monitor=, dubbo.protocol.id=dubbo, dubbo.protocol.name=dubbo, dubbo.protocol.port=20884, dubbo.provider.timeout=5000, dubbo.registry.address=N/A, dubbo.registry.check=false, dubbo.registry.id=my-registry, dubbo.registry.protocol=zookeeper, dubbo.scan=}
[2019-08-28 15:20:03.422] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : The following profiles are active: common,data,eureka,dubbo_provider,dubbo_consumer
[2019-08-28 15:20:03.432] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Refreshing org.springframework.web.context.support.GenericWebApplicationContext@285f38f6: startup date [Wed Aug 28 15:20:03 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1edb61b1
[2019-08-28 15:20:05.148] [WARN ] - [main][ org.mybatis.logging.Logger.warn(Logger.java:44)] : No MyBatis mapper was found in '[com.baomidou.cloud.service.*.mapper*]' package. Please check your configuration.
[2019-08-28 15:20:06.168] [INFO ] - [main][ org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:172)] : Multiple Spring Data modules found, entering strict repository configuration mode!
[2019-08-28 15:20:06.665] [WARN ] - [main][ com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans(ServiceAnnotationBeanPostProcessor.java:155)] :  [DUBBO] No Spring Bean annotating Dubbo's @Service was found under package[com.bittrade.c2c], dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 15:20:07.162] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : BeanFactory id=61352edb-e99a-3c04-9bd9-f50ca066a043
[2019-08-28 15:20:07.400] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-28 15:20:07.733] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:20:07.747] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionProperties' of type [com.core.framework.props.TransactionProperties$$EnhancerBySpringCGLIB$$c652b4a6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:20:07.768] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$ceb5e772] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:20:07.773] [INFO ] - [main][ com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource(DruidDataSourceAutoConfigure.java:56)] : Init DruidDataSource
[2019-08-28 15:20:07.913] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:20:08.108] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003)] : {dataSource-1} inited
[2019-08-28 15:20:08.109] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:20:08.148] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:20:08.162] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$$EnhancerBySpringCGLIB$$497ded0a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:20:08.188] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:20:08.196] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:20:08.205] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration$$EnhancerBySpringCGLIB$$620a8a6f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:20:08.254] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:20:08.256] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionConfig' of type [com.core.framework.config.TransactionConfig$$EnhancerBySpringCGLIB$$bb0e6f4b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:20:08.285] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'defaultPointcutAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:20:08.310] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b509f200] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:20:08.644] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' of type [com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration$$EnhancerBySpringCGLIB$$c40b9772] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:20:08.661] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:20:08.671] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:20:08.675] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:20:08.678] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:20:08.681] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:20:08.748] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d123f4fd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:20:13.910] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'clientInboundChannelExecutor'
[2019-08-28 15:20:13.952] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'clientOutboundChannelExecutor'
[2019-08-28 15:20:14.513] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService
[2019-08-28 15:20:14.820] [INFO ] - [main][ com.core.framework.config.redis.JedisClusterConfig.getJedisCluster(JedisClusterConfig.java:35)] : 进入redis集群初始化方法：访问集群地址为：[154.222.138.5:7000, 154.222.138.5:7001, 154.222.138.5:7002, 154.222.138.5:7003, 154.222.138.5:7004, 154.222.138.5:7005]
[2019-08-28 15:20:16.450] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyTradeServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 15:20:18.150] [WARN ] - [main][ com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:98)] :  [DUBBO] Failed to start NettyClient HAHE/192.168.1.12 connect to the server localhost/127.0.0.1:20881 (check == false, ignore and retry later!), cause: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=6984&register.ip=192.168.1.12&side=consumer&timestamp=1566976816451) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=6984&register.ip=192.168.1.12&side=consumer&timestamp=1566976816451) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:89)
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.<init>(NettyClient.java:59)
	at com.alibaba.dubbo.remoting.transport.netty.NettyTransporter.connect(NettyTransporter.java:37)
	at com.alibaba.dubbo.remoting.Transporter$Adaptive.connect(Transporter$Adaptive.java)
	at com.alibaba.dubbo.remoting.Transporters.connect(Transporters.java:75)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchanger.connect(HeaderExchanger.java:39)
	at com.alibaba.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:109)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.initClient(DubboProtocol.java:409)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getSharedClient(DubboProtocol.java:377)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getClients(DubboProtocol.java:354)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.refer(DubboProtocol.java:336)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:108)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:67)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:65)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:394)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:333)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:163)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:66)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceFieldElement.inject(ReferenceAnnotationBeanPostProcessor.java:367)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.postProcessPropertyValues(ReferenceAnnotationBeanPostProcessor.java:92)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:759)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:548)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:386)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:89)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:41)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:541)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:763)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:463)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:209)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-08-28 15:20:18.349] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 15:20:19.524] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-28 15:20:19.525] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-28 15:20:19.563] [INFO ] - [main][ com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281)] : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@311453ab
[2019-08-28 15:20:19.883] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/sendMessage],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.sendMessage(com.bittrade.c2c.vo.SendVo)
[2019-08-28 15:20:19.886] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/sendOrder],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.pullOrderDetail(com.bittrade.c2c.vo.SendOrderVo)
[2019-08-28 15:20:19.886] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/pullUnreadMessage],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.pullMessage(java.lang.Long)
[2019-08-28 15:20:19.900] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts/users/{coin_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.listAdvertsUsers(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.AdvertUserVO>,java.lang.Long,com.core.web.constant.entity.LoginUser)
[2019-08-28 15:20:19.901] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/suspend],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.suspendAdverts(java.util.List<java.lang.Long>,com.core.web.constant.entity.LoginUser)
[2019-08-28 15:20:19.902] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/revoke/{advert_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.revokeAdverts(java.lang.Long,com.core.web.constant.entity.LoginUser)
[2019-08-28 15:20:19.903] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/publish_advert],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.publishAdvert(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.TAdvertInfoDTO)
[2019-08-28 15:20:19.904] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts/details/{advert_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.getAdvertDetails(java.lang.Long)
[2019-08-28 15:20:19.905] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/place_advert_order/{advert_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.placeAdvertOrder(java.lang.Long,java.math.BigDecimal,java.lang.String,com.core.web.constant.entity.LoginUser)
[2019-08-28 15:20:19.907] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.listAdverts(com.core.common.DTO.PageDTO<com.bittrade.pojo.dto.TAdvertInfoDTO>,com.bittrade.pojo.vo.QueryAdvertVO,com.core.web.constant.entity.LoginUser)
[2019-08-28 15:20:19.908] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 15:20:19.909] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 15:20:19.910] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 15:20:19.911] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 15:20:19.912] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 15:20:19.913] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 15:20:19.914] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 15:20:19.915] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 15:20:19.916] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 15:20:19.917] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 15:20:19.917] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 15:20:19.918] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 15:20:19.919] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 15:20:19.920] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 15:20:19.921] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 15:20:19.930] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/details/{order_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.getAdvertOrderDetails(java.lang.Long)
[2019-08-28 15:20:19.931] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/click_already_paid/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.clickAlreadyPaid(java.lang.Long)
[2019-08-28 15:20:19.932] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/cancel/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.cancelAdvertOrder(java.lang.Long)
[2019-08-28 15:20:19.933] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/no_complete],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.noCompleteAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 15:20:19.934] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/click_already_receipt/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.clickAlreadyReceipt(java.lang.Long)
[2019-08-28 15:20:19.935] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/already_complete],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.alreadyCompleteAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 15:20:19.935] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/already_cancel],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.alreadyCancelAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 15:20:19.936] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 15:20:19.937] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 15:20:19.938] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 15:20:19.939] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 15:20:19.940] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 15:20:19.941] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 15:20:19.942] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 15:20:19.944] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 15:20:19.945] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 15:20:19.946] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 15:20:19.947] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 15:20:19.948] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 15:20:19.948] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 15:20:19.949] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 15:20:19.950] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 15:20:19.958] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/detail],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetsVO>> com.common.bittrade.controller.TLegalCurrencyAccountController.detail(com.core.web.constant.entity.LoginUser)
[2019-08-28 15:20:19.960] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/conversionTotal],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.ConversionVo> com.common.bittrade.controller.TLegalCurrencyAccountController.totalConversion(com.core.web.constant.entity.LoginUser)
[2019-08-28 15:20:19.960] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getAssetsFeign],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.math.BigDecimal com.common.bittrade.controller.TLegalCurrencyAccountController.getAssetsFeign(java.lang.Long)
[2019-08-28 15:20:19.961] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/availableBalanceFeign],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.lang.String com.common.bittrade.controller.TLegalCurrencyAccountController.availableBalanceFeign(java.lang.Long,java.lang.String)
[2019-08-28 15:20:19.963] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 15:20:19.964] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 15:20:19.965] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 15:20:19.966] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 15:20:19.967] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 15:20:19.968] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 15:20:19.969] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 15:20:19.970] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 15:20:19.970] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 15:20:19.971] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 15:20:19.972] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 15:20:19.973] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 15:20:19.974] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 15:20:19.975] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 15:20:19.977] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 15:20:19.982] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/legalCurrency_coins],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.common.bittrade.controller.TLegalCurrencyCoinController.listLegalCurrencyCoins()
[2019-08-28 15:20:19.983] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 15:20:19.984] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 15:20:19.985] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 15:20:19.987] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 15:20:19.988] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 15:20:19.990] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 15:20:19.991] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 15:20:19.992] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 15:20:19.993] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 15:20:19.993] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 15:20:19.994] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 15:20:19.995] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 15:20:19.996] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 15:20:19.997] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 15:20:19.997] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 15:20:20.003] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/queryType],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetRecordTypeVO>> com.common.bittrade.controller.TLegalCurrencyRecordController.queryTypeForFund()
[2019-08-28 15:20:20.004] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/queryAccountRecord],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.RecordVO>> com.common.bittrade.controller.TLegalCurrencyRecordController.queryAccountRecord(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.AccountTypeDto)
[2019-08-28 15:20:20.005] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 15:20:20.006] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 15:20:20.006] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 15:20:20.007] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 15:20:20.008] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 15:20:20.009] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 15:20:20.009] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 15:20:20.010] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 15:20:20.011] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 15:20:20.012] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 15:20:20.012] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 15:20:20.014] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 15:20:20.015] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 15:20:20.016] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 15:20:20.016] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 15:20:20.022] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/rechargecoinlist],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO com.common.bittrade.controller.WCoinController.rechargecoinlist()
[2019-08-28 15:20:20.023] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/Withdrawcoinlist],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO com.common.bittrade.controller.WCoinController.withdrawcoinlist()
[2019-08-28 15:20:20.023] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/getList],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.model.WCoin>> com.common.bittrade.controller.WCoinController.getList()
[2019-08-28 15:20:20.025] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccount/detail],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetsVO>> com.common.bittrade.controller.WWalletAccountController.detail(com.core.web.constant.entity.LoginUser)
[2019-08-28 15:20:20.026] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccount/conversionTotal],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.ConversionVo> com.common.bittrade.controller.WWalletAccountController.totalConversion(com.core.web.constant.entity.LoginUser)
[2019-08-28 15:20:20.028] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryCurrencies],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.model.WCoin>> com.common.bittrade.controller.WWalletAccountRecordController.queryCurrencies()
[2019-08-28 15:20:20.029] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryTypeForFund],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetRecordTypeVO>> com.common.bittrade.controller.WWalletAccountRecordController.queryTypeForFund()
[2019-08-28 15:20:20.030] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryFundAccountRecord],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.RecordVO>> com.common.bittrade.controller.WWalletAccountRecordController.queryFundAccountRecord(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.AccountTypeDto)
[2019-08-28 15:20:20.036] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
[2019-08-28 15:20:20.037] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
[2019-08-28 15:20:20.037] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
[2019-08-28 15:20:20.043] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2019-08-28 15:20:20.045] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2019-08-28 15:20:20.086] [WARN ] - [DubboClientReconnectTimer-thread-1][ com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:171)] :  [DUBBO] client reconnect to localhost:20881 find error . url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=6984&register.ip=192.168.1.12&side=consumer&timestamp=1566976816451, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=6984&register.ip=192.168.1.12&side=consumer&timestamp=1566976816451) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:156)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	... 3 common frames omitted
[2019-08-28 15:20:22.054] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Exposing 2 endpoint(s) beneath base path '/actuator'
[2019-08-28 15:20:22.097] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2019-08-28 15:20:22.098] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2019-08-28 15:20:22.100] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2019-08-28 15:20:22.716] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'messageBrokerTaskScheduler'
[2019-08-28 15:20:22.855] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped URL path [/c2c/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
[2019-08-28 15:20:22.888] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'brokerChannelExecutor'
[2019-08-28 15:20:23.320] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[2019-08-28 15:20:23.953] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@285f38f6: startup date [Wed Aug 28 15:20:03 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1edb61b1
[2019-08-28 15:20:24.067] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Detected @ExceptionHandler methods in globalExceptionHandler
[2019-08-28 15:20:24.589] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-28 15:20:24.590] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-28 15:20:26.701] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting beans in phase 0
[2019-08-28 15:20:26.702] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting beans in phase 2147483647
[2019-08-28 15:20:26.702] [INFO ] - [main][ springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:151)] : Context refreshed
[2019-08-28 15:20:26.754] [INFO ] - [main][ springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:154)] : Found 1 custom documentation plugin(s)
[2019-08-28 15:20:26.830] [INFO ] - [main][ springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)] : Scanning for api listing references
[2019-08-28 15:20:27.450] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting...
[2019-08-28 15:20:27.450] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
[2019-08-28 15:20:27.452] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Started.
[2019-08-28 15:20:27.474] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Started AdvertInfoTester in 26.375 seconds (JVM running for 29.021)
[2019-08-28 15:20:30.556] [INFO ] - [Thread-2][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$2.run(AwaitingNonWebApplicationListener.java:83)] :  [Dubbo] Current Spring Boot Application is about to shutdown...
[2019-08-28 15:20:30.559] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:64)] :  [DUBBO] Close all registries [], dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 15:20:30.560] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(DubboProtocol.java:438)] :  [DUBBO] Close dubbo connect: 192.168.1.12:0-->localhost/127.0.0.1:20881, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 15:20:30.561] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:63)] :  [DUBBO] Destroy reference: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&default.check=false&default.timeout=5000&dubbo=2.6.2&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=6984&register.ip=192.168.1.12&side=consumer&timestamp=1566976816451, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 15:20:30.571] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:63)] :  [DUBBO] Destroy reference: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyService?application=service-consumer&default.check=false&default.timeout=5000&dubbo=2.6.2&interface=com.bittrade.currency.api.service.ITCurrencyService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getCurrencies,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,findAllLegalCurrency,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,findUsableCurrency,updateById,pageMaps,listByMap,getByPK&pid=6984&register.ip=192.168.1.12&side=consumer&timestamp=1566976818350, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 15:20:30.697] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:349)] : Initializing Eureka in region us-east-1
[2019-08-28 15:20:31.009] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70)] : Using JSON encoding codec LegacyJacksonJson
[2019-08-28 15:20:31.010] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71)] : Using JSON decoding codec LegacyJacksonJson
[2019-08-28 15:20:31.290] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80)] : Using XML encoding codec XStreamXml
[2019-08-28 15:20:31.291] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81)] : Using XML decoding codec XStreamXml
[2019-08-28 15:20:31.805] [INFO ] - [Thread-8][ com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] : Resolving eureka endpoints via configuration
[2019-08-28 15:20:31.852] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958)] : Disable delta property : false
[2019-08-28 15:20:31.853] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:959)] : Single vip registry refresh property : null
[2019-08-28 15:20:31.853] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960)] : Force full registry fetch : false
[2019-08-28 15:20:31.853] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:961)] : Application is null : false
[2019-08-28 15:20:31.853] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:962)] : Registered Applications size is zero : true
[2019-08-28 15:20:31.854] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:964)] : Application version is -1: true
[2019-08-28 15:20:31.854] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1047)] : Getting all instance registry info from the eureka server
[2019-08-28 15:20:34.028] [ERROR] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83)] : Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$d88cee1c.CGLIB$eurekaClient$1(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$d88cee1c$$FastClassBySpringCGLIB$$1621bc33.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:365)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$d88cee1c.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:583)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1246)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:535)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:193)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 65 common frames omitted
[2019-08-28 15:20:34.031] [WARN ] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:130)] : Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2019-08-28 15:20:34.032] [ERROR] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:972)] : DiscoveryClient_BITTRADE-C2C/192.168.1.12:-1:bittrade-c2c:@project.version@ - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$d88cee1c.CGLIB$eurekaClient$1(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$d88cee1c$$FastClassBySpringCGLIB$$1621bc33.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:365)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$d88cee1c.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:583)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1246)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:535)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:193)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
[2019-08-28 15:20:34.033] [WARN ] - [Thread-8][ com.netflix.discovery.DiscoveryClient$1.get(DiscoveryClient.java:290)] : Using default backup registry implementation which does not do anything.
[2019-08-28 15:20:34.037] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1264)] : Starting heartbeat executor: renew interval is: 30
[2019-08-28 15:20:34.045] [INFO ] - [Thread-8][ com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60)] : InstanceInfoReplicator onDemand update allowed rate per min is 4
[2019-08-28 15:20:34.055] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:449)] : Discovery Client initialized at timestamp 1566976834053 with initial instances count: 0
[2019-08-28 15:20:34.076] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:888)] : Shutting down DiscoveryClient ...
[2019-08-28 15:20:37.079] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:922)] : Unregistering ...
[2019-08-28 15:20:39.109] [ERROR] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83)] : Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:923)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:901)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:246)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:494)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 46 common frames omitted
[2019-08-28 15:20:39.110] [WARN ] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:130)] : Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2019-08-28 15:20:39.111] [ERROR] - [Thread-8][ com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:926)] : DiscoveryClient_BITTRADE-C2C/192.168.1.12:-1:bittrade-c2c:@project.version@ - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:923)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:901)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:246)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:494)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
[2019-08-28 15:20:39.138] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:911)] : Completed shut down of DiscoveryClient
[2019-08-28 15:20:39.156] [INFO ] - [Thread-8][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:1948)] : {dataSource-1} closing ...
[2019-08-28 15:20:39.163] [INFO ] - [Thread-8][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:2020)] : {dataSource-1} closed
[2019-08-28 15:21:28.053] [INFO ] - [main][?#?:?] : using logger: com.alibaba.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[2019-08-28 15:21:28.063] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-28 15:21:28.070] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {}
[2019-08-28 15:21:28.506] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@52d10fb8: startup date [Wed Aug 28 15:21:28 CST 2019]; root of context hierarchy
[2019-08-28 15:21:29.030] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-28 15:21:29.116] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3f852328] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:21:29.321] [INFO ] - [pool-1-thread-1][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$1.run(AwaitingNonWebApplicationListener.java:61)] :  [Dubbo] Current Spring Boot Application is await...
[2019-08-28 15:21:29.860] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-28 15:21:29.862] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {dubbo.application.id=service-consumer, dubbo.application.name=service-consumer, dubbo.consumer.check=false, dubbo.consumer.timeout=5000, dubbo.monitor=, dubbo.protocol.id=dubbo, dubbo.protocol.name=dubbo, dubbo.protocol.port=20884, dubbo.provider.timeout=5000, dubbo.registry.address=N/A, dubbo.registry.check=false, dubbo.registry.id=my-registry, dubbo.registry.protocol=zookeeper, dubbo.scan=}
[2019-08-28 15:21:29.931] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : The following profiles are active: common,data,eureka,dubbo_provider,dubbo_consumer
[2019-08-28 15:21:29.941] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Refreshing org.springframework.web.context.support.GenericWebApplicationContext@6ecab872: startup date [Wed Aug 28 15:21:29 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@52d10fb8
[2019-08-28 15:21:31.606] [WARN ] - [main][ org.mybatis.logging.Logger.warn(Logger.java:44)] : No MyBatis mapper was found in '[com.baomidou.cloud.service.*.mapper*]' package. Please check your configuration.
[2019-08-28 15:21:32.549] [INFO ] - [main][ org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:172)] : Multiple Spring Data modules found, entering strict repository configuration mode!
[2019-08-28 15:21:32.969] [WARN ] - [main][ com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans(ServiceAnnotationBeanPostProcessor.java:155)] :  [DUBBO] No Spring Bean annotating Dubbo's @Service was found under package[com.bittrade.c2c], dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 15:21:33.485] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : BeanFactory id=61352edb-e99a-3c04-9bd9-f50ca066a043
[2019-08-28 15:21:33.733] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-28 15:21:34.076] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:21:34.091] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionProperties' of type [com.core.framework.props.TransactionProperties$$EnhancerBySpringCGLIB$$34b3e2d1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:21:34.109] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$3d17159d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:21:34.114] [INFO ] - [main][ com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource(DruidDataSourceAutoConfigure.java:56)] : Init DruidDataSource
[2019-08-28 15:21:34.271] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:21:34.441] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003)] : {dataSource-1} inited
[2019-08-28 15:21:34.442] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:21:34.489] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:21:34.507] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$$EnhancerBySpringCGLIB$$b7df1b35] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:21:34.533] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:21:34.542] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:21:34.553] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration$$EnhancerBySpringCGLIB$$d06bb89a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:21:34.600] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:21:34.602] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionConfig' of type [com.core.framework.config.TransactionConfig$$EnhancerBySpringCGLIB$$296f9d76] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:21:34.632] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'defaultPointcutAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:21:34.657] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$236b202b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:21:35.037] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' of type [com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration$$EnhancerBySpringCGLIB$$326cc59d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:21:35.056] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:21:35.068] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:21:35.072] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:21:35.077] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:21:35.082] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:21:35.161] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3f852328] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:21:40.257] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'clientInboundChannelExecutor'
[2019-08-28 15:21:40.291] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'clientOutboundChannelExecutor'
[2019-08-28 15:21:40.790] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService
[2019-08-28 15:21:41.108] [INFO ] - [main][ com.core.framework.config.redis.JedisClusterConfig.getJedisCluster(JedisClusterConfig.java:35)] : 进入redis集群初始化方法：访问集群地址为：[154.222.138.5:7000, 154.222.138.5:7001, 154.222.138.5:7002, 154.222.138.5:7003, 154.222.138.5:7004, 154.222.138.5:7005]
[2019-08-28 15:21:42.884] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyTradeServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 15:21:44.532] [WARN ] - [main][ com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:98)] :  [DUBBO] Failed to start NettyClient HAHE/192.168.1.12 connect to the server localhost/127.0.0.1:20881 (check == false, ignore and retry later!), cause: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=7056&register.ip=192.168.1.12&side=consumer&timestamp=1566976902886) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=7056&register.ip=192.168.1.12&side=consumer&timestamp=1566976902886) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:89)
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.<init>(NettyClient.java:59)
	at com.alibaba.dubbo.remoting.transport.netty.NettyTransporter.connect(NettyTransporter.java:37)
	at com.alibaba.dubbo.remoting.Transporter$Adaptive.connect(Transporter$Adaptive.java)
	at com.alibaba.dubbo.remoting.Transporters.connect(Transporters.java:75)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchanger.connect(HeaderExchanger.java:39)
	at com.alibaba.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:109)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.initClient(DubboProtocol.java:409)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getSharedClient(DubboProtocol.java:377)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getClients(DubboProtocol.java:354)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.refer(DubboProtocol.java:336)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:65)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:108)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:67)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:394)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:333)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:163)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:66)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceFieldElement.inject(ReferenceAnnotationBeanPostProcessor.java:367)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.postProcessPropertyValues(ReferenceAnnotationBeanPostProcessor.java:92)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:759)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:548)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:386)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:89)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:41)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:541)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:763)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:463)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:209)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-08-28 15:21:44.722] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 15:21:45.894] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-28 15:21:45.895] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-28 15:21:45.932] [INFO ] - [main][ com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281)] : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@2c9aeec6
[2019-08-28 15:21:46.272] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/sendMessage],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.sendMessage(com.bittrade.c2c.vo.SendVo)
[2019-08-28 15:21:46.274] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/sendOrder],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.pullOrderDetail(com.bittrade.c2c.vo.SendOrderVo)
[2019-08-28 15:21:46.275] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/pullUnreadMessage],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.pullMessage(java.lang.Long)
[2019-08-28 15:21:46.288] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/publish_advert],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.publishAdvert(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.TAdvertInfoDTO)
[2019-08-28 15:21:46.290] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts/users/{coin_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.listAdvertsUsers(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.AdvertUserVO>,java.lang.Long,com.core.web.constant.entity.LoginUser)
[2019-08-28 15:21:46.291] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts/details/{advert_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.getAdvertDetails(java.lang.Long)
[2019-08-28 15:21:46.292] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/place_advert_order/{advert_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.placeAdvertOrder(java.lang.Long,java.math.BigDecimal,java.lang.String,com.core.web.constant.entity.LoginUser)
[2019-08-28 15:21:46.293] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/suspend],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.suspendAdverts(java.util.List<java.lang.Long>,com.core.web.constant.entity.LoginUser)
[2019-08-28 15:21:46.294] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/revoke/{advert_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.revokeAdverts(java.lang.Long,com.core.web.constant.entity.LoginUser)
[2019-08-28 15:21:46.295] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.listAdverts(com.core.common.DTO.PageDTO<com.bittrade.pojo.dto.TAdvertInfoDTO>,com.bittrade.pojo.vo.QueryAdvertVO,com.core.web.constant.entity.LoginUser)
[2019-08-28 15:21:46.296] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 15:21:46.297] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 15:21:46.298] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 15:21:46.299] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 15:21:46.300] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 15:21:46.301] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 15:21:46.301] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 15:21:46.302] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 15:21:46.303] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 15:21:46.304] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 15:21:46.305] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 15:21:46.306] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 15:21:46.307] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 15:21:46.307] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 15:21:46.308] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 15:21:46.316] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/details/{order_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.getAdvertOrderDetails(java.lang.Long)
[2019-08-28 15:21:46.317] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/already_cancel],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.alreadyCancelAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 15:21:46.318] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/cancel/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.cancelAdvertOrder(java.lang.Long)
[2019-08-28 15:21:46.319] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/already_complete],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.alreadyCompleteAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 15:21:46.320] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/no_complete],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.noCompleteAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 15:21:46.321] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/click_already_receipt/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.clickAlreadyReceipt(java.lang.Long)
[2019-08-28 15:21:46.322] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/click_already_paid/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.clickAlreadyPaid(java.lang.Long)
[2019-08-28 15:21:46.323] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 15:21:46.323] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 15:21:46.324] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 15:21:46.325] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 15:21:46.326] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 15:21:46.327] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 15:21:46.327] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 15:21:46.328] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 15:21:46.329] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 15:21:46.330] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 15:21:46.331] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 15:21:46.332] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 15:21:46.332] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 15:21:46.333] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 15:21:46.334] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 15:21:46.341] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/detail],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetsVO>> com.common.bittrade.controller.TLegalCurrencyAccountController.detail(com.core.web.constant.entity.LoginUser)
[2019-08-28 15:21:46.342] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/availableBalanceFeign],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.lang.String com.common.bittrade.controller.TLegalCurrencyAccountController.availableBalanceFeign(java.lang.Long,java.lang.String)
[2019-08-28 15:21:46.342] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/conversionTotal],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.ConversionVo> com.common.bittrade.controller.TLegalCurrencyAccountController.totalConversion(com.core.web.constant.entity.LoginUser)
[2019-08-28 15:21:46.343] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getAssetsFeign],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.math.BigDecimal com.common.bittrade.controller.TLegalCurrencyAccountController.getAssetsFeign(java.lang.Long)
[2019-08-28 15:21:46.344] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 15:21:46.345] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 15:21:46.346] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 15:21:46.346] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 15:21:46.347] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 15:21:46.348] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 15:21:46.349] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 15:21:46.350] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 15:21:46.351] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 15:21:46.351] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 15:21:46.352] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 15:21:46.353] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 15:21:46.354] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 15:21:46.354] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 15:21:46.355] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 15:21:46.360] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/legalCurrency_coins],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.common.bittrade.controller.TLegalCurrencyCoinController.listLegalCurrencyCoins()
[2019-08-28 15:21:46.361] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 15:21:46.362] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 15:21:46.362] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 15:21:46.363] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 15:21:46.364] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 15:21:46.365] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 15:21:46.366] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 15:21:46.367] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 15:21:46.368] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 15:21:46.369] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 15:21:46.370] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 15:21:46.370] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 15:21:46.371] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 15:21:46.372] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 15:21:46.373] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 15:21:46.379] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/queryAccountRecord],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.RecordVO>> com.common.bittrade.controller.TLegalCurrencyRecordController.queryAccountRecord(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.AccountTypeDto)
[2019-08-28 15:21:46.380] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/queryType],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetRecordTypeVO>> com.common.bittrade.controller.TLegalCurrencyRecordController.queryTypeForFund()
[2019-08-28 15:21:46.381] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 15:21:46.382] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 15:21:46.382] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 15:21:46.383] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 15:21:46.384] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 15:21:46.385] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 15:21:46.386] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 15:21:46.386] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 15:21:46.387] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 15:21:46.388] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 15:21:46.389] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 15:21:46.390] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 15:21:46.391] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 15:21:46.392] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 15:21:46.393] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 15:21:46.398] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/rechargecoinlist],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO com.common.bittrade.controller.WCoinController.rechargecoinlist()
[2019-08-28 15:21:46.399] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/Withdrawcoinlist],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO com.common.bittrade.controller.WCoinController.withdrawcoinlist()
[2019-08-28 15:21:46.400] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/getList],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.model.WCoin>> com.common.bittrade.controller.WCoinController.getList()
[2019-08-28 15:21:46.402] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccount/detail],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetsVO>> com.common.bittrade.controller.WWalletAccountController.detail(com.core.web.constant.entity.LoginUser)
[2019-08-28 15:21:46.403] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccount/conversionTotal],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.ConversionVo> com.common.bittrade.controller.WWalletAccountController.totalConversion(com.core.web.constant.entity.LoginUser)
[2019-08-28 15:21:46.404] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryFundAccountRecord],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.RecordVO>> com.common.bittrade.controller.WWalletAccountRecordController.queryFundAccountRecord(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.AccountTypeDto)
[2019-08-28 15:21:46.405] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryTypeForFund],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetRecordTypeVO>> com.common.bittrade.controller.WWalletAccountRecordController.queryTypeForFund()
[2019-08-28 15:21:46.406] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryCurrencies],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.model.WCoin>> com.common.bittrade.controller.WWalletAccountRecordController.queryCurrencies()
[2019-08-28 15:21:46.411] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
[2019-08-28 15:21:46.413] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
[2019-08-28 15:21:46.414] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
[2019-08-28 15:21:46.419] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2019-08-28 15:21:46.420] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2019-08-28 15:21:46.472] [WARN ] - [DubboClientReconnectTimer-thread-1][ com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:171)] :  [DUBBO] client reconnect to localhost:20881 find error . url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=7056&register.ip=192.168.1.12&side=consumer&timestamp=1566976902886, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=7056&register.ip=192.168.1.12&side=consumer&timestamp=1566976902886) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:156)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	... 3 common frames omitted
[2019-08-28 15:21:48.128] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Exposing 2 endpoint(s) beneath base path '/actuator'
[2019-08-28 15:21:48.171] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2019-08-28 15:21:48.172] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2019-08-28 15:21:48.174] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2019-08-28 15:21:48.666] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'messageBrokerTaskScheduler'
[2019-08-28 15:21:48.813] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped URL path [/c2c/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
[2019-08-28 15:21:48.845] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'brokerChannelExecutor'
[2019-08-28 15:21:49.283] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[2019-08-28 15:21:49.815] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@6ecab872: startup date [Wed Aug 28 15:21:29 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@52d10fb8
[2019-08-28 15:21:49.921] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Detected @ExceptionHandler methods in globalExceptionHandler
[2019-08-28 15:21:50.416] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-28 15:21:50.417] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-28 15:21:52.497] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting beans in phase 0
[2019-08-28 15:21:52.498] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting beans in phase 2147483647
[2019-08-28 15:21:52.498] [INFO ] - [main][ springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:151)] : Context refreshed
[2019-08-28 15:21:52.548] [INFO ] - [main][ springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:154)] : Found 1 custom documentation plugin(s)
[2019-08-28 15:21:52.626] [INFO ] - [main][ springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)] : Scanning for api listing references
[2019-08-28 15:21:53.228] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting...
[2019-08-28 15:21:53.229] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
[2019-08-28 15:21:53.230] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Started.
[2019-08-28 15:21:53.252] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Started AdvertInfoTester in 25.552 seconds (JVM running for 28.196)
[2019-08-28 15:21:57.499] [INFO ] - [Thread-2][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$2.run(AwaitingNonWebApplicationListener.java:83)] :  [Dubbo] Current Spring Boot Application is about to shutdown...
[2019-08-28 15:21:57.502] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:64)] :  [DUBBO] Close all registries [], dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 15:21:57.503] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(DubboProtocol.java:438)] :  [DUBBO] Close dubbo connect: 192.168.1.12:0-->localhost/127.0.0.1:20881, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 15:21:57.503] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:63)] :  [DUBBO] Destroy reference: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&default.check=false&default.timeout=5000&dubbo=2.6.2&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=7056&register.ip=192.168.1.12&side=consumer&timestamp=1566976902886, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 15:21:57.627] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:349)] : Initializing Eureka in region us-east-1
[2019-08-28 15:21:57.955] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70)] : Using JSON encoding codec LegacyJacksonJson
[2019-08-28 15:21:57.956] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71)] : Using JSON decoding codec LegacyJacksonJson
[2019-08-28 15:21:58.294] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80)] : Using XML encoding codec XStreamXml
[2019-08-28 15:21:58.294] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81)] : Using XML decoding codec XStreamXml
[2019-08-28 15:21:58.486] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:63)] :  [DUBBO] Destroy reference: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyService?application=service-consumer&default.check=false&default.timeout=5000&dubbo=2.6.2&interface=com.bittrade.currency.api.service.ITCurrencyService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getCurrencies,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,findAllLegalCurrency,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,findUsableCurrency,updateById,pageMaps,listByMap,getByPK&pid=7056&register.ip=192.168.1.12&side=consumer&timestamp=1566976904723, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 15:21:58.805] [INFO ] - [Thread-8][ com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] : Resolving eureka endpoints via configuration
[2019-08-28 15:21:58.843] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958)] : Disable delta property : false
[2019-08-28 15:21:58.843] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:959)] : Single vip registry refresh property : null
[2019-08-28 15:21:58.843] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960)] : Force full registry fetch : false
[2019-08-28 15:21:58.844] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:961)] : Application is null : false
[2019-08-28 15:21:58.844] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:962)] : Registered Applications size is zero : true
[2019-08-28 15:21:58.844] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:964)] : Application version is -1: true
[2019-08-28 15:21:58.844] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1047)] : Getting all instance registry info from the eureka server
[2019-08-28 15:22:01.003] [ERROR] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83)] : Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$46ee1c47.CGLIB$eurekaClient$1(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$46ee1c47$$FastClassBySpringCGLIB$$7eeb7439.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:365)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$46ee1c47.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:583)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1246)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:535)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:193)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 65 common frames omitted
[2019-08-28 15:22:01.005] [WARN ] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:130)] : Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2019-08-28 15:22:01.006] [ERROR] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:972)] : DiscoveryClient_BITTRADE-C2C/192.168.1.12:-1:bittrade-c2c:@project.version@ - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$46ee1c47.CGLIB$eurekaClient$1(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$46ee1c47$$FastClassBySpringCGLIB$$7eeb7439.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:365)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$46ee1c47.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:583)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1246)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:535)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:193)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
[2019-08-28 15:22:01.008] [WARN ] - [Thread-8][ com.netflix.discovery.DiscoveryClient$1.get(DiscoveryClient.java:290)] : Using default backup registry implementation which does not do anything.
[2019-08-28 15:22:01.012] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1264)] : Starting heartbeat executor: renew interval is: 30
[2019-08-28 15:22:01.020] [INFO ] - [Thread-8][ com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60)] : InstanceInfoReplicator onDemand update allowed rate per min is 4
[2019-08-28 15:22:01.031] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:449)] : Discovery Client initialized at timestamp 1566976921027 with initial instances count: 0
[2019-08-28 15:22:01.056] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:888)] : Shutting down DiscoveryClient ...
[2019-08-28 15:22:04.058] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:922)] : Unregistering ...
[2019-08-28 15:22:06.079] [ERROR] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83)] : Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:923)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:901)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:246)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:494)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 46 common frames omitted
[2019-08-28 15:22:06.081] [WARN ] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:130)] : Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2019-08-28 15:22:06.082] [ERROR] - [Thread-8][ com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:926)] : DiscoveryClient_BITTRADE-C2C/192.168.1.12:-1:bittrade-c2c:@project.version@ - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:923)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:901)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:246)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:494)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
[2019-08-28 15:22:06.108] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:911)] : Completed shut down of DiscoveryClient
[2019-08-28 15:22:06.123] [INFO ] - [Thread-8][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:1948)] : {dataSource-1} closing ...
[2019-08-28 15:22:06.129] [INFO ] - [Thread-8][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:2020)] : {dataSource-1} closed
[2019-08-28 15:26:28.374] [INFO ] - [main][?#?:?] : using logger: com.alibaba.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[2019-08-28 15:26:28.385] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-28 15:26:28.392] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {}
[2019-08-28 15:26:28.853] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@13579834: startup date [Wed Aug 28 15:26:28 CST 2019]; root of context hierarchy
[2019-08-28 15:26:29.410] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-28 15:26:29.509] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8bf0a2df] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:26:29.740] [INFO ] - [pool-1-thread-1][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$1.run(AwaitingNonWebApplicationListener.java:61)] :  [Dubbo] Current Spring Boot Application is await...
[2019-08-28 15:26:30.311] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-28 15:26:30.313] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {dubbo.application.id=service-consumer, dubbo.application.name=service-consumer, dubbo.consumer.check=false, dubbo.consumer.timeout=5000, dubbo.monitor=, dubbo.protocol.id=dubbo, dubbo.protocol.name=dubbo, dubbo.protocol.port=20884, dubbo.provider.timeout=5000, dubbo.registry.address=N/A, dubbo.registry.check=false, dubbo.registry.id=my-registry, dubbo.registry.protocol=zookeeper, dubbo.scan=}
[2019-08-28 15:26:30.402] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : The following profiles are active: common,data,eureka,dubbo_provider,dubbo_consumer
[2019-08-28 15:26:30.414] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Refreshing org.springframework.web.context.support.GenericWebApplicationContext@67d86804: startup date [Wed Aug 28 15:26:30 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@13579834
[2019-08-28 15:26:32.207] [WARN ] - [main][ org.mybatis.logging.Logger.warn(Logger.java:44)] : No MyBatis mapper was found in '[com.baomidou.cloud.service.*.mapper*]' package. Please check your configuration.
[2019-08-28 15:26:33.192] [INFO ] - [main][ org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:172)] : Multiple Spring Data modules found, entering strict repository configuration mode!
[2019-08-28 15:26:33.608] [WARN ] - [main][ com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans(ServiceAnnotationBeanPostProcessor.java:155)] :  [DUBBO] No Spring Bean annotating Dubbo's @Service was found under package[com.bittrade.c2c], dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 15:26:34.104] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : BeanFactory id=61352edb-e99a-3c04-9bd9-f50ca066a043
[2019-08-28 15:26:34.332] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-28 15:26:34.671] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:26:34.686] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionProperties' of type [com.core.framework.props.TransactionProperties$$EnhancerBySpringCGLIB$$811f6288] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:26:34.708] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$89829554] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:26:34.713] [INFO ] - [main][ com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource(DruidDataSourceAutoConfigure.java:56)] : Init DruidDataSource
[2019-08-28 15:26:34.839] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:26:35.026] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003)] : {dataSource-1} inited
[2019-08-28 15:26:35.027] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:26:35.067] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:26:35.081] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$$EnhancerBySpringCGLIB$$44a9aec] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:26:35.106] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:26:35.114] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:26:35.124] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration$$EnhancerBySpringCGLIB$$1cd73851] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:26:35.170] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:26:35.172] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionConfig' of type [com.core.framework.config.TransactionConfig$$EnhancerBySpringCGLIB$$75db1d2d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:26:35.216] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'defaultPointcutAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:26:35.240] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6fd69fe2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:26:35.615] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' of type [com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration$$EnhancerBySpringCGLIB$$7ed84554] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:26:35.635] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:26:35.645] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:26:35.651] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:26:35.655] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:26:35.659] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:26:35.734] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8bf0a2df] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:26:41.046] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'clientInboundChannelExecutor'
[2019-08-28 15:26:41.089] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'clientOutboundChannelExecutor'
[2019-08-28 15:26:41.781] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService
[2019-08-28 15:26:42.084] [INFO ] - [main][ com.core.framework.config.redis.JedisClusterConfig.getJedisCluster(JedisClusterConfig.java:35)] : 进入redis集群初始化方法：访问集群地址为：[154.222.138.5:7000, 154.222.138.5:7001, 154.222.138.5:7002, 154.222.138.5:7003, 154.222.138.5:7004, 154.222.138.5:7005]
[2019-08-28 15:26:43.704] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyTradeServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 15:26:45.382] [WARN ] - [main][ com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:98)] :  [DUBBO] Failed to start NettyClient HAHE/192.168.1.12 connect to the server localhost/127.0.0.1:20881 (check == false, ignore and retry later!), cause: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=2232&register.ip=192.168.1.12&side=consumer&timestamp=1566977203705) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=2232&register.ip=192.168.1.12&side=consumer&timestamp=1566977203705) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:89)
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.<init>(NettyClient.java:59)
	at com.alibaba.dubbo.remoting.transport.netty.NettyTransporter.connect(NettyTransporter.java:37)
	at com.alibaba.dubbo.remoting.Transporter$Adaptive.connect(Transporter$Adaptive.java)
	at com.alibaba.dubbo.remoting.Transporters.connect(Transporters.java:75)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchanger.connect(HeaderExchanger.java:39)
	at com.alibaba.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:109)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.initClient(DubboProtocol.java:409)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getSharedClient(DubboProtocol.java:377)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getClients(DubboProtocol.java:354)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.refer(DubboProtocol.java:336)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:65)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:108)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:67)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:394)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:333)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:163)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:66)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceFieldElement.inject(ReferenceAnnotationBeanPostProcessor.java:367)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.postProcessPropertyValues(ReferenceAnnotationBeanPostProcessor.java:92)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:759)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:548)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:386)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:89)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:41)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:541)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:763)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:463)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:209)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-08-28 15:26:45.549] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 15:26:46.703] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-28 15:26:46.704] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-28 15:26:46.743] [INFO ] - [main][ com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281)] : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@70f8d217
[2019-08-28 15:26:47.069] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/sendMessage],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.sendMessage(com.bittrade.c2c.vo.SendVo)
[2019-08-28 15:26:47.072] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/pullUnreadMessage],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.pullMessage(java.lang.Long)
[2019-08-28 15:26:47.073] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/sendOrder],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.pullOrderDetail(com.bittrade.c2c.vo.SendOrderVo)
[2019-08-28 15:26:47.088] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.listAdverts(com.core.common.DTO.PageDTO<com.bittrade.pojo.dto.TAdvertInfoDTO>,com.bittrade.pojo.vo.QueryAdvertVO,com.core.web.constant.entity.LoginUser)
[2019-08-28 15:26:47.091] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/publish_advert],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.publishAdvert(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.TAdvertInfoDTO)
[2019-08-28 15:26:47.092] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/revoke/{advert_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.revokeAdverts(java.lang.Long,com.core.web.constant.entity.LoginUser)
[2019-08-28 15:26:47.093] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts/details/{advert_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.getAdvertDetails(java.lang.Long)
[2019-08-28 15:26:47.094] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/suspend],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.suspendAdverts(java.util.List<java.lang.Long>,com.core.web.constant.entity.LoginUser)
[2019-08-28 15:26:47.095] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/place_advert_order/{advert_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.placeAdvertOrder(java.lang.Long,java.math.BigDecimal,java.lang.String,com.core.web.constant.entity.LoginUser)
[2019-08-28 15:26:47.096] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts/users/{coin_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.listAdvertsUsers(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.AdvertUserVO>,java.lang.Long,com.core.web.constant.entity.LoginUser)
[2019-08-28 15:26:47.097] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 15:26:47.098] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 15:26:47.099] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 15:26:47.100] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 15:26:47.101] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 15:26:47.102] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 15:26:47.103] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 15:26:47.104] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 15:26:47.105] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 15:26:47.105] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 15:26:47.106] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 15:26:47.107] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 15:26:47.108] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 15:26:47.109] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 15:26:47.109] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 15:26:47.116] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/details/{order_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.getAdvertOrderDetails(java.lang.Long)
[2019-08-28 15:26:47.117] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/click_already_paid/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.clickAlreadyPaid(java.lang.Long)
[2019-08-28 15:26:47.118] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/already_cancel],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.alreadyCancelAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 15:26:47.119] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/already_complete],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.alreadyCompleteAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 15:26:47.120] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/click_already_receipt/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.clickAlreadyReceipt(java.lang.Long)
[2019-08-28 15:26:47.121] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/cancel/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.cancelAdvertOrder(java.lang.Long)
[2019-08-28 15:26:47.122] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/no_complete],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.noCompleteAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 15:26:47.123] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 15:26:47.124] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 15:26:47.124] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 15:26:47.125] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 15:26:47.126] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 15:26:47.127] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 15:26:47.127] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 15:26:47.128] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 15:26:47.129] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 15:26:47.130] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 15:26:47.131] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 15:26:47.131] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 15:26:47.132] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 15:26:47.133] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 15:26:47.134] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 15:26:47.140] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/detail],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetsVO>> com.common.bittrade.controller.TLegalCurrencyAccountController.detail(com.core.web.constant.entity.LoginUser)
[2019-08-28 15:26:47.141] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/availableBalanceFeign],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.lang.String com.common.bittrade.controller.TLegalCurrencyAccountController.availableBalanceFeign(java.lang.Long,java.lang.String)
[2019-08-28 15:26:47.142] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getAssetsFeign],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.math.BigDecimal com.common.bittrade.controller.TLegalCurrencyAccountController.getAssetsFeign(java.lang.Long)
[2019-08-28 15:26:47.143] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/conversionTotal],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.ConversionVo> com.common.bittrade.controller.TLegalCurrencyAccountController.totalConversion(com.core.web.constant.entity.LoginUser)
[2019-08-28 15:26:47.144] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 15:26:47.144] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 15:26:47.145] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 15:26:47.146] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 15:26:47.148] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 15:26:47.149] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 15:26:47.150] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 15:26:47.152] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 15:26:47.153] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 15:26:47.154] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 15:26:47.154] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 15:26:47.155] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 15:26:47.156] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 15:26:47.157] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 15:26:47.157] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 15:26:47.162] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/legalCurrency_coins],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.common.bittrade.controller.TLegalCurrencyCoinController.listLegalCurrencyCoins()
[2019-08-28 15:26:47.163] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 15:26:47.164] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 15:26:47.165] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 15:26:47.166] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 15:26:47.167] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 15:26:47.167] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 15:26:47.168] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 15:26:47.169] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 15:26:47.170] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 15:26:47.171] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 15:26:47.171] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 15:26:47.172] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 15:26:47.173] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 15:26:47.174] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 15:26:47.175] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 15:26:47.181] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/queryAccountRecord],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.RecordVO>> com.common.bittrade.controller.TLegalCurrencyRecordController.queryAccountRecord(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.AccountTypeDto)
[2019-08-28 15:26:47.182] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/queryType],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetRecordTypeVO>> com.common.bittrade.controller.TLegalCurrencyRecordController.queryTypeForFund()
[2019-08-28 15:26:47.183] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 15:26:47.184] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 15:26:47.185] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 15:26:47.187] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 15:26:47.187] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 15:26:47.188] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 15:26:47.189] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 15:26:47.190] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 15:26:47.190] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 15:26:47.191] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 15:26:47.192] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 15:26:47.193] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 15:26:47.194] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 15:26:47.195] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 15:26:47.196] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 15:26:47.201] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/rechargecoinlist],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO com.common.bittrade.controller.WCoinController.rechargecoinlist()
[2019-08-28 15:26:47.202] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/Withdrawcoinlist],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO com.common.bittrade.controller.WCoinController.withdrawcoinlist()
[2019-08-28 15:26:47.202] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/getList],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.model.WCoin>> com.common.bittrade.controller.WCoinController.getList()
[2019-08-28 15:26:47.204] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccount/detail],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetsVO>> com.common.bittrade.controller.WWalletAccountController.detail(com.core.web.constant.entity.LoginUser)
[2019-08-28 15:26:47.205] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccount/conversionTotal],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.ConversionVo> com.common.bittrade.controller.WWalletAccountController.totalConversion(com.core.web.constant.entity.LoginUser)
[2019-08-28 15:26:47.207] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryFundAccountRecord],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.RecordVO>> com.common.bittrade.controller.WWalletAccountRecordController.queryFundAccountRecord(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.AccountTypeDto)
[2019-08-28 15:26:47.208] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryCurrencies],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.model.WCoin>> com.common.bittrade.controller.WWalletAccountRecordController.queryCurrencies()
[2019-08-28 15:26:47.208] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryTypeForFund],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetRecordTypeVO>> com.common.bittrade.controller.WWalletAccountRecordController.queryTypeForFund()
[2019-08-28 15:26:47.213] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
[2019-08-28 15:26:47.215] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
[2019-08-28 15:26:47.216] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
[2019-08-28 15:26:47.222] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2019-08-28 15:26:47.223] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2019-08-28 15:26:47.322] [WARN ] - [DubboClientReconnectTimer-thread-1][ com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:171)] :  [DUBBO] client reconnect to localhost:20881 find error . url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=2232&register.ip=192.168.1.12&side=consumer&timestamp=1566977203705, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=2232&register.ip=192.168.1.12&side=consumer&timestamp=1566977203705) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:156)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	... 3 common frames omitted
[2019-08-28 15:26:48.964] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Exposing 2 endpoint(s) beneath base path '/actuator'
[2019-08-28 15:26:49.005] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2019-08-28 15:26:49.007] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2019-08-28 15:26:49.009] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2019-08-28 15:26:49.474] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'messageBrokerTaskScheduler'
[2019-08-28 15:26:49.607] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped URL path [/c2c/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
[2019-08-28 15:26:49.636] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'brokerChannelExecutor'
[2019-08-28 15:26:50.062] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[2019-08-28 15:26:50.702] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@67d86804: startup date [Wed Aug 28 15:26:30 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@13579834
[2019-08-28 15:26:50.811] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Detected @ExceptionHandler methods in globalExceptionHandler
[2019-08-28 15:26:51.299] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-28 15:26:51.299] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-28 15:26:53.513] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting beans in phase 0
[2019-08-28 15:26:53.514] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting beans in phase 2147483647
[2019-08-28 15:26:53.514] [INFO ] - [main][ springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:151)] : Context refreshed
[2019-08-28 15:26:53.566] [INFO ] - [main][ springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:154)] : Found 1 custom documentation plugin(s)
[2019-08-28 15:26:53.653] [INFO ] - [main][ springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)] : Scanning for api listing references
[2019-08-28 15:26:54.251] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting...
[2019-08-28 15:26:54.252] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
[2019-08-28 15:26:54.253] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Started.
[2019-08-28 15:26:54.275] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Started AdvertInfoTester in 26.29 seconds (JVM running for 28.946)
[2019-08-28 15:27:01.483] [INFO ] - [Thread-2][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$2.run(AwaitingNonWebApplicationListener.java:83)] :  [Dubbo] Current Spring Boot Application is about to shutdown...
[2019-08-28 15:27:01.486] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:64)] :  [DUBBO] Close all registries [], dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 15:27:01.487] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(DubboProtocol.java:438)] :  [DUBBO] Close dubbo connect: 192.168.1.12:0-->localhost/127.0.0.1:20881, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 15:27:01.487] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:63)] :  [DUBBO] Destroy reference: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&default.check=false&default.timeout=5000&dubbo=2.6.2&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=2232&register.ip=192.168.1.12&side=consumer&timestamp=1566977203705, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 15:27:01.617] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:349)] : Initializing Eureka in region us-east-1
[2019-08-28 15:27:01.929] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70)] : Using JSON encoding codec LegacyJacksonJson
[2019-08-28 15:27:01.930] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71)] : Using JSON decoding codec LegacyJacksonJson
[2019-08-28 15:27:02.236] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80)] : Using XML encoding codec XStreamXml
[2019-08-28 15:27:02.236] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81)] : Using XML decoding codec XStreamXml
[2019-08-28 15:27:02.352] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:63)] :  [DUBBO] Destroy reference: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyService?application=service-consumer&default.check=false&default.timeout=5000&dubbo=2.6.2&interface=com.bittrade.currency.api.service.ITCurrencyService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getCurrencies,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,findAllLegalCurrency,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,findUsableCurrency,updateById,pageMaps,listByMap,getByPK&pid=2232&register.ip=192.168.1.12&side=consumer&timestamp=1566977205550, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 15:27:02.764] [INFO ] - [Thread-8][ com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] : Resolving eureka endpoints via configuration
[2019-08-28 15:27:02.800] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958)] : Disable delta property : false
[2019-08-28 15:27:02.800] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:959)] : Single vip registry refresh property : null
[2019-08-28 15:27:02.800] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960)] : Force full registry fetch : false
[2019-08-28 15:27:02.800] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:961)] : Application is null : false
[2019-08-28 15:27:02.801] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:962)] : Registered Applications size is zero : true
[2019-08-28 15:27:02.801] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:964)] : Application version is -1: true
[2019-08-28 15:27:02.801] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1047)] : Getting all instance registry info from the eureka server
[2019-08-28 15:27:04.950] [ERROR] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83)] : Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$93599bfe.CGLIB$eurekaClient$0(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$93599bfe$$FastClassBySpringCGLIB$$934da048.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:365)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$93599bfe.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:583)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1246)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:535)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:193)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 65 common frames omitted
[2019-08-28 15:27:04.953] [WARN ] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:130)] : Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2019-08-28 15:27:04.954] [ERROR] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:972)] : DiscoveryClient_BITTRADE-C2C/192.168.1.12:-1:bittrade-c2c:@project.version@ - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$93599bfe.CGLIB$eurekaClient$0(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$93599bfe$$FastClassBySpringCGLIB$$934da048.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:365)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$93599bfe.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:583)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1246)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:535)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:193)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
[2019-08-28 15:27:04.955] [WARN ] - [Thread-8][ com.netflix.discovery.DiscoveryClient$1.get(DiscoveryClient.java:290)] : Using default backup registry implementation which does not do anything.
[2019-08-28 15:27:04.959] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1264)] : Starting heartbeat executor: renew interval is: 30
[2019-08-28 15:27:04.967] [INFO ] - [Thread-8][ com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60)] : InstanceInfoReplicator onDemand update allowed rate per min is 4
[2019-08-28 15:27:04.979] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:449)] : Discovery Client initialized at timestamp 1566977224975 with initial instances count: 0
[2019-08-28 15:27:05.001] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:888)] : Shutting down DiscoveryClient ...
[2019-08-28 15:27:08.002] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:922)] : Unregistering ...
[2019-08-28 15:27:10.022] [ERROR] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83)] : Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:923)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:901)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:246)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:494)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 46 common frames omitted
[2019-08-28 15:27:10.024] [WARN ] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:130)] : Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2019-08-28 15:27:10.024] [ERROR] - [Thread-8][ com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:926)] : DiscoveryClient_BITTRADE-C2C/192.168.1.12:-1:bittrade-c2c:@project.version@ - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:923)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:901)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:246)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:494)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
[2019-08-28 15:27:10.050] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:911)] : Completed shut down of DiscoveryClient
[2019-08-28 15:27:10.061] [INFO ] - [Thread-8][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:1948)] : {dataSource-1} closing ...
[2019-08-28 15:27:10.068] [INFO ] - [Thread-8][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:2020)] : {dataSource-1} closed
[2019-08-28 15:28:36.868] [INFO ] - [main][?#?:?] : using logger: com.alibaba.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[2019-08-28 15:28:36.879] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-28 15:28:36.886] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {}
[2019-08-28 15:28:37.321] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@669253b7: startup date [Wed Aug 28 15:28:37 CST 2019]; root of context hierarchy
[2019-08-28 15:28:37.858] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-28 15:28:37.949] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$cc2a0566] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:28:38.158] [INFO ] - [pool-1-thread-1][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$1.run(AwaitingNonWebApplicationListener.java:61)] :  [Dubbo] Current Spring Boot Application is await...
[2019-08-28 15:28:38.721] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-28 15:28:38.723] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {dubbo.application.id=service-consumer, dubbo.application.name=service-consumer, dubbo.consumer.check=false, dubbo.consumer.timeout=5000, dubbo.monitor=, dubbo.protocol.id=dubbo, dubbo.protocol.name=dubbo, dubbo.protocol.port=20884, dubbo.provider.timeout=5000, dubbo.registry.address=N/A, dubbo.registry.check=false, dubbo.registry.id=my-registry, dubbo.registry.protocol=zookeeper, dubbo.scan=}
[2019-08-28 15:28:38.797] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : The following profiles are active: common,data,eureka,dubbo_provider,dubbo_consumer
[2019-08-28 15:28:38.807] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Refreshing org.springframework.web.context.support.GenericWebApplicationContext@7bebcd65: startup date [Wed Aug 28 15:28:38 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@669253b7
[2019-08-28 15:28:40.492] [WARN ] - [main][ org.mybatis.logging.Logger.warn(Logger.java:44)] : No MyBatis mapper was found in '[com.baomidou.cloud.service.*.mapper*]' package. Please check your configuration.
[2019-08-28 15:28:41.483] [INFO ] - [main][ org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:172)] : Multiple Spring Data modules found, entering strict repository configuration mode!
[2019-08-28 15:28:41.905] [WARN ] - [main][ com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans(ServiceAnnotationBeanPostProcessor.java:155)] :  [DUBBO] No Spring Bean annotating Dubbo's @Service was found under package[com.bittrade.c2c], dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 15:28:42.381] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : BeanFactory id=61352edb-e99a-3c04-9bd9-f50ca066a043
[2019-08-28 15:28:42.604] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-28 15:28:42.934] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:28:42.955] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionProperties' of type [com.core.framework.props.TransactionProperties$$EnhancerBySpringCGLIB$$c158c50f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:28:42.981] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$c9bbf7db] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:28:42.988] [INFO ] - [main][ com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource(DruidDataSourceAutoConfigure.java:56)] : Init DruidDataSource
[2019-08-28 15:28:43.132] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:28:43.320] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003)] : {dataSource-1} inited
[2019-08-28 15:28:43.321] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:28:43.358] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:28:43.372] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$$EnhancerBySpringCGLIB$$4483fd73] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:28:43.397] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:28:43.405] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:28:43.416] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration$$EnhancerBySpringCGLIB$$5d109ad8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:28:43.460] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:28:43.462] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionConfig' of type [com.core.framework.config.TransactionConfig$$EnhancerBySpringCGLIB$$b6147fb4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:28:43.500] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'defaultPointcutAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:28:43.526] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0100269] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:28:43.907] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' of type [com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration$$EnhancerBySpringCGLIB$$bf11a7db] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:28:43.929] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:28:43.939] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:28:43.942] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:28:43.946] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:28:43.950] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:28:44.023] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$cc2a0566] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:29:45.048] [INFO ] - [main][?#?:?] : using logger: com.alibaba.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[2019-08-28 15:29:45.058] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-28 15:29:45.064] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {}
[2019-08-28 15:29:45.509] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@41c07648: startup date [Wed Aug 28 15:29:45 CST 2019]; root of context hierarchy
[2019-08-28 15:29:46.045] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-28 15:29:46.131] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$60a82d3e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:29:46.336] [INFO ] - [pool-1-thread-1][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$1.run(AwaitingNonWebApplicationListener.java:61)] :  [Dubbo] Current Spring Boot Application is await...
[2019-08-28 15:29:46.875] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-28 15:29:46.877] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {dubbo.application.id=service-consumer, dubbo.application.name=service-consumer, dubbo.consumer.check=false, dubbo.consumer.timeout=5000, dubbo.monitor=, dubbo.protocol.id=dubbo, dubbo.protocol.name=dubbo, dubbo.protocol.port=20884, dubbo.provider.timeout=5000, dubbo.registry.address=N/A, dubbo.registry.check=false, dubbo.registry.id=my-registry, dubbo.registry.protocol=zookeeper, dubbo.scan=}
[2019-08-28 15:29:46.952] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : The following profiles are active: common,data,eureka,dubbo_provider,dubbo_consumer
[2019-08-28 15:29:46.962] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Refreshing org.springframework.web.context.support.GenericWebApplicationContext@ad3324b: startup date [Wed Aug 28 15:29:46 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@41c07648
[2019-08-28 15:29:48.766] [WARN ] - [main][ org.mybatis.logging.Logger.warn(Logger.java:44)] : No MyBatis mapper was found in '[com.baomidou.cloud.service.*.mapper*]' package. Please check your configuration.
[2019-08-28 15:29:49.755] [INFO ] - [main][ org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:172)] : Multiple Spring Data modules found, entering strict repository configuration mode!
[2019-08-28 15:29:50.211] [WARN ] - [main][ com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans(ServiceAnnotationBeanPostProcessor.java:155)] :  [DUBBO] No Spring Bean annotating Dubbo's @Service was found under package[com.bittrade.c2c], dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 15:29:50.702] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : BeanFactory id=61352edb-e99a-3c04-9bd9-f50ca066a043
[2019-08-28 15:29:50.946] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-28 15:29:51.258] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:29:51.271] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionProperties' of type [com.core.framework.props.TransactionProperties$$EnhancerBySpringCGLIB$$55d6ece7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:29:51.285] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$5e3a1fb3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:29:51.291] [INFO ] - [main][ com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource(DruidDataSourceAutoConfigure.java:56)] : Init DruidDataSource
[2019-08-28 15:29:51.436] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:29:51.613] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003)] : {dataSource-1} inited
[2019-08-28 15:29:51.615] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:29:51.650] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:29:51.665] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$$EnhancerBySpringCGLIB$$d902254b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:29:51.685] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:29:51.694] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:29:51.704] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration$$EnhancerBySpringCGLIB$$f18ec2b0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:29:51.754] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:29:51.756] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionConfig' of type [com.core.framework.config.TransactionConfig$$EnhancerBySpringCGLIB$$4a92a78c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:29:51.787] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'defaultPointcutAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:29:51.812] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$448e2a41] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:29:52.179] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' of type [com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration$$EnhancerBySpringCGLIB$$538fcfb3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:29:52.198] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:29:52.209] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:29:52.214] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:29:52.217] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:29:52.221] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:29:52.298] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$60a82d3e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:29:57.520] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'clientInboundChannelExecutor'
[2019-08-28 15:29:57.555] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'clientOutboundChannelExecutor'
[2019-08-28 15:29:58.135] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService
[2019-08-28 15:29:58.447] [INFO ] - [main][ com.core.framework.config.redis.JedisClusterConfig.getJedisCluster(JedisClusterConfig.java:35)] : 进入redis集群初始化方法：访问集群地址为：[154.222.138.5:7000, 154.222.138.5:7001, 154.222.138.5:7002, 154.222.138.5:7003, 154.222.138.5:7004, 154.222.138.5:7005]
[2019-08-28 15:30:00.265] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyTradeServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 15:30:01.907] [WARN ] - [main][ com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:98)] :  [DUBBO] Failed to start NettyClient HAHE/192.168.1.12 connect to the server localhost/127.0.0.1:20881 (check == false, ignore and retry later!), cause: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=5908&register.ip=192.168.1.12&side=consumer&timestamp=1566977400266) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=5908&register.ip=192.168.1.12&side=consumer&timestamp=1566977400266) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:89)
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.<init>(NettyClient.java:59)
	at com.alibaba.dubbo.remoting.transport.netty.NettyTransporter.connect(NettyTransporter.java:37)
	at com.alibaba.dubbo.remoting.Transporter$Adaptive.connect(Transporter$Adaptive.java)
	at com.alibaba.dubbo.remoting.Transporters.connect(Transporters.java:75)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchanger.connect(HeaderExchanger.java:39)
	at com.alibaba.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:109)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.initClient(DubboProtocol.java:409)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getSharedClient(DubboProtocol.java:377)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getClients(DubboProtocol.java:354)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.refer(DubboProtocol.java:336)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:65)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:67)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:108)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:394)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:333)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:163)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:66)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceFieldElement.inject(ReferenceAnnotationBeanPostProcessor.java:367)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.postProcessPropertyValues(ReferenceAnnotationBeanPostProcessor.java:92)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:759)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:548)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:386)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:89)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:41)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:541)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:763)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:463)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:209)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-08-28 15:30:02.076] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 15:30:03.242] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-28 15:30:03.243] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-28 15:30:03.278] [INFO ] - [main][ com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281)] : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@3dc14f80
[2019-08-28 15:30:03.602] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/sendMessage],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.sendMessage(com.bittrade.c2c.vo.SendVo)
[2019-08-28 15:30:03.605] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/pullUnreadMessage],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.pullMessage(java.lang.Long)
[2019-08-28 15:30:03.606] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/sendOrder],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.pullOrderDetail(com.bittrade.c2c.vo.SendOrderVo)
[2019-08-28 15:30:03.621] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/publish_advert],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.publishAdvert(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.TAdvertInfoDTO)
[2019-08-28 15:30:03.622] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts/details/{advert_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.getAdvertDetails(java.lang.Long)
[2019-08-28 15:30:03.623] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/revoke/{advert_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.revokeAdverts(java.lang.Long,com.core.web.constant.entity.LoginUser)
[2019-08-28 15:30:03.624] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/place_advert_order/{advert_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.placeAdvertOrder(java.lang.Long,java.math.BigDecimal,java.lang.String,com.core.web.constant.entity.LoginUser)
[2019-08-28 15:30:03.625] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts/users/{coin_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.listAdvertsUsers(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.AdvertUserVO>,java.lang.Long,com.core.web.constant.entity.LoginUser)
[2019-08-28 15:30:03.627] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/suspend],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.suspendAdverts(java.util.List<java.lang.Long>,com.core.web.constant.entity.LoginUser)
[2019-08-28 15:30:03.628] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.listAdverts(com.core.common.DTO.PageDTO<com.bittrade.pojo.dto.TAdvertInfoDTO>,com.bittrade.pojo.vo.QueryAdvertVO,com.core.web.constant.entity.LoginUser)
[2019-08-28 15:30:03.629] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 15:30:03.630] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 15:30:03.631] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 15:30:03.632] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 15:30:03.633] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 15:30:03.634] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 15:30:03.635] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 15:30:03.636] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 15:30:03.636] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 15:30:03.637] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 15:30:03.638] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 15:30:03.639] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 15:30:03.640] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 15:30:03.641] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 15:30:03.641] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 15:30:03.648] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/details/{order_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.getAdvertOrderDetails(java.lang.Long)
[2019-08-28 15:30:03.649] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/already_cancel],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.alreadyCancelAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 15:30:03.650] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/click_already_receipt/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.clickAlreadyReceipt(java.lang.Long)
[2019-08-28 15:30:03.651] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/already_complete],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.alreadyCompleteAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 15:30:03.652] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/cancel/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.cancelAdvertOrder(java.lang.Long)
[2019-08-28 15:30:03.653] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/no_complete],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.noCompleteAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 15:30:03.654] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/click_already_paid/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.clickAlreadyPaid(java.lang.Long)
[2019-08-28 15:30:03.655] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 15:30:03.656] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 15:30:03.656] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 15:30:03.657] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 15:30:03.658] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 15:30:03.659] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 15:30:03.660] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 15:30:03.662] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 15:30:03.663] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 15:30:03.664] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 15:30:03.665] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 15:30:03.665] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 15:30:03.666] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 15:30:03.667] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 15:30:03.668] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 15:30:03.674] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/detail],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetsVO>> com.common.bittrade.controller.TLegalCurrencyAccountController.detail(com.core.web.constant.entity.LoginUser)
[2019-08-28 15:30:03.675] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/availableBalanceFeign],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.lang.String com.common.bittrade.controller.TLegalCurrencyAccountController.availableBalanceFeign(java.lang.Long,java.lang.String)
[2019-08-28 15:30:03.676] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getAssetsFeign],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.math.BigDecimal com.common.bittrade.controller.TLegalCurrencyAccountController.getAssetsFeign(java.lang.Long)
[2019-08-28 15:30:03.677] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/conversionTotal],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.ConversionVo> com.common.bittrade.controller.TLegalCurrencyAccountController.totalConversion(com.core.web.constant.entity.LoginUser)
[2019-08-28 15:30:03.678] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 15:30:03.679] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 15:30:03.680] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 15:30:03.681] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 15:30:03.683] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 15:30:03.683] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 15:30:03.684] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 15:30:03.685] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 15:30:03.686] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 15:30:03.686] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 15:30:03.687] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 15:30:03.688] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 15:30:03.688] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 15:30:03.689] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 15:30:03.690] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 15:30:03.695] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/legalCurrency_coins],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.common.bittrade.controller.TLegalCurrencyCoinController.listLegalCurrencyCoins()
[2019-08-28 15:30:03.696] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 15:30:03.697] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 15:30:03.698] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 15:30:03.699] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 15:30:03.700] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 15:30:03.700] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 15:30:03.701] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 15:30:03.702] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 15:30:03.703] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 15:30:03.704] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 15:30:03.704] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 15:30:03.705] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 15:30:03.706] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 15:30:03.707] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 15:30:03.708] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 15:30:03.715] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/queryAccountRecord],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.RecordVO>> com.common.bittrade.controller.TLegalCurrencyRecordController.queryAccountRecord(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.AccountTypeDto)
[2019-08-28 15:30:03.716] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/queryType],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetRecordTypeVO>> com.common.bittrade.controller.TLegalCurrencyRecordController.queryTypeForFund()
[2019-08-28 15:30:03.717] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 15:30:03.718] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 15:30:03.719] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 15:30:03.719] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 15:30:03.720] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 15:30:03.721] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 15:30:03.722] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 15:30:03.722] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 15:30:03.723] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 15:30:03.724] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 15:30:03.724] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 15:30:03.726] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 15:30:03.727] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 15:30:03.728] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 15:30:03.728] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 15:30:03.734] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/getList],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.model.WCoin>> com.common.bittrade.controller.WCoinController.getList()
[2019-08-28 15:30:03.734] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/rechargecoinlist],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO com.common.bittrade.controller.WCoinController.rechargecoinlist()
[2019-08-28 15:30:03.735] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/Withdrawcoinlist],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO com.common.bittrade.controller.WCoinController.withdrawcoinlist()
[2019-08-28 15:30:03.737] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccount/detail],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetsVO>> com.common.bittrade.controller.WWalletAccountController.detail(com.core.web.constant.entity.LoginUser)
[2019-08-28 15:30:03.739] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccount/conversionTotal],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.ConversionVo> com.common.bittrade.controller.WWalletAccountController.totalConversion(com.core.web.constant.entity.LoginUser)
[2019-08-28 15:30:03.741] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryFundAccountRecord],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.RecordVO>> com.common.bittrade.controller.WWalletAccountRecordController.queryFundAccountRecord(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.AccountTypeDto)
[2019-08-28 15:30:03.742] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryCurrencies],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.model.WCoin>> com.common.bittrade.controller.WWalletAccountRecordController.queryCurrencies()
[2019-08-28 15:30:03.743] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryTypeForFund],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetRecordTypeVO>> com.common.bittrade.controller.WWalletAccountRecordController.queryTypeForFund()
[2019-08-28 15:30:03.748] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
[2019-08-28 15:30:03.750] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
[2019-08-28 15:30:03.750] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
[2019-08-28 15:30:03.756] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2019-08-28 15:30:03.757] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2019-08-28 15:30:03.852] [WARN ] - [DubboClientReconnectTimer-thread-1][ com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:171)] :  [DUBBO] client reconnect to localhost:20881 find error . url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=5908&register.ip=192.168.1.12&side=consumer&timestamp=1566977400266, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=5908&register.ip=192.168.1.12&side=consumer&timestamp=1566977400266) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:156)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	... 3 common frames omitted
[2019-08-28 15:30:05.463] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Exposing 2 endpoint(s) beneath base path '/actuator'
[2019-08-28 15:30:05.507] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2019-08-28 15:30:05.509] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2019-08-28 15:30:05.510] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2019-08-28 15:30:06.006] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'messageBrokerTaskScheduler'
[2019-08-28 15:30:06.142] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped URL path [/c2c/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
[2019-08-28 15:30:06.173] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'brokerChannelExecutor'
[2019-08-28 15:30:06.619] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[2019-08-28 15:30:07.219] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@ad3324b: startup date [Wed Aug 28 15:29:46 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@41c07648
[2019-08-28 15:30:07.331] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Detected @ExceptionHandler methods in globalExceptionHandler
[2019-08-28 15:30:07.816] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-28 15:30:07.816] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-28 15:30:09.838] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting beans in phase 0
[2019-08-28 15:30:09.838] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting beans in phase 2147483647
[2019-08-28 15:30:09.838] [INFO ] - [main][ springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:151)] : Context refreshed
[2019-08-28 15:30:09.890] [INFO ] - [main][ springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:154)] : Found 1 custom documentation plugin(s)
[2019-08-28 15:30:09.976] [INFO ] - [main][ springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)] : Scanning for api listing references
[2019-08-28 15:30:10.564] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting...
[2019-08-28 15:30:10.564] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
[2019-08-28 15:30:10.566] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Started.
[2019-08-28 15:30:10.588] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Started AdvertInfoTester in 25.909 seconds (JVM running for 28.477)
[2019-08-28 15:32:51.858] [INFO ] - [main][?#?:?] : using logger: com.alibaba.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[2019-08-28 15:32:51.869] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-28 15:32:51.875] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {}
[2019-08-28 15:32:52.261] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@ec2bf82: startup date [Wed Aug 28 15:32:52 CST 2019]; root of context hierarchy
[2019-08-28 15:32:52.863] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-28 15:32:52.959] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3b62ea47] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:32:53.189] [INFO ] - [pool-1-thread-1][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$1.run(AwaitingNonWebApplicationListener.java:61)] :  [Dubbo] Current Spring Boot Application is await...
[2019-08-28 15:32:53.757] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-28 15:32:53.759] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {dubbo.application.id=service-consumer, dubbo.application.name=service-consumer, dubbo.consumer.check=false, dubbo.consumer.timeout=5000, dubbo.monitor=, dubbo.protocol.id=dubbo, dubbo.protocol.name=dubbo, dubbo.protocol.port=20884, dubbo.provider.timeout=5000, dubbo.registry.address=N/A, dubbo.registry.check=false, dubbo.registry.id=my-registry, dubbo.registry.protocol=zookeeper, dubbo.scan=}
[2019-08-28 15:32:53.821] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : The following profiles are active: common,data,eureka,dubbo_provider,dubbo_consumer
[2019-08-28 15:32:53.832] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Refreshing org.springframework.web.context.support.GenericWebApplicationContext@165e389b: startup date [Wed Aug 28 15:32:53 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@ec2bf82
[2019-08-28 15:32:55.540] [WARN ] - [main][ org.mybatis.logging.Logger.warn(Logger.java:44)] : No MyBatis mapper was found in '[com.baomidou.cloud.service.*.mapper*]' package. Please check your configuration.
[2019-08-28 15:32:56.475] [INFO ] - [main][ org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:172)] : Multiple Spring Data modules found, entering strict repository configuration mode!
[2019-08-28 15:32:57.086] [WARN ] - [main][ com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans(ServiceAnnotationBeanPostProcessor.java:155)] :  [DUBBO] No Spring Bean annotating Dubbo's @Service was found under package[com.bittrade.c2c], dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 15:32:57.616] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : BeanFactory id=61352edb-e99a-3c04-9bd9-f50ca066a043
[2019-08-28 15:32:57.859] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-28 15:32:58.202] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:32:58.216] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionProperties' of type [com.core.framework.props.TransactionProperties$$EnhancerBySpringCGLIB$$3091a9f0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:32:58.234] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$38f4dcbc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:32:58.240] [INFO ] - [main][ com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource(DruidDataSourceAutoConfigure.java:56)] : Init DruidDataSource
[2019-08-28 15:32:58.381] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:32:58.567] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003)] : {dataSource-1} inited
[2019-08-28 15:32:58.568] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:32:58.607] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:32:58.621] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$$EnhancerBySpringCGLIB$$b3bce254] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:32:58.641] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:32:58.648] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:32:58.658] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration$$EnhancerBySpringCGLIB$$cc497fb9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:32:58.702] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:32:58.703] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionConfig' of type [com.core.framework.config.TransactionConfig$$EnhancerBySpringCGLIB$$254d6495] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:32:58.732] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'defaultPointcutAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:32:58.763] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1f48e74a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:32:59.154] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' of type [com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration$$EnhancerBySpringCGLIB$$2e4a8cbc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:32:59.174] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:32:59.184] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:32:59.188] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:32:59.191] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:32:59.195] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:32:59.287] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3b62ea47] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 15:33:04.854] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'clientInboundChannelExecutor'
[2019-08-28 15:33:04.888] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'clientOutboundChannelExecutor'
[2019-08-28 15:33:05.413] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService
[2019-08-28 15:33:05.712] [INFO ] - [main][ com.core.framework.config.redis.JedisClusterConfig.getJedisCluster(JedisClusterConfig.java:35)] : 进入redis集群初始化方法：访问集群地址为：[154.222.138.5:7000, 154.222.138.5:7001, 154.222.138.5:7002, 154.222.138.5:7003, 154.222.138.5:7004, 154.222.138.5:7005]
[2019-08-28 15:33:07.302] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyTradeServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 15:33:08.975] [WARN ] - [main][ com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:98)] :  [DUBBO] Failed to start NettyClient HAHE/192.168.1.12 connect to the server localhost/127.0.0.1:20881 (check == false, ignore and retry later!), cause: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=3608&register.ip=192.168.1.12&side=consumer&timestamp=1566977587303) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=3608&register.ip=192.168.1.12&side=consumer&timestamp=1566977587303) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:89)
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.<init>(NettyClient.java:59)
	at com.alibaba.dubbo.remoting.transport.netty.NettyTransporter.connect(NettyTransporter.java:37)
	at com.alibaba.dubbo.remoting.Transporter$Adaptive.connect(Transporter$Adaptive.java)
	at com.alibaba.dubbo.remoting.Transporters.connect(Transporters.java:75)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchanger.connect(HeaderExchanger.java:39)
	at com.alibaba.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:109)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.initClient(DubboProtocol.java:409)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getSharedClient(DubboProtocol.java:377)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getClients(DubboProtocol.java:354)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.refer(DubboProtocol.java:336)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:67)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:108)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:65)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:394)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:333)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:163)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:66)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceFieldElement.inject(ReferenceAnnotationBeanPostProcessor.java:367)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.postProcessPropertyValues(ReferenceAnnotationBeanPostProcessor.java:92)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:759)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:548)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:386)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:89)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:41)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:541)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:763)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:463)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:209)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-08-28 15:33:09.168] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 15:33:10.355] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-28 15:33:10.356] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-28 15:33:10.395] [INFO ] - [main][ com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281)] : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@eb1e868
[2019-08-28 15:33:10.587] [WARN ] - [DubboClientReconnectTimer-thread-1][ com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:171)] :  [DUBBO] client reconnect to localhost:20881 find error . url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=3608&register.ip=192.168.1.12&side=consumer&timestamp=1566977587303, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=3608&register.ip=192.168.1.12&side=consumer&timestamp=1566977587303) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:156)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	... 3 common frames omitted
[2019-08-28 15:33:10.702] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/sendMessage],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.sendMessage(com.bittrade.c2c.vo.SendVo)
[2019-08-28 15:33:10.704] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/sendOrder],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.pullOrderDetail(com.bittrade.c2c.vo.SendOrderVo)
[2019-08-28 15:33:10.705] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/pullUnreadMessage],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.pullMessage(java.lang.Long)
[2019-08-28 15:33:10.718] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/publish_advert],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.publishAdvert(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.TAdvertInfoDTO)
[2019-08-28 15:33:10.719] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.listAdverts(com.core.common.DTO.PageDTO<com.bittrade.pojo.dto.TAdvertInfoDTO>,com.bittrade.pojo.vo.QueryAdvertVO,com.core.web.constant.entity.LoginUser)
[2019-08-28 15:33:10.721] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/place_advert_order/{advert_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.placeAdvertOrder(java.lang.Long,java.math.BigDecimal,java.lang.String,com.core.web.constant.entity.LoginUser)
[2019-08-28 15:33:10.722] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts/details/{advert_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.getAdvertDetails(java.lang.Long)
[2019-08-28 15:33:10.722] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/revoke/{advert_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.revokeAdverts(java.lang.Long,com.core.web.constant.entity.LoginUser)
[2019-08-28 15:33:10.723] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/suspend],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.suspendAdverts(java.util.List<java.lang.Long>,com.core.web.constant.entity.LoginUser)
[2019-08-28 15:33:10.724] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts/users/{coin_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.listAdvertsUsers(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.AdvertUserVO>,java.lang.Long,com.core.web.constant.entity.LoginUser)
[2019-08-28 15:33:10.725] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 15:33:10.726] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 15:33:10.727] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 15:33:10.728] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 15:33:10.729] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 15:33:10.730] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 15:33:10.731] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 15:33:10.732] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 15:33:10.733] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 15:33:10.734] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 15:33:10.734] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 15:33:10.735] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 15:33:10.736] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 15:33:10.737] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 15:33:10.738] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 15:33:10.746] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/details/{order_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.getAdvertOrderDetails(java.lang.Long)
[2019-08-28 15:33:10.747] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/click_already_paid/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.clickAlreadyPaid(java.lang.Long)
[2019-08-28 15:33:10.748] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/already_complete],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.alreadyCompleteAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 15:33:10.748] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/cancel/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.cancelAdvertOrder(java.lang.Long)
[2019-08-28 15:33:10.749] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/no_complete],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.noCompleteAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 15:33:10.750] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/click_already_receipt/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.clickAlreadyReceipt(java.lang.Long)
[2019-08-28 15:33:10.751] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/already_cancel],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.alreadyCancelAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 15:33:10.752] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 15:33:10.753] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 15:33:10.754] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 15:33:10.754] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 15:33:10.755] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 15:33:10.756] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 15:33:10.757] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 15:33:10.758] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 15:33:10.758] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 15:33:10.759] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 15:33:10.760] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 15:33:10.761] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 15:33:10.761] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 15:33:10.762] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 15:33:10.763] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 15:33:10.769] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/detail],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetsVO>> com.common.bittrade.controller.TLegalCurrencyAccountController.detail(com.core.web.constant.entity.LoginUser)
[2019-08-28 15:33:10.770] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/conversionTotal],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.ConversionVo> com.common.bittrade.controller.TLegalCurrencyAccountController.totalConversion(com.core.web.constant.entity.LoginUser)
[2019-08-28 15:33:10.771] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getAssetsFeign],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.math.BigDecimal com.common.bittrade.controller.TLegalCurrencyAccountController.getAssetsFeign(java.lang.Long)
[2019-08-28 15:33:10.772] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/availableBalanceFeign],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.lang.String com.common.bittrade.controller.TLegalCurrencyAccountController.availableBalanceFeign(java.lang.Long,java.lang.String)
[2019-08-28 15:33:10.773] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 15:33:10.773] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 15:33:10.774] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 15:33:10.775] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 15:33:10.776] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 15:33:10.777] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 15:33:10.778] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 15:33:10.778] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 15:33:10.779] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 15:33:10.780] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 15:33:10.780] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 15:33:10.781] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 15:33:10.782] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 15:33:10.783] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 15:33:10.784] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 15:33:10.789] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/legalCurrency_coins],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.common.bittrade.controller.TLegalCurrencyCoinController.listLegalCurrencyCoins()
[2019-08-28 15:33:10.790] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 15:33:10.791] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 15:33:10.791] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 15:33:10.792] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 15:33:10.793] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 15:33:10.794] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 15:33:10.795] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 15:33:10.795] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 15:33:10.796] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 15:33:10.797] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 15:33:10.798] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 15:33:10.798] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 15:33:10.799] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 15:33:10.800] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 15:33:10.801] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 15:33:10.806] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/queryType],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetRecordTypeVO>> com.common.bittrade.controller.TLegalCurrencyRecordController.queryTypeForFund()
[2019-08-28 15:33:10.806] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/queryAccountRecord],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.RecordVO>> com.common.bittrade.controller.TLegalCurrencyRecordController.queryAccountRecord(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.AccountTypeDto)
[2019-08-28 15:33:10.807] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 15:33:10.808] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 15:33:10.809] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 15:33:10.810] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 15:33:10.810] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 15:33:10.811] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 15:33:10.812] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 15:33:10.813] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 15:33:10.814] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 15:33:10.815] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 15:33:10.816] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 15:33:10.817] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 15:33:10.818] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 15:33:10.818] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 15:33:10.819] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 15:33:10.824] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/Withdrawcoinlist],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO com.common.bittrade.controller.WCoinController.withdrawcoinlist()
[2019-08-28 15:33:10.825] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/rechargecoinlist],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO com.common.bittrade.controller.WCoinController.rechargecoinlist()
[2019-08-28 15:33:10.826] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/getList],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.model.WCoin>> com.common.bittrade.controller.WCoinController.getList()
[2019-08-28 15:33:10.829] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccount/detail],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetsVO>> com.common.bittrade.controller.WWalletAccountController.detail(com.core.web.constant.entity.LoginUser)
[2019-08-28 15:33:10.829] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccount/conversionTotal],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.ConversionVo> com.common.bittrade.controller.WWalletAccountController.totalConversion(com.core.web.constant.entity.LoginUser)
[2019-08-28 15:33:10.831] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryTypeForFund],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetRecordTypeVO>> com.common.bittrade.controller.WWalletAccountRecordController.queryTypeForFund()
[2019-08-28 15:33:10.832] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryCurrencies],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.model.WCoin>> com.common.bittrade.controller.WWalletAccountRecordController.queryCurrencies()
[2019-08-28 15:33:10.833] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryFundAccountRecord],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.RecordVO>> com.common.bittrade.controller.WWalletAccountRecordController.queryFundAccountRecord(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.AccountTypeDto)
[2019-08-28 15:33:10.838] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
[2019-08-28 15:33:10.839] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
[2019-08-28 15:33:10.841] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
[2019-08-28 15:33:10.848] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2019-08-28 15:33:10.849] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2019-08-28 15:33:12.543] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Exposing 2 endpoint(s) beneath base path '/actuator'
[2019-08-28 15:33:12.582] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2019-08-28 15:33:12.584] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2019-08-28 15:33:12.585] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2019-08-28 15:33:13.039] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'messageBrokerTaskScheduler'
[2019-08-28 15:33:13.182] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped URL path [/c2c/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
[2019-08-28 15:33:13.215] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'brokerChannelExecutor'
[2019-08-28 15:33:13.685] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[2019-08-28 15:33:14.318] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@165e389b: startup date [Wed Aug 28 15:32:53 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@ec2bf82
[2019-08-28 15:33:14.432] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Detected @ExceptionHandler methods in globalExceptionHandler
[2019-08-28 15:33:14.899] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-28 15:33:14.899] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-28 15:33:16.841] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting beans in phase 0
[2019-08-28 15:33:16.841] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting beans in phase 2147483647
[2019-08-28 15:33:16.842] [INFO ] - [main][ springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:151)] : Context refreshed
[2019-08-28 15:33:16.893] [INFO ] - [main][ springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:154)] : Found 1 custom documentation plugin(s)
[2019-08-28 15:33:16.971] [INFO ] - [main][ springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)] : Scanning for api listing references
[2019-08-28 15:33:17.575] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting...
[2019-08-28 15:33:17.576] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
[2019-08-28 15:33:17.577] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Started.
[2019-08-28 15:33:17.601] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Started AdvertInfoTester in 26.115 seconds (JVM running for 28.73)
[2019-08-28 15:34:13.209] [INFO ] - [MessageBroker-1][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
[2019-08-28 15:34:42.265] [INFO ] - [Thread-2][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$2.run(AwaitingNonWebApplicationListener.java:83)] :  [Dubbo] Current Spring Boot Application is about to shutdown...
[2019-08-28 15:34:42.269] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:64)] :  [DUBBO] Close all registries [], dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 15:34:42.270] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(DubboProtocol.java:438)] :  [DUBBO] Close dubbo connect: 192.168.1.12:0-->localhost/127.0.0.1:20881, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 15:34:42.270] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:63)] :  [DUBBO] Destroy reference: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyService?application=service-consumer&default.check=false&default.timeout=5000&dubbo=2.6.2&interface=com.bittrade.currency.api.service.ITCurrencyService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getCurrencies,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,findAllLegalCurrency,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,findUsableCurrency,updateById,pageMaps,listByMap,getByPK&pid=3608&register.ip=192.168.1.12&side=consumer&timestamp=1566977589169, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 15:34:42.279] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:63)] :  [DUBBO] Destroy reference: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&default.check=false&default.timeout=5000&dubbo=2.6.2&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=3608&register.ip=192.168.1.12&side=consumer&timestamp=1566977587303, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 15:34:42.401] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:349)] : Initializing Eureka in region us-east-1
[2019-08-28 15:34:42.728] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70)] : Using JSON encoding codec LegacyJacksonJson
[2019-08-28 15:34:42.728] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71)] : Using JSON decoding codec LegacyJacksonJson
[2019-08-28 15:34:43.047] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80)] : Using XML encoding codec XStreamXml
[2019-08-28 15:34:43.047] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81)] : Using XML decoding codec XStreamXml
[2019-08-28 15:34:43.580] [INFO ] - [Thread-8][ com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] : Resolving eureka endpoints via configuration
[2019-08-28 15:34:43.618] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958)] : Disable delta property : false
[2019-08-28 15:34:43.618] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:959)] : Single vip registry refresh property : null
[2019-08-28 15:34:43.618] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960)] : Force full registry fetch : false
[2019-08-28 15:34:43.619] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:961)] : Application is null : false
[2019-08-28 15:34:43.619] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:962)] : Registered Applications size is zero : true
[2019-08-28 15:34:43.619] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:964)] : Application version is -1: true
[2019-08-28 15:34:43.619] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1047)] : Getting all instance registry info from the eureka server
[2019-08-28 15:34:45.771] [ERROR] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83)] : Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$42cbe366.CGLIB$eurekaClient$0(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$42cbe366$$FastClassBySpringCGLIB$$a7d57ecd.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:365)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$42cbe366.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:583)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1246)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:535)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:193)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 65 common frames omitted
[2019-08-28 15:34:45.774] [WARN ] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:130)] : Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2019-08-28 15:34:45.775] [ERROR] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:972)] : DiscoveryClient_BITTRADE-C2C/192.168.1.12:-1:bittrade-c2c:@project.version@ - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$42cbe366.CGLIB$eurekaClient$0(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$42cbe366$$FastClassBySpringCGLIB$$a7d57ecd.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:365)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$42cbe366.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:583)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1246)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:535)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:193)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
[2019-08-28 15:34:45.777] [WARN ] - [Thread-8][ com.netflix.discovery.DiscoveryClient$1.get(DiscoveryClient.java:290)] : Using default backup registry implementation which does not do anything.
[2019-08-28 15:34:45.781] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1264)] : Starting heartbeat executor: renew interval is: 30
[2019-08-28 15:34:45.789] [INFO ] - [Thread-8][ com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60)] : InstanceInfoReplicator onDemand update allowed rate per min is 4
[2019-08-28 15:34:45.800] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:449)] : Discovery Client initialized at timestamp 1566977685796 with initial instances count: 0
[2019-08-28 15:34:45.817] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:888)] : Shutting down DiscoveryClient ...
[2019-08-28 15:34:48.819] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:922)] : Unregistering ...
[2019-08-28 15:34:50.848] [ERROR] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83)] : Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:923)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:901)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:246)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:494)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 46 common frames omitted
[2019-08-28 15:34:50.850] [WARN ] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:130)] : Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2019-08-28 15:34:50.851] [ERROR] - [Thread-8][ com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:926)] : DiscoveryClient_BITTRADE-C2C/192.168.1.12:-1:bittrade-c2c:@project.version@ - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:923)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:901)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:246)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:494)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
[2019-08-28 15:34:50.876] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:911)] : Completed shut down of DiscoveryClient
[2019-08-28 15:34:51.257] [INFO ] - [Thread-8][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:1948)] : {dataSource-1} closing ...
[2019-08-28 15:34:51.268] [INFO ] - [Thread-8][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:2020)] : {dataSource-1} closed
[2019-08-28 16:18:01.241] [INFO ] - [main][?#?:?] : using logger: com.alibaba.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[2019-08-28 16:18:01.250] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-28 16:18:01.256] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {}
[2019-08-28 16:18:01.541] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6c61a903: startup date [Wed Aug 28 16:18:01 CST 2019]; root of context hierarchy
[2019-08-28 16:18:01.943] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-28 16:18:02.023] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8b5327ea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:18:02.200] [INFO ] - [pool-1-thread-1][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$1.run(AwaitingNonWebApplicationListener.java:61)] :  [Dubbo] Current Spring Boot Application is await...
[2019-08-28 16:18:02.627] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-28 16:18:02.629] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {dubbo.application.id=service-consumer, dubbo.application.name=service-consumer, dubbo.consumer.check=false, dubbo.consumer.timeout=5000, dubbo.monitor=, dubbo.protocol.id=dubbo, dubbo.protocol.name=dubbo, dubbo.protocol.port=20884, dubbo.provider.timeout=5000, dubbo.registry.address=N/A, dubbo.registry.check=false, dubbo.registry.id=my-registry, dubbo.registry.protocol=zookeeper, dubbo.scan=}
[2019-08-28 16:18:02.672] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : The following profiles are active: common,data,eureka,dubbo_provider,dubbo_consumer
[2019-08-28 16:18:02.681] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Refreshing org.springframework.web.context.support.GenericWebApplicationContext@59fc684e: startup date [Wed Aug 28 16:18:02 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6c61a903
[2019-08-28 16:18:04.005] [WARN ] - [main][ org.mybatis.logging.Logger.warn(Logger.java:44)] : No MyBatis mapper was found in '[com.baomidou.cloud.service.*.mapper*]' package. Please check your configuration.
[2019-08-28 16:18:04.735] [INFO ] - [main][ org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:172)] : Multiple Spring Data modules found, entering strict repository configuration mode!
[2019-08-28 16:18:05.163] [WARN ] - [main][ com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans(ServiceAnnotationBeanPostProcessor.java:155)] :  [DUBBO] No Spring Bean annotating Dubbo's @Service was found under package[com.bittrade.c2c], dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 16:18:05.591] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : BeanFactory id=61352edb-e99a-3c04-9bd9-f50ca066a043
[2019-08-28 16:18:05.782] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-28 16:18:06.038] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:18:06.051] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionProperties' of type [com.core.framework.props.TransactionProperties$$EnhancerBySpringCGLIB$$8081e793] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:18:06.067] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$88e51a5f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:18:06.071] [INFO ] - [main][ com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource(DruidDataSourceAutoConfigure.java:56)] : Init DruidDataSource
[2019-08-28 16:18:06.170] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:18:06.297] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003)] : {dataSource-1} inited
[2019-08-28 16:18:06.298] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:18:06.329] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:18:06.341] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$$EnhancerBySpringCGLIB$$3ad1ff7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:18:06.359] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:18:06.366] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:18:06.375] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration$$EnhancerBySpringCGLIB$$1c39bd5c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:18:06.410] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:18:06.411] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionConfig' of type [com.core.framework.config.TransactionConfig$$EnhancerBySpringCGLIB$$753da238] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:18:06.434] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'defaultPointcutAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:18:06.451] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6f3924ed] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:18:06.744] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' of type [com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration$$EnhancerBySpringCGLIB$$7e3aca5f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:18:06.759] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:18:06.768] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:18:06.772] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:18:06.776] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:18:06.779] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:18:06.836] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8b5327ea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:18:11.415] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'clientInboundChannelExecutor'
[2019-08-28 16:18:11.459] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'clientOutboundChannelExecutor'
[2019-08-28 16:18:11.870] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService
[2019-08-28 16:18:12.086] [INFO ] - [main][ com.core.framework.config.redis.JedisClusterConfig.getJedisCluster(JedisClusterConfig.java:35)] : 进入redis集群初始化方法：访问集群地址为：[154.222.138.5:7000, 154.222.138.5:7001, 154.222.138.5:7002, 154.222.138.5:7003, 154.222.138.5:7004, 154.222.138.5:7005]
[2019-08-28 16:18:13.341] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyTradeServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 16:18:14.643] [WARN ] - [main][ com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:98)] :  [DUBBO] Failed to start NettyClient HAHE/192.168.1.12 connect to the server localhost/127.0.0.1:20881 (check == false, ignore and retry later!), cause: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=6608&register.ip=192.168.1.12&side=consumer&timestamp=1566980293343) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=6608&register.ip=192.168.1.12&side=consumer&timestamp=1566980293343) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:89)
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.<init>(NettyClient.java:59)
	at com.alibaba.dubbo.remoting.transport.netty.NettyTransporter.connect(NettyTransporter.java:37)
	at com.alibaba.dubbo.remoting.Transporter$Adaptive.connect(Transporter$Adaptive.java)
	at com.alibaba.dubbo.remoting.Transporters.connect(Transporters.java:75)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchanger.connect(HeaderExchanger.java:39)
	at com.alibaba.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:109)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.initClient(DubboProtocol.java:409)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getSharedClient(DubboProtocol.java:377)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getClients(DubboProtocol.java:354)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.refer(DubboProtocol.java:336)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:108)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:67)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:65)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:394)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:333)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:163)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:66)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceFieldElement.inject(ReferenceAnnotationBeanPostProcessor.java:367)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.postProcessPropertyValues(ReferenceAnnotationBeanPostProcessor.java:92)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:759)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:548)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:386)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:89)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:41)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:541)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:763)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:463)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:209)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-08-28 16:18:14.820] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 16:18:16.038] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-28 16:18:16.038] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-28 16:18:16.065] [INFO ] - [main][ com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281)] : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@795faad
[2019-08-28 16:18:16.288] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/sendMessage],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.sendMessage(com.bittrade.c2c.vo.SendVo)
[2019-08-28 16:18:16.290] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/sendOrder],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.pullOrderDetail(com.bittrade.c2c.vo.SendOrderVo)
[2019-08-28 16:18:16.290] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/pullUnreadMessage],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.pullMessage(java.lang.Long)
[2019-08-28 16:18:16.303] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.listAdverts(com.core.common.DTO.PageDTO<com.bittrade.pojo.dto.TAdvertInfoDTO>,com.bittrade.pojo.vo.QueryAdvertVO,com.core.web.constant.entity.LoginUser)
[2019-08-28 16:18:16.304] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/publish_advert],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.publishAdvert(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.TAdvertInfoDTO)
[2019-08-28 16:18:16.304] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/revoke/{advert_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.revokeAdverts(java.lang.Long,com.core.web.constant.entity.LoginUser)
[2019-08-28 16:18:16.305] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts/details/{advert_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.getAdvertDetails(java.lang.Long)
[2019-08-28 16:18:16.306] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/suspend],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.suspendAdverts(java.util.List<java.lang.Long>,com.core.web.constant.entity.LoginUser)
[2019-08-28 16:18:16.307] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts/users/{coin_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.listAdvertsUsers(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.AdvertUserVO>,java.lang.Long,com.core.web.constant.entity.LoginUser)
[2019-08-28 16:18:16.308] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/place_advert_order/{advert_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.placeAdvertOrder(java.lang.Long,java.math.BigDecimal,java.lang.String,com.core.web.constant.entity.LoginUser)
[2019-08-28 16:18:16.308] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 16:18:16.309] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 16:18:16.310] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 16:18:16.311] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 16:18:16.311] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 16:18:16.312] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 16:18:16.313] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 16:18:16.314] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 16:18:16.314] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 16:18:16.315] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 16:18:16.316] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 16:18:16.317] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 16:18:16.317] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 16:18:16.318] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 16:18:16.319] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 16:18:16.325] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/details/{order_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.getAdvertOrderDetails(java.lang.Long)
[2019-08-28 16:18:16.326] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/click_already_paid/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.clickAlreadyPaid(java.lang.Long)
[2019-08-28 16:18:16.327] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/no_complete],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.noCompleteAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 16:18:16.328] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/cancel/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.cancelAdvertOrder(java.lang.Long)
[2019-08-28 16:18:16.328] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/click_already_receipt/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.clickAlreadyReceipt(java.lang.Long)
[2019-08-28 16:18:16.329] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/already_complete],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.alreadyCompleteAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 16:18:16.330] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/already_cancel],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.alreadyCancelAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 16:18:16.331] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 16:18:16.331] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 16:18:16.332] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 16:18:16.333] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 16:18:16.333] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 16:18:16.334] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 16:18:16.335] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 16:18:16.335] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 16:18:16.336] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 16:18:16.337] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 16:18:16.337] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 16:18:16.338] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 16:18:16.339] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 16:18:16.339] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 16:18:16.340] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 16:18:16.350] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/detail],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetsVO>> com.common.bittrade.controller.TLegalCurrencyAccountController.detail(com.core.web.constant.entity.LoginUser)
[2019-08-28 16:18:16.351] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/conversionTotal],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.ConversionVo> com.common.bittrade.controller.TLegalCurrencyAccountController.totalConversion(com.core.web.constant.entity.LoginUser)
[2019-08-28 16:18:16.352] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getAssetsFeign],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.math.BigDecimal com.common.bittrade.controller.TLegalCurrencyAccountController.getAssetsFeign(java.lang.Long)
[2019-08-28 16:18:16.353] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/availableBalanceFeign],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.lang.String com.common.bittrade.controller.TLegalCurrencyAccountController.availableBalanceFeign(java.lang.Long,java.lang.String)
[2019-08-28 16:18:16.353] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 16:18:16.354] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 16:18:16.355] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 16:18:16.355] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 16:18:16.356] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 16:18:16.357] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 16:18:16.357] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 16:18:16.358] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 16:18:16.359] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 16:18:16.359] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 16:18:16.360] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 16:18:16.360] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 16:18:16.361] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 16:18:16.362] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 16:18:16.363] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 16:18:16.368] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/legalCurrency_coins],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.common.bittrade.controller.TLegalCurrencyCoinController.listLegalCurrencyCoins()
[2019-08-28 16:18:16.368] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 16:18:16.369] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 16:18:16.370] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 16:18:16.371] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 16:18:16.371] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 16:18:16.372] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 16:18:16.373] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 16:18:16.374] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 16:18:16.374] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 16:18:16.375] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 16:18:16.376] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 16:18:16.376] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 16:18:16.377] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 16:18:16.378] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 16:18:16.379] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 16:18:16.383] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/queryType],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetRecordTypeVO>> com.common.bittrade.controller.TLegalCurrencyRecordController.queryTypeForFund()
[2019-08-28 16:18:16.384] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/queryAccountRecord],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.RecordVO>> com.common.bittrade.controller.TLegalCurrencyRecordController.queryAccountRecord(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.AccountTypeDto)
[2019-08-28 16:18:16.385] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 16:18:16.385] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 16:18:16.386] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 16:18:16.387] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 16:18:16.387] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 16:18:16.388] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 16:18:16.389] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 16:18:16.389] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 16:18:16.390] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 16:18:16.390] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 16:18:16.391] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 16:18:16.392] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 16:18:16.392] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 16:18:16.393] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 16:18:16.394] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 16:18:16.398] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/getList],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.model.WCoin>> com.common.bittrade.controller.WCoinController.getList()
[2019-08-28 16:18:16.398] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/Withdrawcoinlist],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO com.common.bittrade.controller.WCoinController.withdrawcoinlist()
[2019-08-28 16:18:16.399] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/rechargecoinlist],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO com.common.bittrade.controller.WCoinController.rechargecoinlist()
[2019-08-28 16:18:16.400] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccount/detail],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetsVO>> com.common.bittrade.controller.WWalletAccountController.detail(com.core.web.constant.entity.LoginUser)
[2019-08-28 16:18:16.401] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccount/conversionTotal],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.ConversionVo> com.common.bittrade.controller.WWalletAccountController.totalConversion(com.core.web.constant.entity.LoginUser)
[2019-08-28 16:18:16.403] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryCurrencies],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.model.WCoin>> com.common.bittrade.controller.WWalletAccountRecordController.queryCurrencies()
[2019-08-28 16:18:16.403] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryTypeForFund],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetRecordTypeVO>> com.common.bittrade.controller.WWalletAccountRecordController.queryTypeForFund()
[2019-08-28 16:18:16.404] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryFundAccountRecord],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.RecordVO>> com.common.bittrade.controller.WWalletAccountRecordController.queryFundAccountRecord(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.AccountTypeDto)
[2019-08-28 16:18:16.408] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
[2019-08-28 16:18:16.409] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
[2019-08-28 16:18:16.410] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
[2019-08-28 16:18:16.414] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2019-08-28 16:18:16.415] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2019-08-28 16:18:16.598] [WARN ] - [DubboClientReconnectTimer-thread-1][ com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:171)] :  [DUBBO] client reconnect to localhost:20881 find error . url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=6608&register.ip=192.168.1.12&side=consumer&timestamp=1566980293343, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=6608&register.ip=192.168.1.12&side=consumer&timestamp=1566980293343) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:156)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	... 3 common frames omitted
[2019-08-28 16:18:17.684] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Exposing 2 endpoint(s) beneath base path '/actuator'
[2019-08-28 16:18:17.715] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2019-08-28 16:18:17.716] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2019-08-28 16:18:17.718] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2019-08-28 16:18:18.032] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'messageBrokerTaskScheduler'
[2019-08-28 16:18:18.130] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped URL path [/c2c/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
[2019-08-28 16:18:18.155] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'brokerChannelExecutor'
[2019-08-28 16:18:18.474] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[2019-08-28 16:18:18.953] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@59fc684e: startup date [Wed Aug 28 16:18:02 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6c61a903
[2019-08-28 16:18:19.044] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Detected @ExceptionHandler methods in globalExceptionHandler
[2019-08-28 16:18:19.443] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-28 16:18:19.445] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-28 16:18:20.973] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting beans in phase 0
[2019-08-28 16:18:20.974] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting beans in phase 2147483647
[2019-08-28 16:18:20.974] [INFO ] - [main][ springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:151)] : Context refreshed
[2019-08-28 16:18:21.014] [INFO ] - [main][ springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:154)] : Found 1 custom documentation plugin(s)
[2019-08-28 16:18:21.079] [INFO ] - [main][ springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)] : Scanning for api listing references
[2019-08-28 16:18:21.638] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting...
[2019-08-28 16:18:21.639] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
[2019-08-28 16:18:21.641] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Started.
[2019-08-28 16:18:21.662] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Started AdvertInfoTester in 20.76 seconds (JVM running for 22.567)
[2019-08-28 16:18:22.323] [INFO ] - [Thread-8][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Closing org.springframework.web.context.support.GenericWebApplicationContext@59fc684e: startup date [Wed Aug 28 16:18:02 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6c61a903
[2019-08-28 16:18:22.323] [INFO ] - [Thread-2][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$2.run(AwaitingNonWebApplicationListener.java:83)] :  [Dubbo] Current Spring Boot Application is about to shutdown...
[2019-08-28 16:18:22.325] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:64)] :  [DUBBO] Close all registries [], dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 16:18:22.326] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(DubboProtocol.java:438)] :  [DUBBO] Close dubbo connect: 192.168.1.12:0-->localhost/127.0.0.1:20881, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 16:18:22.327] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:63)] :  [DUBBO] Destroy reference: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&default.check=false&default.timeout=5000&dubbo=2.6.2&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=6608&register.ip=192.168.1.12&side=consumer&timestamp=1566980293343, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 16:18:22.415] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:349)] : Initializing Eureka in region us-east-1
[2019-08-28 16:18:22.605] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:63)] :  [DUBBO] Destroy reference: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyService?application=service-consumer&default.check=false&default.timeout=5000&dubbo=2.6.2&interface=com.bittrade.currency.api.service.ITCurrencyService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getCurrencies,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,findAllLegalCurrency,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,findUsableCurrency,updateById,pageMaps,listByMap,getByPK&pid=6608&register.ip=192.168.1.12&side=consumer&timestamp=1566980294821, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 16:18:22.736] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70)] : Using JSON encoding codec LegacyJacksonJson
[2019-08-28 16:18:22.736] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71)] : Using JSON decoding codec LegacyJacksonJson
[2019-08-28 16:18:22.982] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80)] : Using XML encoding codec XStreamXml
[2019-08-28 16:18:22.983] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81)] : Using XML decoding codec XStreamXml
[2019-08-28 16:18:23.309] [INFO ] - [Thread-8][ com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] : Resolving eureka endpoints via configuration
[2019-08-28 16:18:23.351] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958)] : Disable delta property : false
[2019-08-28 16:18:23.352] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:959)] : Single vip registry refresh property : null
[2019-08-28 16:18:23.352] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960)] : Force full registry fetch : false
[2019-08-28 16:18:23.352] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:961)] : Application is null : false
[2019-08-28 16:18:23.352] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:962)] : Registered Applications size is zero : true
[2019-08-28 16:18:23.353] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:964)] : Application version is -1: true
[2019-08-28 16:18:23.353] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1047)] : Getting all instance registry info from the eureka server
[2019-08-28 16:18:25.495] [ERROR] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83)] : Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$92bc2109.CGLIB$eurekaClient$0(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$92bc2109$$FastClassBySpringCGLIB$$ad7d66e4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:365)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$92bc2109.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:583)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1246)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:535)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:193)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 65 common frames omitted
[2019-08-28 16:18:25.498] [WARN ] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:130)] : Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2019-08-28 16:18:25.499] [ERROR] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:972)] : DiscoveryClient_BITTRADE-C2C/192.168.1.12:-1:bittrade-c2c:@project.version@ - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$92bc2109.CGLIB$eurekaClient$0(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$92bc2109$$FastClassBySpringCGLIB$$ad7d66e4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:365)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$92bc2109.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:583)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1246)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:535)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:193)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
[2019-08-28 16:18:25.500] [WARN ] - [Thread-8][ com.netflix.discovery.DiscoveryClient$1.get(DiscoveryClient.java:290)] : Using default backup registry implementation which does not do anything.
[2019-08-28 16:18:25.504] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1264)] : Starting heartbeat executor: renew interval is: 30
[2019-08-28 16:18:25.511] [INFO ] - [Thread-8][ com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60)] : InstanceInfoReplicator onDemand update allowed rate per min is 4
[2019-08-28 16:18:25.521] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:449)] : Discovery Client initialized at timestamp 1566980305517 with initial instances count: 0
[2019-08-28 16:18:25.546] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:888)] : Shutting down DiscoveryClient ...
[2019-08-28 16:18:28.548] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:922)] : Unregistering ...
[2019-08-28 16:18:30.566] [ERROR] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83)] : Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:923)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:901)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:246)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:494)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 46 common frames omitted
[2019-08-28 16:18:30.567] [WARN ] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:130)] : Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2019-08-28 16:18:30.568] [ERROR] - [Thread-8][ com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:926)] : DiscoveryClient_BITTRADE-C2C/192.168.1.12:-1:bittrade-c2c:@project.version@ - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:923)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:901)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:246)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:494)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
[2019-08-28 16:18:30.581] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:911)] : Completed shut down of DiscoveryClient
[2019-08-28 16:18:30.593] [INFO ] - [Thread-8][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:1948)] : {dataSource-1} closing ...
[2019-08-28 16:18:30.599] [INFO ] - [Thread-8][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:2020)] : {dataSource-1} closed
[2019-08-28 16:41:28.811] [INFO ] - [main][?#?:?] : using logger: com.alibaba.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[2019-08-28 16:41:28.819] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-28 16:41:28.824] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {}
[2019-08-28 16:41:29.100] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6c61a903: startup date [Wed Aug 28 16:41:29 CST 2019]; root of context hierarchy
[2019-08-28 16:41:29.501] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-28 16:41:29.574] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8b5327ea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:41:29.752] [INFO ] - [pool-1-thread-1][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$1.run(AwaitingNonWebApplicationListener.java:61)] :  [Dubbo] Current Spring Boot Application is await...
[2019-08-28 16:41:30.175] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-28 16:41:30.177] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {dubbo.application.id=service-consumer, dubbo.application.name=service-consumer, dubbo.consumer.check=false, dubbo.consumer.timeout=5000, dubbo.monitor=, dubbo.protocol.id=dubbo, dubbo.protocol.name=dubbo, dubbo.protocol.port=20884, dubbo.provider.timeout=5000, dubbo.registry.address=N/A, dubbo.registry.check=false, dubbo.registry.id=my-registry, dubbo.registry.protocol=zookeeper, dubbo.scan=}
[2019-08-28 16:41:30.222] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : The following profiles are active: common,data,eureka,dubbo_provider,dubbo_consumer
[2019-08-28 16:41:30.231] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Refreshing org.springframework.web.context.support.GenericWebApplicationContext@59fc684e: startup date [Wed Aug 28 16:41:30 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6c61a903
[2019-08-28 16:41:31.528] [WARN ] - [main][ org.mybatis.logging.Logger.warn(Logger.java:44)] : No MyBatis mapper was found in '[com.baomidou.cloud.service.*.mapper*]' package. Please check your configuration.
[2019-08-28 16:41:32.238] [INFO ] - [main][ org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:172)] : Multiple Spring Data modules found, entering strict repository configuration mode!
[2019-08-28 16:41:32.674] [WARN ] - [main][ com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans(ServiceAnnotationBeanPostProcessor.java:155)] :  [DUBBO] No Spring Bean annotating Dubbo's @Service was found under package[com.bittrade.c2c], dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 16:41:33.051] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : BeanFactory id=61352edb-e99a-3c04-9bd9-f50ca066a043
[2019-08-28 16:41:33.233] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-28 16:41:33.489] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:41:33.502] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionProperties' of type [com.core.framework.props.TransactionProperties$$EnhancerBySpringCGLIB$$8081e793] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:41:33.517] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$88e51a5f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:41:33.522] [INFO ] - [main][ com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource(DruidDataSourceAutoConfigure.java:56)] : Init DruidDataSource
[2019-08-28 16:41:33.627] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:41:33.761] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003)] : {dataSource-1} inited
[2019-08-28 16:41:33.762] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:41:33.804] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:41:33.816] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$$EnhancerBySpringCGLIB$$3ad1ff7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:41:33.835] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:41:33.842] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:41:33.850] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration$$EnhancerBySpringCGLIB$$1c39bd5c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:41:33.885] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:41:33.886] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionConfig' of type [com.core.framework.config.TransactionConfig$$EnhancerBySpringCGLIB$$753da238] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:41:33.910] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'defaultPointcutAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:41:33.930] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6f3924ed] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:41:34.223] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' of type [com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration$$EnhancerBySpringCGLIB$$7e3aca5f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:41:34.236] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:41:34.246] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:41:34.249] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:41:34.253] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:41:34.256] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:41:34.308] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8b5327ea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:41:39.033] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'clientInboundChannelExecutor'
[2019-08-28 16:41:39.063] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'clientOutboundChannelExecutor'
[2019-08-28 16:41:39.476] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService
[2019-08-28 16:41:39.700] [INFO ] - [main][ com.core.framework.config.redis.JedisClusterConfig.getJedisCluster(JedisClusterConfig.java:35)] : 进入redis集群初始化方法：访问集群地址为：[154.222.138.5:7000, 154.222.138.5:7001, 154.222.138.5:7002, 154.222.138.5:7003, 154.222.138.5:7004, 154.222.138.5:7005]
[2019-08-28 16:41:40.950] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyTradeServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 16:41:42.229] [WARN ] - [main][ com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:98)] :  [DUBBO] Failed to start NettyClient HAHE/192.168.1.12 connect to the server localhost/127.0.0.1:20881 (check == false, ignore and retry later!), cause: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=1480&register.ip=192.168.1.12&side=consumer&timestamp=1566981700951) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=1480&register.ip=192.168.1.12&side=consumer&timestamp=1566981700951) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:89)
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.<init>(NettyClient.java:59)
	at com.alibaba.dubbo.remoting.transport.netty.NettyTransporter.connect(NettyTransporter.java:37)
	at com.alibaba.dubbo.remoting.Transporter$Adaptive.connect(Transporter$Adaptive.java)
	at com.alibaba.dubbo.remoting.Transporters.connect(Transporters.java:75)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchanger.connect(HeaderExchanger.java:39)
	at com.alibaba.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:109)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.initClient(DubboProtocol.java:409)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getSharedClient(DubboProtocol.java:377)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getClients(DubboProtocol.java:354)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.refer(DubboProtocol.java:336)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:108)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:67)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:65)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:394)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:333)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:163)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:66)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceFieldElement.inject(ReferenceAnnotationBeanPostProcessor.java:367)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.postProcessPropertyValues(ReferenceAnnotationBeanPostProcessor.java:92)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:759)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:548)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:386)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:89)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:41)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:541)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:763)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:463)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:209)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-08-28 16:41:42.396] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 16:41:43.635] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-28 16:41:43.635] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-28 16:41:43.667] [INFO ] - [main][ com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281)] : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@47e60b71
[2019-08-28 16:41:43.905] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/sendMessage],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.sendMessage(com.bittrade.c2c.vo.SendVo)
[2019-08-28 16:41:43.907] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/sendOrder],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.pullOrderDetail(com.bittrade.c2c.vo.SendOrderVo)
[2019-08-28 16:41:43.908] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/pullUnreadMessage],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.pullMessage(java.lang.Long)
[2019-08-28 16:41:43.920] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.listAdverts(com.core.common.DTO.PageDTO<com.bittrade.pojo.dto.TAdvertInfoDTO>,com.bittrade.pojo.vo.QueryAdvertVO,com.core.web.constant.entity.LoginUser)
[2019-08-28 16:41:43.921] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/publish_advert],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.publishAdvert(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.TAdvertInfoDTO)
[2019-08-28 16:41:43.922] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/revoke/{advert_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.revokeAdverts(java.lang.Long,com.core.web.constant.entity.LoginUser)
[2019-08-28 16:41:43.923] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts/users/{coin_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.listAdvertsUsers(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.AdvertUserVO>,java.lang.Long,com.core.web.constant.entity.LoginUser)
[2019-08-28 16:41:43.924] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/suspend],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.suspendAdverts(java.util.List<java.lang.Long>,com.core.web.constant.entity.LoginUser)
[2019-08-28 16:41:43.925] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts/details/{advert_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.getAdvertDetails(java.lang.Long)
[2019-08-28 16:41:43.926] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/place_advert_order/{advert_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.placeAdvertOrder(java.lang.Long,java.math.BigDecimal,java.lang.String,com.core.web.constant.entity.LoginUser)
[2019-08-28 16:41:43.927] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 16:41:43.927] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 16:41:43.928] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 16:41:43.929] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 16:41:43.930] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 16:41:43.932] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 16:41:43.933] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 16:41:43.934] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 16:41:43.935] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 16:41:43.936] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 16:41:43.937] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 16:41:43.937] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 16:41:43.938] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 16:41:43.939] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 16:41:43.940] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 16:41:43.946] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/details/{order_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.getAdvertOrderDetails(java.lang.Long)
[2019-08-28 16:41:43.947] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/click_already_receipt/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.clickAlreadyReceipt(java.lang.Long)
[2019-08-28 16:41:43.948] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/already_complete],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.alreadyCompleteAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 16:41:43.949] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/cancel/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.cancelAdvertOrder(java.lang.Long)
[2019-08-28 16:41:43.950] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/already_cancel],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.alreadyCancelAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 16:41:43.951] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/no_complete],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.noCompleteAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 16:41:43.951] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/click_already_paid/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.clickAlreadyPaid(java.lang.Long)
[2019-08-28 16:41:43.952] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 16:41:43.953] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 16:41:43.953] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 16:41:43.954] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 16:41:43.955] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 16:41:43.955] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 16:41:43.956] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 16:41:43.957] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 16:41:43.958] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 16:41:43.959] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 16:41:43.960] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 16:41:43.961] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 16:41:43.962] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 16:41:43.963] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 16:41:43.964] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 16:41:43.971] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/detail],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetsVO>> com.common.bittrade.controller.TLegalCurrencyAccountController.detail(com.core.web.constant.entity.LoginUser)
[2019-08-28 16:41:43.972] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/availableBalanceFeign],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.lang.String com.common.bittrade.controller.TLegalCurrencyAccountController.availableBalanceFeign(java.lang.Long,java.lang.String)
[2019-08-28 16:41:43.973] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/conversionTotal],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.ConversionVo> com.common.bittrade.controller.TLegalCurrencyAccountController.totalConversion(com.core.web.constant.entity.LoginUser)
[2019-08-28 16:41:43.974] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getAssetsFeign],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.math.BigDecimal com.common.bittrade.controller.TLegalCurrencyAccountController.getAssetsFeign(java.lang.Long)
[2019-08-28 16:41:43.975] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 16:41:43.975] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 16:41:43.976] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 16:41:43.977] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 16:41:43.977] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 16:41:43.978] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 16:41:43.978] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 16:41:43.979] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 16:41:43.980] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 16:41:43.980] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 16:41:43.981] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 16:41:43.982] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 16:41:43.982] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 16:41:43.983] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 16:41:43.984] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 16:41:43.988] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/legalCurrency_coins],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.common.bittrade.controller.TLegalCurrencyCoinController.listLegalCurrencyCoins()
[2019-08-28 16:41:43.989] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 16:41:43.990] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 16:41:43.991] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 16:41:43.991] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 16:41:43.992] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 16:41:43.992] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 16:41:43.993] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 16:41:43.994] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 16:41:43.995] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 16:41:43.995] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 16:41:43.996] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 16:41:43.996] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 16:41:43.997] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 16:41:43.998] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 16:41:43.999] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 16:41:44.004] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/queryAccountRecord],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.RecordVO>> com.common.bittrade.controller.TLegalCurrencyRecordController.queryAccountRecord(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.AccountTypeDto)
[2019-08-28 16:41:44.005] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/queryType],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetRecordTypeVO>> com.common.bittrade.controller.TLegalCurrencyRecordController.queryTypeForFund()
[2019-08-28 16:41:44.005] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 16:41:44.006] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 16:41:44.007] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 16:41:44.007] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 16:41:44.008] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 16:41:44.009] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 16:41:44.009] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 16:41:44.010] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 16:41:44.011] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 16:41:44.011] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 16:41:44.012] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 16:41:44.012] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 16:41:44.013] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 16:41:44.014] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 16:41:44.014] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 16:41:44.019] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/rechargecoinlist],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO com.common.bittrade.controller.WCoinController.rechargecoinlist()
[2019-08-28 16:41:44.020] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/Withdrawcoinlist],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO com.common.bittrade.controller.WCoinController.withdrawcoinlist()
[2019-08-28 16:41:44.021] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/getList],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.model.WCoin>> com.common.bittrade.controller.WCoinController.getList()
[2019-08-28 16:41:44.023] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccount/detail],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetsVO>> com.common.bittrade.controller.WWalletAccountController.detail(com.core.web.constant.entity.LoginUser)
[2019-08-28 16:41:44.024] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccount/conversionTotal],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.ConversionVo> com.common.bittrade.controller.WWalletAccountController.totalConversion(com.core.web.constant.entity.LoginUser)
[2019-08-28 16:41:44.025] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryFundAccountRecord],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.RecordVO>> com.common.bittrade.controller.WWalletAccountRecordController.queryFundAccountRecord(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.AccountTypeDto)
[2019-08-28 16:41:44.026] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryTypeForFund],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetRecordTypeVO>> com.common.bittrade.controller.WWalletAccountRecordController.queryTypeForFund()
[2019-08-28 16:41:44.027] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryCurrencies],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.model.WCoin>> com.common.bittrade.controller.WWalletAccountRecordController.queryCurrencies()
[2019-08-28 16:41:44.031] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
[2019-08-28 16:41:44.032] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
[2019-08-28 16:41:44.033] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
[2019-08-28 16:41:44.038] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2019-08-28 16:41:44.039] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2019-08-28 16:41:44.184] [WARN ] - [DubboClientReconnectTimer-thread-1][ com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:171)] :  [DUBBO] client reconnect to localhost:20881 find error . url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=1480&register.ip=192.168.1.12&side=consumer&timestamp=1566981700951, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=1480&register.ip=192.168.1.12&side=consumer&timestamp=1566981700951) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:156)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	... 3 common frames omitted
[2019-08-28 16:41:45.403] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Exposing 2 endpoint(s) beneath base path '/actuator'
[2019-08-28 16:41:45.432] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2019-08-28 16:41:45.434] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2019-08-28 16:41:45.435] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2019-08-28 16:41:45.740] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'messageBrokerTaskScheduler'
[2019-08-28 16:41:45.836] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped URL path [/c2c/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
[2019-08-28 16:41:45.860] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'brokerChannelExecutor'
[2019-08-28 16:41:46.199] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[2019-08-28 16:41:46.716] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@59fc684e: startup date [Wed Aug 28 16:41:30 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6c61a903
[2019-08-28 16:41:46.801] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Detected @ExceptionHandler methods in globalExceptionHandler
[2019-08-28 16:41:47.172] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-28 16:41:47.173] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-28 16:41:48.600] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting beans in phase 0
[2019-08-28 16:41:48.600] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting beans in phase 2147483647
[2019-08-28 16:41:48.601] [INFO ] - [main][ springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:151)] : Context refreshed
[2019-08-28 16:41:48.638] [INFO ] - [main][ springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:154)] : Found 1 custom documentation plugin(s)
[2019-08-28 16:41:48.701] [INFO ] - [main][ springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)] : Scanning for api listing references
[2019-08-28 16:41:49.212] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting...
[2019-08-28 16:41:49.213] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
[2019-08-28 16:41:49.214] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Started.
[2019-08-28 16:41:49.234] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Started AdvertInfoTester in 20.749 seconds (JVM running for 22.622)
[2019-08-28 16:41:49.939] [INFO ] - [Thread-2][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$2.run(AwaitingNonWebApplicationListener.java:83)] :  [Dubbo] Current Spring Boot Application is about to shutdown...
[2019-08-28 16:41:49.942] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:64)] :  [DUBBO] Close all registries [], dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 16:41:49.943] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(DubboProtocol.java:438)] :  [DUBBO] Close dubbo connect: 192.168.1.12:0-->localhost/127.0.0.1:20881, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 16:41:49.943] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:63)] :  [DUBBO] Destroy reference: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&default.check=false&default.timeout=5000&dubbo=2.6.2&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=1480&register.ip=192.168.1.12&side=consumer&timestamp=1566981700951, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 16:41:50.054] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:349)] : Initializing Eureka in region us-east-1
[2019-08-28 16:41:50.200] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:63)] :  [DUBBO] Destroy reference: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyService?application=service-consumer&default.check=false&default.timeout=5000&dubbo=2.6.2&interface=com.bittrade.currency.api.service.ITCurrencyService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getCurrencies,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,findAllLegalCurrency,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,findUsableCurrency,updateById,pageMaps,listByMap,getByPK&pid=1480&register.ip=192.168.1.12&side=consumer&timestamp=1566981702397, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 16:41:50.349] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70)] : Using JSON encoding codec LegacyJacksonJson
[2019-08-28 16:41:50.350] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71)] : Using JSON decoding codec LegacyJacksonJson
[2019-08-28 16:41:50.609] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80)] : Using XML encoding codec XStreamXml
[2019-08-28 16:41:50.610] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81)] : Using XML decoding codec XStreamXml
[2019-08-28 16:41:50.949] [INFO ] - [Thread-8][ com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] : Resolving eureka endpoints via configuration
[2019-08-28 16:41:50.983] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958)] : Disable delta property : false
[2019-08-28 16:41:50.984] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:959)] : Single vip registry refresh property : null
[2019-08-28 16:41:50.984] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960)] : Force full registry fetch : false
[2019-08-28 16:41:50.984] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:961)] : Application is null : false
[2019-08-28 16:41:50.985] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:962)] : Registered Applications size is zero : true
[2019-08-28 16:41:50.985] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:964)] : Application version is -1: true
[2019-08-28 16:41:50.985] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1047)] : Getting all instance registry info from the eureka server
[2019-08-28 16:41:53.106] [ERROR] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83)] : Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$92bc2109.CGLIB$eurekaClient$1(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$92bc2109$$FastClassBySpringCGLIB$$ad7d66e4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:365)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$92bc2109.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:583)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1246)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:535)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:193)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 65 common frames omitted
[2019-08-28 16:41:53.108] [WARN ] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:130)] : Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2019-08-28 16:41:53.109] [ERROR] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:972)] : DiscoveryClient_BITTRADE-C2C/192.168.1.12:-1:bittrade-c2c:@project.version@ - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$92bc2109.CGLIB$eurekaClient$1(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$92bc2109$$FastClassBySpringCGLIB$$ad7d66e4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:365)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$92bc2109.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:583)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1246)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:535)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:193)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
[2019-08-28 16:41:53.111] [WARN ] - [Thread-8][ com.netflix.discovery.DiscoveryClient$1.get(DiscoveryClient.java:290)] : Using default backup registry implementation which does not do anything.
[2019-08-28 16:41:53.114] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1264)] : Starting heartbeat executor: renew interval is: 30
[2019-08-28 16:41:53.121] [INFO ] - [Thread-8][ com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60)] : InstanceInfoReplicator onDemand update allowed rate per min is 4
[2019-08-28 16:41:53.131] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:449)] : Discovery Client initialized at timestamp 1566981713127 with initial instances count: 0
[2019-08-28 16:41:53.154] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:888)] : Shutting down DiscoveryClient ...
[2019-08-28 16:41:56.155] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:922)] : Unregistering ...
[2019-08-28 16:41:58.173] [ERROR] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83)] : Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:923)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:901)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:246)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:494)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 46 common frames omitted
[2019-08-28 16:41:58.175] [WARN ] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:130)] : Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2019-08-28 16:41:58.176] [ERROR] - [Thread-8][ com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:926)] : DiscoveryClient_BITTRADE-C2C/192.168.1.12:-1:bittrade-c2c:@project.version@ - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:923)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:901)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:246)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:494)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
[2019-08-28 16:41:58.202] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:911)] : Completed shut down of DiscoveryClient
[2019-08-28 16:41:58.220] [INFO ] - [Thread-8][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:1948)] : {dataSource-1} closing ...
[2019-08-28 16:41:58.225] [INFO ] - [Thread-8][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:2020)] : {dataSource-1} closed
[2019-08-28 16:44:07.350] [INFO ] - [main][?#?:?] : using logger: com.alibaba.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[2019-08-28 16:44:07.359] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-28 16:44:07.364] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {}
[2019-08-28 16:44:07.641] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@59d4cd39: startup date [Wed Aug 28 16:44:07 CST 2019]; root of context hierarchy
[2019-08-28 16:44:08.060] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-28 16:44:08.135] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ec8a0726] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:44:08.311] [INFO ] - [pool-1-thread-1][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$1.run(AwaitingNonWebApplicationListener.java:61)] :  [Dubbo] Current Spring Boot Application is await...
[2019-08-28 16:44:08.730] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-28 16:44:08.732] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {dubbo.application.id=service-consumer, dubbo.application.name=service-consumer, dubbo.consumer.check=false, dubbo.consumer.timeout=5000, dubbo.monitor=, dubbo.protocol.id=dubbo, dubbo.protocol.name=dubbo, dubbo.protocol.port=20884, dubbo.provider.timeout=5000, dubbo.registry.address=N/A, dubbo.registry.check=false, dubbo.registry.id=my-registry, dubbo.registry.protocol=zookeeper, dubbo.scan=}
[2019-08-28 16:44:08.777] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : The following profiles are active: common,data,eureka,dubbo_provider,dubbo_consumer
[2019-08-28 16:44:08.785] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Refreshing org.springframework.web.context.support.GenericWebApplicationContext@5ae76500: startup date [Wed Aug 28 16:44:08 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@59d4cd39
[2019-08-28 16:44:10.076] [WARN ] - [main][ org.mybatis.logging.Logger.warn(Logger.java:44)] : No MyBatis mapper was found in '[com.baomidou.cloud.service.*.mapper*]' package. Please check your configuration.
[2019-08-28 16:44:10.776] [INFO ] - [main][ org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:172)] : Multiple Spring Data modules found, entering strict repository configuration mode!
[2019-08-28 16:44:11.220] [WARN ] - [main][ com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans(ServiceAnnotationBeanPostProcessor.java:155)] :  [DUBBO] No Spring Bean annotating Dubbo's @Service was found under package[com.bittrade.c2c], dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 16:44:11.637] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : BeanFactory id=61352edb-e99a-3c04-9bd9-f50ca066a043
[2019-08-28 16:44:11.830] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-28 16:44:12.107] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:44:12.121] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionProperties' of type [com.core.framework.props.TransactionProperties$$EnhancerBySpringCGLIB$$e1b8c6cf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:44:12.141] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$ea1bf99b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:44:12.145] [INFO ] - [main][ com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource(DruidDataSourceAutoConfigure.java:56)] : Init DruidDataSource
[2019-08-28 16:44:12.261] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:44:12.392] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003)] : {dataSource-1} inited
[2019-08-28 16:44:12.393] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:44:12.425] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:44:12.437] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$$EnhancerBySpringCGLIB$$64e3ff33] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:44:12.458] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:44:12.466] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:44:12.474] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration$$EnhancerBySpringCGLIB$$7d709c98] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:44:12.513] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:44:12.514] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionConfig' of type [com.core.framework.config.TransactionConfig$$EnhancerBySpringCGLIB$$d6748174] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:44:12.536] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'defaultPointcutAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:44:12.555] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d0700429] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:44:12.865] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' of type [com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration$$EnhancerBySpringCGLIB$$df71a99b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:44:12.881] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:44:12.891] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:44:12.895] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:44:12.899] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:44:12.903] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:44:12.970] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ec8a0726] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:44:17.785] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'clientInboundChannelExecutor'
[2019-08-28 16:44:17.814] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'clientOutboundChannelExecutor'
[2019-08-28 16:44:18.195] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService
[2019-08-28 16:44:18.415] [INFO ] - [main][ com.core.framework.config.redis.JedisClusterConfig.getJedisCluster(JedisClusterConfig.java:35)] : 进入redis集群初始化方法：访问集群地址为：[154.222.138.5:7000, 154.222.138.5:7001, 154.222.138.5:7002, 154.222.138.5:7003, 154.222.138.5:7004, 154.222.138.5:7005]
[2019-08-28 16:44:19.740] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyTradeServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 16:44:21.061] [WARN ] - [main][ com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:98)] :  [DUBBO] Failed to start NettyClient HAHE/192.168.1.12 connect to the server localhost/127.0.0.1:20881 (check == false, ignore and retry later!), cause: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=5760&register.ip=192.168.1.12&side=consumer&timestamp=1566981859741) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=5760&register.ip=192.168.1.12&side=consumer&timestamp=1566981859741) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:89)
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.<init>(NettyClient.java:59)
	at com.alibaba.dubbo.remoting.transport.netty.NettyTransporter.connect(NettyTransporter.java:37)
	at com.alibaba.dubbo.remoting.Transporter$Adaptive.connect(Transporter$Adaptive.java)
	at com.alibaba.dubbo.remoting.Transporters.connect(Transporters.java:75)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchanger.connect(HeaderExchanger.java:39)
	at com.alibaba.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:109)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.initClient(DubboProtocol.java:409)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getSharedClient(DubboProtocol.java:377)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getClients(DubboProtocol.java:354)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.refer(DubboProtocol.java:336)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:108)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:67)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:65)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:394)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:333)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:163)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:66)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceFieldElement.inject(ReferenceAnnotationBeanPostProcessor.java:367)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.postProcessPropertyValues(ReferenceAnnotationBeanPostProcessor.java:92)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:759)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:548)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:386)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:89)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:41)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:541)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:763)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:463)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:209)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-08-28 16:44:21.238] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 16:44:22.467] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-28 16:44:22.469] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-28 16:44:22.499] [INFO ] - [main][ com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281)] : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@795faad
[2019-08-28 16:44:22.743] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/sendMessage],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.sendMessage(com.bittrade.c2c.vo.SendVo)
[2019-08-28 16:44:22.745] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/pullUnreadMessage],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.pullMessage(java.lang.Long)
[2019-08-28 16:44:22.746] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/sendOrder],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.pullOrderDetail(com.bittrade.c2c.vo.SendOrderVo)
[2019-08-28 16:44:22.758] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts/details/{advert_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.getAdvertDetails(java.lang.Long)
[2019-08-28 16:44:22.759] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.listAdverts(com.core.common.DTO.PageDTO<com.bittrade.pojo.dto.TAdvertInfoDTO>,com.bittrade.pojo.vo.QueryAdvertVO,com.core.web.constant.entity.LoginUser)
[2019-08-28 16:44:22.760] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/revoke/{advert_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.revokeAdverts(java.lang.Long,com.core.web.constant.entity.LoginUser)
[2019-08-28 16:44:22.761] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts/users/{coin_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.listAdvertsUsers(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.AdvertUserVO>,java.lang.Long,com.core.web.constant.entity.LoginUser)
[2019-08-28 16:44:22.762] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/publish_advert],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.publishAdvert(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.TAdvertInfoDTO)
[2019-08-28 16:44:22.763] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/suspend],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.suspendAdverts(java.util.List<java.lang.Long>,com.core.web.constant.entity.LoginUser)
[2019-08-28 16:44:22.764] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/place_advert_order/{advert_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.placeAdvertOrder(java.lang.Long,java.math.BigDecimal,java.lang.String,com.core.web.constant.entity.LoginUser)
[2019-08-28 16:44:22.765] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 16:44:22.765] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 16:44:22.766] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 16:44:22.767] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 16:44:22.768] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 16:44:22.769] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 16:44:22.770] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 16:44:22.771] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 16:44:22.771] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 16:44:22.772] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 16:44:22.773] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 16:44:22.773] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 16:44:22.774] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 16:44:22.775] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 16:44:22.776] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 16:44:22.784] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/details/{order_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.getAdvertOrderDetails(java.lang.Long)
[2019-08-28 16:44:22.785] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/click_already_paid/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.clickAlreadyPaid(java.lang.Long)
[2019-08-28 16:44:22.786] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/already_complete],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.alreadyCompleteAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 16:44:22.786] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/already_cancel],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.alreadyCancelAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 16:44:22.787] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/cancel/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.cancelAdvertOrder(java.lang.Long)
[2019-08-28 16:44:22.788] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/no_complete],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.noCompleteAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 16:44:22.789] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/click_already_receipt/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.clickAlreadyReceipt(java.lang.Long)
[2019-08-28 16:44:22.789] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 16:44:22.790] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 16:44:22.791] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 16:44:22.791] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 16:44:22.792] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 16:44:22.793] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 16:44:22.793] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 16:44:22.794] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 16:44:22.795] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 16:44:22.796] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 16:44:22.797] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 16:44:22.797] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 16:44:22.798] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 16:44:22.799] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 16:44:22.799] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 16:44:22.805] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/detail],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetsVO>> com.common.bittrade.controller.TLegalCurrencyAccountController.detail(com.core.web.constant.entity.LoginUser)
[2019-08-28 16:44:22.806] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/conversionTotal],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.ConversionVo> com.common.bittrade.controller.TLegalCurrencyAccountController.totalConversion(com.core.web.constant.entity.LoginUser)
[2019-08-28 16:44:22.807] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getAssetsFeign],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.math.BigDecimal com.common.bittrade.controller.TLegalCurrencyAccountController.getAssetsFeign(java.lang.Long)
[2019-08-28 16:44:22.808] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/availableBalanceFeign],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.lang.String com.common.bittrade.controller.TLegalCurrencyAccountController.availableBalanceFeign(java.lang.Long,java.lang.String)
[2019-08-28 16:44:22.808] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 16:44:22.809] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 16:44:22.810] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 16:44:22.810] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 16:44:22.811] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 16:44:22.812] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 16:44:22.812] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 16:44:22.813] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 16:44:22.814] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 16:44:22.815] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 16:44:22.816] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 16:44:22.817] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 16:44:22.818] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 16:44:22.819] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 16:44:22.820] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 16:44:22.824] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/legalCurrency_coins],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.common.bittrade.controller.TLegalCurrencyCoinController.listLegalCurrencyCoins()
[2019-08-28 16:44:22.825] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 16:44:22.826] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 16:44:22.827] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 16:44:22.827] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 16:44:22.828] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 16:44:22.829] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 16:44:22.829] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 16:44:22.830] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 16:44:22.831] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 16:44:22.831] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 16:44:22.832] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 16:44:22.833] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 16:44:22.834] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 16:44:22.835] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 16:44:22.836] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 16:44:22.842] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/queryType],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetRecordTypeVO>> com.common.bittrade.controller.TLegalCurrencyRecordController.queryTypeForFund()
[2019-08-28 16:44:22.842] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/queryAccountRecord],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.RecordVO>> com.common.bittrade.controller.TLegalCurrencyRecordController.queryAccountRecord(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.AccountTypeDto)
[2019-08-28 16:44:22.843] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 16:44:22.844] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 16:44:22.845] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 16:44:22.845] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 16:44:22.846] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 16:44:22.847] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 16:44:22.847] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 16:44:22.848] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 16:44:22.849] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 16:44:22.850] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 16:44:22.851] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 16:44:22.852] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 16:44:22.852] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 16:44:22.853] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 16:44:22.854] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 16:44:22.858] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/rechargecoinlist],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO com.common.bittrade.controller.WCoinController.rechargecoinlist()
[2019-08-28 16:44:22.859] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/getList],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.model.WCoin>> com.common.bittrade.controller.WCoinController.getList()
[2019-08-28 16:44:22.859] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/Withdrawcoinlist],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO com.common.bittrade.controller.WCoinController.withdrawcoinlist()
[2019-08-28 16:44:22.861] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccount/detail],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetsVO>> com.common.bittrade.controller.WWalletAccountController.detail(com.core.web.constant.entity.LoginUser)
[2019-08-28 16:44:22.861] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccount/conversionTotal],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.ConversionVo> com.common.bittrade.controller.WWalletAccountController.totalConversion(com.core.web.constant.entity.LoginUser)
[2019-08-28 16:44:22.863] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryTypeForFund],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetRecordTypeVO>> com.common.bittrade.controller.WWalletAccountRecordController.queryTypeForFund()
[2019-08-28 16:44:22.864] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryCurrencies],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.model.WCoin>> com.common.bittrade.controller.WWalletAccountRecordController.queryCurrencies()
[2019-08-28 16:44:22.864] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryFundAccountRecord],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.RecordVO>> com.common.bittrade.controller.WWalletAccountRecordController.queryFundAccountRecord(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.AccountTypeDto)
[2019-08-28 16:44:22.868] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
[2019-08-28 16:44:22.869] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
[2019-08-28 16:44:22.870] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
[2019-08-28 16:44:22.875] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2019-08-28 16:44:22.876] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2019-08-28 16:44:23.024] [WARN ] - [DubboClientReconnectTimer-thread-1][ com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:171)] :  [DUBBO] client reconnect to localhost:20881 find error . url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=5760&register.ip=192.168.1.12&side=consumer&timestamp=1566981859741, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=5760&register.ip=192.168.1.12&side=consumer&timestamp=1566981859741) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:156)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	... 3 common frames omitted
[2019-08-28 16:44:24.157] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Exposing 2 endpoint(s) beneath base path '/actuator'
[2019-08-28 16:44:24.190] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2019-08-28 16:44:24.191] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2019-08-28 16:44:24.192] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2019-08-28 16:44:24.529] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'messageBrokerTaskScheduler'
[2019-08-28 16:44:24.631] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped URL path [/c2c/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
[2019-08-28 16:44:24.655] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'brokerChannelExecutor'
[2019-08-28 16:44:25.005] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[2019-08-28 16:44:25.516] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@5ae76500: startup date [Wed Aug 28 16:44:08 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@59d4cd39
[2019-08-28 16:44:25.605] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Detected @ExceptionHandler methods in globalExceptionHandler
[2019-08-28 16:44:25.984] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-28 16:44:25.984] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-28 16:44:27.505] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting beans in phase 0
[2019-08-28 16:44:27.505] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting beans in phase 2147483647
[2019-08-28 16:44:27.506] [INFO ] - [main][ springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:151)] : Context refreshed
[2019-08-28 16:44:27.541] [INFO ] - [main][ springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:154)] : Found 1 custom documentation plugin(s)
[2019-08-28 16:44:27.599] [INFO ] - [main][ springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)] : Scanning for api listing references
[2019-08-28 16:44:28.095] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting...
[2019-08-28 16:44:28.096] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
[2019-08-28 16:44:28.097] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Started.
[2019-08-28 16:44:28.119] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Started AdvertInfoTester in 21.12 seconds (JVM running for 22.965)
[2019-08-28 16:44:28.673] [INFO ] - [Thread-8][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Closing org.springframework.web.context.support.GenericWebApplicationContext@5ae76500: startup date [Wed Aug 28 16:44:08 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@59d4cd39
[2019-08-28 16:44:28.672] [INFO ] - [Thread-2][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$2.run(AwaitingNonWebApplicationListener.java:83)] :  [Dubbo] Current Spring Boot Application is about to shutdown...
[2019-08-28 16:44:28.676] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:64)] :  [DUBBO] Close all registries [], dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 16:44:28.676] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(DubboProtocol.java:438)] :  [DUBBO] Close dubbo connect: 192.168.1.12:0-->localhost/127.0.0.1:20881, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 16:44:28.677] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:63)] :  [DUBBO] Destroy reference: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&default.check=false&default.timeout=5000&dubbo=2.6.2&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=5760&register.ip=192.168.1.12&side=consumer&timestamp=1566981859741, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 16:44:28.763] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:349)] : Initializing Eureka in region us-east-1
[2019-08-28 16:44:29.034] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:63)] :  [DUBBO] Destroy reference: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyService?application=service-consumer&default.check=false&default.timeout=5000&dubbo=2.6.2&interface=com.bittrade.currency.api.service.ITCurrencyService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getCurrencies,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,findAllLegalCurrency,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,findUsableCurrency,updateById,pageMaps,listByMap,getByPK&pid=5760&register.ip=192.168.1.12&side=consumer&timestamp=1566981861239, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 16:44:29.062] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70)] : Using JSON encoding codec LegacyJacksonJson
[2019-08-28 16:44:29.063] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71)] : Using JSON decoding codec LegacyJacksonJson
[2019-08-28 16:44:29.304] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80)] : Using XML encoding codec XStreamXml
[2019-08-28 16:44:29.305] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81)] : Using XML decoding codec XStreamXml
[2019-08-28 16:44:29.629] [INFO ] - [Thread-8][ com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] : Resolving eureka endpoints via configuration
[2019-08-28 16:44:29.669] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958)] : Disable delta property : false
[2019-08-28 16:44:29.670] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:959)] : Single vip registry refresh property : null
[2019-08-28 16:44:29.670] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960)] : Force full registry fetch : false
[2019-08-28 16:44:29.670] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:961)] : Application is null : false
[2019-08-28 16:44:29.670] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:962)] : Registered Applications size is zero : true
[2019-08-28 16:44:29.671] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:964)] : Application version is -1: true
[2019-08-28 16:44:29.671] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1047)] : Getting all instance registry info from the eureka server
[2019-08-28 16:44:31.801] [ERROR] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83)] : Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$f3f30045.CGLIB$eurekaClient$0(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$f3f30045$$FastClassBySpringCGLIB$$2926939d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:365)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$f3f30045.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:583)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1246)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:535)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:193)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 65 common frames omitted
[2019-08-28 16:44:31.803] [WARN ] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:130)] : Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2019-08-28 16:44:31.804] [ERROR] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:972)] : DiscoveryClient_BITTRADE-C2C/192.168.1.12:-1:bittrade-c2c:@project.version@ - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$f3f30045.CGLIB$eurekaClient$0(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$f3f30045$$FastClassBySpringCGLIB$$2926939d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:365)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$f3f30045.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:583)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1246)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:535)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:193)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
[2019-08-28 16:44:31.806] [WARN ] - [Thread-8][ com.netflix.discovery.DiscoveryClient$1.get(DiscoveryClient.java:290)] : Using default backup registry implementation which does not do anything.
[2019-08-28 16:44:31.810] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1264)] : Starting heartbeat executor: renew interval is: 30
[2019-08-28 16:44:31.817] [INFO ] - [Thread-8][ com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60)] : InstanceInfoReplicator onDemand update allowed rate per min is 4
[2019-08-28 16:44:31.829] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:449)] : Discovery Client initialized at timestamp 1566981871825 with initial instances count: 0
[2019-08-28 16:44:31.850] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:888)] : Shutting down DiscoveryClient ...
[2019-08-28 16:44:34.852] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:922)] : Unregistering ...
[2019-08-28 16:44:36.881] [ERROR] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83)] : Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:923)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:901)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:246)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:494)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 46 common frames omitted
[2019-08-28 16:44:36.883] [WARN ] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:130)] : Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2019-08-28 16:44:36.884] [ERROR] - [Thread-8][ com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:926)] : DiscoveryClient_BITTRADE-C2C/192.168.1.12:-1:bittrade-c2c:@project.version@ - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:923)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:901)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:246)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:494)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
[2019-08-28 16:44:36.908] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:911)] : Completed shut down of DiscoveryClient
[2019-08-28 16:44:36.927] [INFO ] - [Thread-8][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:1948)] : {dataSource-1} closing ...
[2019-08-28 16:44:36.932] [INFO ] - [Thread-8][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:2020)] : {dataSource-1} closed
[2019-08-28 16:47:00.292] [INFO ] - [main][?#?:?] : using logger: com.alibaba.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[2019-08-28 16:47:00.301] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-28 16:47:00.309] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {}
[2019-08-28 16:47:00.599] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@59d4cd39: startup date [Wed Aug 28 16:47:00 CST 2019]; root of context hierarchy
[2019-08-28 16:47:01.000] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-28 16:47:01.070] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ec8a0726] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:47:01.247] [INFO ] - [pool-1-thread-1][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$1.run(AwaitingNonWebApplicationListener.java:61)] :  [Dubbo] Current Spring Boot Application is await...
[2019-08-28 16:47:01.676] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-28 16:47:01.677] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {dubbo.application.id=service-consumer, dubbo.application.name=service-consumer, dubbo.consumer.check=false, dubbo.consumer.timeout=5000, dubbo.monitor=, dubbo.protocol.id=dubbo, dubbo.protocol.name=dubbo, dubbo.protocol.port=20884, dubbo.provider.timeout=5000, dubbo.registry.address=N/A, dubbo.registry.check=false, dubbo.registry.id=my-registry, dubbo.registry.protocol=zookeeper, dubbo.scan=}
[2019-08-28 16:47:01.720] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : The following profiles are active: common,data,eureka,dubbo_provider,dubbo_consumer
[2019-08-28 16:47:01.728] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Refreshing org.springframework.web.context.support.GenericWebApplicationContext@5ae76500: startup date [Wed Aug 28 16:47:01 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@59d4cd39
[2019-08-28 16:47:03.039] [WARN ] - [main][ org.mybatis.logging.Logger.warn(Logger.java:44)] : No MyBatis mapper was found in '[com.baomidou.cloud.service.*.mapper*]' package. Please check your configuration.
[2019-08-28 16:47:03.746] [INFO ] - [main][ org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:172)] : Multiple Spring Data modules found, entering strict repository configuration mode!
[2019-08-28 16:47:04.166] [WARN ] - [main][ com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans(ServiceAnnotationBeanPostProcessor.java:155)] :  [DUBBO] No Spring Bean annotating Dubbo's @Service was found under package[com.bittrade.c2c], dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 16:47:04.593] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : BeanFactory id=61352edb-e99a-3c04-9bd9-f50ca066a043
[2019-08-28 16:47:04.779] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-28 16:47:05.045] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:47:05.058] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionProperties' of type [com.core.framework.props.TransactionProperties$$EnhancerBySpringCGLIB$$e1b8c6cf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:47:05.074] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$ea1bf99b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:47:05.078] [INFO ] - [main][ com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource(DruidDataSourceAutoConfigure.java:56)] : Init DruidDataSource
[2019-08-28 16:47:05.178] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:47:05.307] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003)] : {dataSource-1} inited
[2019-08-28 16:47:05.308] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:47:05.339] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:47:05.352] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$$EnhancerBySpringCGLIB$$64e3ff33] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:47:05.372] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:47:05.380] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:47:05.388] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration$$EnhancerBySpringCGLIB$$7d709c98] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:47:05.423] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:47:05.425] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionConfig' of type [com.core.framework.config.TransactionConfig$$EnhancerBySpringCGLIB$$d6748174] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:47:05.448] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'defaultPointcutAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:47:05.467] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d0700429] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:47:05.744] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' of type [com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration$$EnhancerBySpringCGLIB$$df71a99b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:47:05.758] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:47:05.768] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:47:05.772] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:47:05.775] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:47:05.779] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:47:05.834] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ec8a0726] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:47:10.487] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'clientInboundChannelExecutor'
[2019-08-28 16:47:10.515] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'clientOutboundChannelExecutor'
[2019-08-28 16:47:10.915] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService
[2019-08-28 16:47:11.131] [INFO ] - [main][ com.core.framework.config.redis.JedisClusterConfig.getJedisCluster(JedisClusterConfig.java:35)] : 进入redis集群初始化方法：访问集群地址为：[154.222.138.5:7000, 154.222.138.5:7001, 154.222.138.5:7002, 154.222.138.5:7003, 154.222.138.5:7004, 154.222.138.5:7005]
[2019-08-28 16:47:12.339] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyTradeServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 16:47:13.608] [WARN ] - [main][ com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:98)] :  [DUBBO] Failed to start NettyClient HAHE/192.168.1.12 connect to the server localhost/127.0.0.1:20881 (check == false, ignore and retry later!), cause: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=4052&register.ip=192.168.1.12&side=consumer&timestamp=1566982032340) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=4052&register.ip=192.168.1.12&side=consumer&timestamp=1566982032340) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:89)
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.<init>(NettyClient.java:59)
	at com.alibaba.dubbo.remoting.transport.netty.NettyTransporter.connect(NettyTransporter.java:37)
	at com.alibaba.dubbo.remoting.Transporter$Adaptive.connect(Transporter$Adaptive.java)
	at com.alibaba.dubbo.remoting.Transporters.connect(Transporters.java:75)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchanger.connect(HeaderExchanger.java:39)
	at com.alibaba.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:109)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.initClient(DubboProtocol.java:409)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getSharedClient(DubboProtocol.java:377)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getClients(DubboProtocol.java:354)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.refer(DubboProtocol.java:336)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:108)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:67)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:65)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:394)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:333)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:163)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:66)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceFieldElement.inject(ReferenceAnnotationBeanPostProcessor.java:367)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.postProcessPropertyValues(ReferenceAnnotationBeanPostProcessor.java:92)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:759)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:548)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:386)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:89)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:41)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:541)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:763)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:463)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:209)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-08-28 16:47:13.758] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 16:47:14.927] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-28 16:47:14.928] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-28 16:47:14.958] [INFO ] - [main][ com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281)] : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@795faad
[2019-08-28 16:47:15.212] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/sendMessage],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.sendMessage(com.bittrade.c2c.vo.SendVo)
[2019-08-28 16:47:15.215] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/pullUnreadMessage],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.pullMessage(java.lang.Long)
[2019-08-28 16:47:15.216] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/sendOrder],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.pullOrderDetail(com.bittrade.c2c.vo.SendOrderVo)
[2019-08-28 16:47:15.228] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.listAdverts(com.core.common.DTO.PageDTO<com.bittrade.pojo.dto.TAdvertInfoDTO>,com.bittrade.pojo.vo.QueryAdvertVO,com.core.web.constant.entity.LoginUser)
[2019-08-28 16:47:15.229] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts/users/{coin_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.listAdvertsUsers(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.AdvertUserVO>,java.lang.Long,com.core.web.constant.entity.LoginUser)
[2019-08-28 16:47:15.230] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/publish_advert],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.publishAdvert(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.TAdvertInfoDTO)
[2019-08-28 16:47:15.231] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/suspend],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.suspendAdverts(java.util.List<java.lang.Long>,com.core.web.constant.entity.LoginUser)
[2019-08-28 16:47:15.231] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/revoke/{advert_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.revokeAdverts(java.lang.Long,com.core.web.constant.entity.LoginUser)
[2019-08-28 16:47:15.232] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/place_advert_order/{advert_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.placeAdvertOrder(java.lang.Long,java.math.BigDecimal,java.lang.String,com.core.web.constant.entity.LoginUser)
[2019-08-28 16:47:15.233] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts/details/{advert_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.getAdvertDetails(java.lang.Long)
[2019-08-28 16:47:15.234] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 16:47:15.235] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 16:47:15.236] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 16:47:15.237] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 16:47:15.237] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 16:47:15.238] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 16:47:15.239] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 16:47:15.240] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 16:47:15.241] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 16:47:15.241] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 16:47:15.242] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 16:47:15.243] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 16:47:15.244] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 16:47:15.244] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 16:47:15.245] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 16:47:15.252] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/details/{order_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.getAdvertOrderDetails(java.lang.Long)
[2019-08-28 16:47:15.253] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/click_already_paid/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.clickAlreadyPaid(java.lang.Long)
[2019-08-28 16:47:15.254] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/no_complete],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.noCompleteAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 16:47:15.255] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/already_cancel],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.alreadyCancelAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 16:47:15.256] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/already_complete],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.alreadyCompleteAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 16:47:15.257] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/click_already_receipt/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.clickAlreadyReceipt(java.lang.Long)
[2019-08-28 16:47:15.258] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/cancel/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.cancelAdvertOrder(java.lang.Long)
[2019-08-28 16:47:15.258] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 16:47:15.259] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 16:47:15.260] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 16:47:15.260] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 16:47:15.261] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 16:47:15.262] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 16:47:15.263] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 16:47:15.264] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 16:47:15.264] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 16:47:15.265] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 16:47:15.266] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 16:47:15.266] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 16:47:15.267] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 16:47:15.268] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 16:47:15.268] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 16:47:15.275] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/conversionTotal],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.ConversionVo> com.common.bittrade.controller.TLegalCurrencyAccountController.totalConversion(com.core.web.constant.entity.LoginUser)
[2019-08-28 16:47:15.276] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getAssetsFeign],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.math.BigDecimal com.common.bittrade.controller.TLegalCurrencyAccountController.getAssetsFeign(java.lang.Long)
[2019-08-28 16:47:15.277] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/availableBalanceFeign],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.lang.String com.common.bittrade.controller.TLegalCurrencyAccountController.availableBalanceFeign(java.lang.Long,java.lang.String)
[2019-08-28 16:47:15.278] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/detail],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetsVO>> com.common.bittrade.controller.TLegalCurrencyAccountController.detail(com.core.web.constant.entity.LoginUser)
[2019-08-28 16:47:15.278] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 16:47:15.279] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 16:47:15.280] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 16:47:15.280] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 16:47:15.281] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 16:47:15.282] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 16:47:15.282] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 16:47:15.283] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 16:47:15.284] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 16:47:15.285] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 16:47:15.285] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 16:47:15.286] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 16:47:15.287] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 16:47:15.287] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 16:47:15.288] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 16:47:15.292] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/legalCurrency_coins],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.common.bittrade.controller.TLegalCurrencyCoinController.listLegalCurrencyCoins()
[2019-08-28 16:47:15.293] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 16:47:15.294] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 16:47:15.295] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 16:47:15.295] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 16:47:15.296] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 16:47:15.297] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 16:47:15.297] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 16:47:15.298] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 16:47:15.299] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 16:47:15.299] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 16:47:15.300] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 16:47:15.301] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 16:47:15.301] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 16:47:15.302] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 16:47:15.303] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 16:47:15.308] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/queryType],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetRecordTypeVO>> com.common.bittrade.controller.TLegalCurrencyRecordController.queryTypeForFund()
[2019-08-28 16:47:15.309] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/queryAccountRecord],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.RecordVO>> com.common.bittrade.controller.TLegalCurrencyRecordController.queryAccountRecord(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.AccountTypeDto)
[2019-08-28 16:47:15.310] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 16:47:15.310] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 16:47:15.311] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 16:47:15.312] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 16:47:15.312] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 16:47:15.313] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 16:47:15.314] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 16:47:15.314] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 16:47:15.315] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 16:47:15.315] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 16:47:15.316] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 16:47:15.317] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 16:47:15.317] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 16:47:15.318] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 16:47:15.319] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 16:47:15.323] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/rechargecoinlist],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO com.common.bittrade.controller.WCoinController.rechargecoinlist()
[2019-08-28 16:47:15.324] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/getList],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.model.WCoin>> com.common.bittrade.controller.WCoinController.getList()
[2019-08-28 16:47:15.325] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/Withdrawcoinlist],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO com.common.bittrade.controller.WCoinController.withdrawcoinlist()
[2019-08-28 16:47:15.326] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccount/conversionTotal],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.ConversionVo> com.common.bittrade.controller.WWalletAccountController.totalConversion(com.core.web.constant.entity.LoginUser)
[2019-08-28 16:47:15.327] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccount/detail],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetsVO>> com.common.bittrade.controller.WWalletAccountController.detail(com.core.web.constant.entity.LoginUser)
[2019-08-28 16:47:15.329] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryTypeForFund],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetRecordTypeVO>> com.common.bittrade.controller.WWalletAccountRecordController.queryTypeForFund()
[2019-08-28 16:47:15.329] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryFundAccountRecord],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.RecordVO>> com.common.bittrade.controller.WWalletAccountRecordController.queryFundAccountRecord(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.AccountTypeDto)
[2019-08-28 16:47:15.330] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryCurrencies],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.model.WCoin>> com.common.bittrade.controller.WWalletAccountRecordController.queryCurrencies()
[2019-08-28 16:47:15.334] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
[2019-08-28 16:47:15.335] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
[2019-08-28 16:47:15.336] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
[2019-08-28 16:47:15.341] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2019-08-28 16:47:15.341] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2019-08-28 16:47:15.564] [WARN ] - [DubboClientReconnectTimer-thread-1][ com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:171)] :  [DUBBO] client reconnect to localhost:20881 find error . url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=4052&register.ip=192.168.1.12&side=consumer&timestamp=1566982032340, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=4052&register.ip=192.168.1.12&side=consumer&timestamp=1566982032340) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:156)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	... 3 common frames omitted
[2019-08-28 16:47:16.619] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Exposing 2 endpoint(s) beneath base path '/actuator'
[2019-08-28 16:47:16.647] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2019-08-28 16:47:16.648] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2019-08-28 16:47:16.650] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2019-08-28 16:47:16.990] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'messageBrokerTaskScheduler'
[2019-08-28 16:47:17.088] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped URL path [/c2c/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
[2019-08-28 16:47:17.112] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'brokerChannelExecutor'
[2019-08-28 16:47:17.443] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[2019-08-28 16:47:17.906] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@5ae76500: startup date [Wed Aug 28 16:47:01 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@59d4cd39
[2019-08-28 16:47:17.989] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Detected @ExceptionHandler methods in globalExceptionHandler
[2019-08-28 16:47:18.353] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-28 16:47:18.354] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-28 16:47:19.765] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting beans in phase 0
[2019-08-28 16:47:19.766] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting beans in phase 2147483647
[2019-08-28 16:47:19.766] [INFO ] - [main][ springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:151)] : Context refreshed
[2019-08-28 16:47:19.804] [INFO ] - [main][ springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:154)] : Found 1 custom documentation plugin(s)
[2019-08-28 16:47:19.864] [INFO ] - [main][ springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)] : Scanning for api listing references
[2019-08-28 16:47:20.349] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting...
[2019-08-28 16:47:20.349] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
[2019-08-28 16:47:20.351] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Started.
[2019-08-28 16:47:20.370] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Started AdvertInfoTester in 20.411 seconds (JVM running for 22.309)
[2019-08-28 16:47:20.926] [INFO ] - [Thread-2][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$2.run(AwaitingNonWebApplicationListener.java:83)] :  [Dubbo] Current Spring Boot Application is about to shutdown...
[2019-08-28 16:47:20.929] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:64)] :  [DUBBO] Close all registries [], dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 16:47:20.929] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(DubboProtocol.java:438)] :  [DUBBO] Close dubbo connect: 192.168.1.12:0-->localhost/127.0.0.1:20881, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 16:47:20.930] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:63)] :  [DUBBO] Destroy reference: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&default.check=false&default.timeout=5000&dubbo=2.6.2&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=4052&register.ip=192.168.1.12&side=consumer&timestamp=1566982032340, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 16:47:21.018] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:349)] : Initializing Eureka in region us-east-1
[2019-08-28 16:47:21.319] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70)] : Using JSON encoding codec LegacyJacksonJson
[2019-08-28 16:47:21.319] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71)] : Using JSON decoding codec LegacyJacksonJson
[2019-08-28 16:47:21.546] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80)] : Using XML encoding codec XStreamXml
[2019-08-28 16:47:21.547] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81)] : Using XML decoding codec XStreamXml
[2019-08-28 16:47:21.588] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:63)] :  [DUBBO] Destroy reference: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyService?application=service-consumer&default.check=false&default.timeout=5000&dubbo=2.6.2&interface=com.bittrade.currency.api.service.ITCurrencyService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getCurrencies,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,findAllLegalCurrency,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,findUsableCurrency,updateById,pageMaps,listByMap,getByPK&pid=4052&register.ip=192.168.1.12&side=consumer&timestamp=1566982033759, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 16:47:21.844] [INFO ] - [Thread-8][ com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] : Resolving eureka endpoints via configuration
[2019-08-28 16:47:21.882] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958)] : Disable delta property : false
[2019-08-28 16:47:21.883] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:959)] : Single vip registry refresh property : null
[2019-08-28 16:47:21.883] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960)] : Force full registry fetch : false
[2019-08-28 16:47:21.883] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:961)] : Application is null : false
[2019-08-28 16:47:21.883] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:962)] : Registered Applications size is zero : true
[2019-08-28 16:47:21.884] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:964)] : Application version is -1: true
[2019-08-28 16:47:21.884] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1047)] : Getting all instance registry info from the eureka server
[2019-08-28 16:47:24.023] [ERROR] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83)] : Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$f3f30045.CGLIB$eurekaClient$1(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$f3f30045$$FastClassBySpringCGLIB$$2926939d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:365)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$f3f30045.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:583)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1246)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:535)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:193)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 65 common frames omitted
[2019-08-28 16:47:24.025] [WARN ] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:130)] : Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2019-08-28 16:47:24.026] [ERROR] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:972)] : DiscoveryClient_BITTRADE-C2C/192.168.1.12:-1:bittrade-c2c:@project.version@ - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$f3f30045.CGLIB$eurekaClient$1(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$f3f30045$$FastClassBySpringCGLIB$$2926939d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:365)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$f3f30045.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:583)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1246)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:535)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:193)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
[2019-08-28 16:47:24.028] [WARN ] - [Thread-8][ com.netflix.discovery.DiscoveryClient$1.get(DiscoveryClient.java:290)] : Using default backup registry implementation which does not do anything.
[2019-08-28 16:47:24.031] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1264)] : Starting heartbeat executor: renew interval is: 30
[2019-08-28 16:47:24.038] [INFO ] - [Thread-8][ com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60)] : InstanceInfoReplicator onDemand update allowed rate per min is 4
[2019-08-28 16:47:24.046] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:449)] : Discovery Client initialized at timestamp 1566982044044 with initial instances count: 0
[2019-08-28 16:47:24.060] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:888)] : Shutting down DiscoveryClient ...
[2019-08-28 16:47:27.063] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:922)] : Unregistering ...
[2019-08-28 16:47:29.073] [ERROR] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83)] : Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:923)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:901)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:246)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:494)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 46 common frames omitted
[2019-08-28 16:47:29.075] [WARN ] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:130)] : Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2019-08-28 16:47:29.075] [ERROR] - [Thread-8][ com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:926)] : DiscoveryClient_BITTRADE-C2C/192.168.1.12:-1:bittrade-c2c:@project.version@ - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:923)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:901)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:246)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:494)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
[2019-08-28 16:47:29.099] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:911)] : Completed shut down of DiscoveryClient
[2019-08-28 16:47:29.116] [INFO ] - [Thread-8][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:1948)] : {dataSource-1} closing ...
[2019-08-28 16:47:29.122] [INFO ] - [Thread-8][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:2020)] : {dataSource-1} closed
[2019-08-28 16:49:55.541] [INFO ] - [main][?#?:?] : using logger: com.alibaba.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[2019-08-28 16:49:55.549] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-28 16:49:55.554] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {}
[2019-08-28 16:49:55.827] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@59d4cd39: startup date [Wed Aug 28 16:49:55 CST 2019]; root of context hierarchy
[2019-08-28 16:49:56.227] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-28 16:49:56.298] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ec8a0726] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:49:56.474] [INFO ] - [pool-1-thread-1][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$1.run(AwaitingNonWebApplicationListener.java:61)] :  [Dubbo] Current Spring Boot Application is await...
[2019-08-28 16:49:56.895] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.WelcomeLogoApplicationListener.onApplicationEvent(WelcomeLogoApplicationListener.java:53)] : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.2) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

[2019-08-28 16:49:56.896] [INFO ] - [main][ com.alibaba.boot.dubbo.context.event.OverrideDubboConfigApplicationListener.onApplicationEvent(OverrideDubboConfigApplicationListener.java:68)] : Dubbo Config was overridden by externalized configuration {dubbo.application.id=service-consumer, dubbo.application.name=service-consumer, dubbo.consumer.check=false, dubbo.consumer.timeout=5000, dubbo.monitor=, dubbo.protocol.id=dubbo, dubbo.protocol.name=dubbo, dubbo.protocol.port=20884, dubbo.provider.timeout=5000, dubbo.registry.address=N/A, dubbo.registry.check=false, dubbo.registry.id=my-registry, dubbo.registry.protocol=zookeeper, dubbo.scan=}
[2019-08-28 16:49:56.940] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : The following profiles are active: common,data,eureka,dubbo_provider,dubbo_consumer
[2019-08-28 16:49:56.949] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Refreshing org.springframework.web.context.support.GenericWebApplicationContext@5ae76500: startup date [Wed Aug 28 16:49:56 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@59d4cd39
[2019-08-28 16:49:58.246] [WARN ] - [main][ org.mybatis.logging.Logger.warn(Logger.java:44)] : No MyBatis mapper was found in '[com.baomidou.cloud.service.*.mapper*]' package. Please check your configuration.
[2019-08-28 16:49:58.978] [INFO ] - [main][ org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:172)] : Multiple Spring Data modules found, entering strict repository configuration mode!
[2019-08-28 16:49:59.401] [WARN ] - [main][ com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor.registerServiceBeans(ServiceAnnotationBeanPostProcessor.java:155)] :  [DUBBO] No Spring Bean annotating Dubbo's @Service was found under package[com.bittrade.c2c], dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 16:49:59.825] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : BeanFactory id=61352edb-e99a-3c04-9bd9-f50ca066a043
[2019-08-28 16:50:00.020] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2019-08-28 16:50:00.285] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:50:00.299] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionProperties' of type [com.core.framework.props.TransactionProperties$$EnhancerBySpringCGLIB$$e1b8c6cf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:50:00.315] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$ea1bf99b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:50:00.319] [INFO ] - [main][ com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource(DruidDataSourceAutoConfigure.java:56)] : Init DruidDataSource
[2019-08-28 16:50:00.421] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:50:00.546] [INFO ] - [main][ com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:1003)] : {dataSource-1} inited
[2019-08-28 16:50:00.547] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:50:00.576] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:50:00.587] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$$EnhancerBySpringCGLIB$$64e3ff33] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:50:00.605] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:50:00.614] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:50:00.621] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration$$EnhancerBySpringCGLIB$$7d709c98] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:50:00.656] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:50:00.657] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'transactionConfig' of type [com.core.framework.config.TransactionConfig$$EnhancerBySpringCGLIB$$d6748174] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:50:00.680] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'defaultPointcutAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:50:00.697] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d0700429] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:50:00.988] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' of type [com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration$$EnhancerBySpringCGLIB$$df71a99b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:50:01.002] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:50:01.011] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:50:01.015] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:50:01.018] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:50:01.022] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:50:01.077] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ec8a0726] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-08-28 16:50:05.708] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'clientInboundChannelExecutor'
[2019-08-28 16:50:05.734] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'clientOutboundChannelExecutor'
[2019-08-28 16:50:06.355] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService
[2019-08-28 16:50:06.574] [INFO ] - [main][ com.core.framework.config.redis.JedisClusterConfig.getJedisCluster(JedisClusterConfig.java:35)] : 进入redis集群初始化方法：访问集群地址为：[154.222.138.5:7000, 154.222.138.5:7001, 154.222.138.5:7002, 154.222.138.5:7003, 154.222.138.5:7004, 154.222.138.5:7005]
[2019-08-28 16:50:07.878] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyTradeServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 16:50:09.158] [WARN ] - [main][ com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:98)] :  [DUBBO] Failed to start NettyClient HAHE/192.168.1.12 connect to the server localhost/127.0.0.1:20881 (check == false, ignore and retry later!), cause: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=6268&register.ip=192.168.1.12&side=consumer&timestamp=1566982207879) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=6268&register.ip=192.168.1.12&side=consumer&timestamp=1566982207879) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.<init>(AbstractClient.java:89)
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.<init>(NettyClient.java:59)
	at com.alibaba.dubbo.remoting.transport.netty.NettyTransporter.connect(NettyTransporter.java:37)
	at com.alibaba.dubbo.remoting.Transporter$Adaptive.connect(Transporter$Adaptive.java)
	at com.alibaba.dubbo.remoting.Transporters.connect(Transporters.java:75)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchanger.connect(HeaderExchanger.java:39)
	at com.alibaba.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:109)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.initClient(DubboProtocol.java:409)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getSharedClient(DubboProtocol.java:377)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.getClients(DubboProtocol.java:354)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.refer(DubboProtocol.java:336)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:65)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:108)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:67)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:394)
	at com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:333)
	at com.alibaba.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:163)
	at com.alibaba.dubbo.config.spring.ReferenceBean.getObject(ReferenceBean.java:66)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceFieldElement.inject(ReferenceAnnotationBeanPostProcessor.java:367)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.postProcessPropertyValues(ReferenceAnnotationBeanPostProcessor.java:92)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:759)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:548)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:386)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:89)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:41)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:541)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:763)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:463)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:209)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-08-28 16:50:09.314] [WARN ] - [main][ com.alibaba.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:242)] :  [DUBBO] Using default dubbo resolve file C:\Users\Administrator\dubbo-resolve.properties replace com.bittrade.currency.api.service.ITCurrencyServicedubbo://localhost:20881 to p2p invoke remote service., dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 16:50:10.500] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-28 16:50:10.501] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-28 16:50:10.531] [INFO ] - [main][ com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281)] : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@57b33c29
[2019-08-28 16:50:10.769] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/sendMessage],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.sendMessage(com.bittrade.c2c.vo.SendVo)
[2019-08-28 16:50:10.771] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/pullUnreadMessage],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.pullMessage(java.lang.Long)
[2019-08-28 16:50:10.772] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/sendOrder],methods=[POST]}" onto public com.core.common.DTO.ReturnDTO com.bittrade.c2c.controller.ChatController.pullOrderDetail(com.bittrade.c2c.vo.SendOrderVo)
[2019-08-28 16:50:10.785] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.listAdverts(com.core.common.DTO.PageDTO<com.bittrade.pojo.dto.TAdvertInfoDTO>,com.bittrade.pojo.vo.QueryAdvertVO,com.core.web.constant.entity.LoginUser)
[2019-08-28 16:50:10.786] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts/details/{advert_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.getAdvertDetails(java.lang.Long)
[2019-08-28 16:50:10.787] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/publish_advert],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.publishAdvert(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.TAdvertInfoDTO)
[2019-08-28 16:50:10.788] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/adverts/users/{coin_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.listAdvertsUsers(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.AdvertUserVO>,java.lang.Long,com.core.web.constant.entity.LoginUser)
[2019-08-28 16:50:10.789] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/suspend],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.suspendAdverts(java.util.List<java.lang.Long>,com.core.web.constant.entity.LoginUser)
[2019-08-28 16:50:10.790] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/revoke/{advert_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.revokeAdverts(java.lang.Long,com.core.web.constant.entity.LoginUser)
[2019-08-28 16:50:10.791] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/action/place_advert_order/{advert_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertInfoController.placeAdvertOrder(java.lang.Long,java.math.BigDecimal,java.lang.String,com.core.web.constant.entity.LoginUser)
[2019-08-28 16:50:10.792] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 16:50:10.793] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 16:50:10.794] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 16:50:10.794] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 16:50:10.795] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 16:50:10.796] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 16:50:10.797] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 16:50:10.797] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 16:50:10.798] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 16:50:10.799] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 16:50:10.799] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 16:50:10.800] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 16:50:10.801] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 16:50:10.801] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 16:50:10.802] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertInfo/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 16:50:10.809] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/details/{order_id}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.getAdvertOrderDetails(java.lang.Long)
[2019-08-28 16:50:10.810] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/no_complete],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.noCompleteAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 16:50:10.811] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/cancel/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.cancelAdvertOrder(java.lang.Long)
[2019-08-28 16:50:10.812] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/click_already_receipt/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.clickAlreadyReceipt(java.lang.Long)
[2019-08-28 16:50:10.813] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/already_complete],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.alreadyCompleteAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 16:50:10.814] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/advert_orders/already_cancel],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.alreadyCancelAdvertOrders(com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.model.TAdvertOrder>,com.core.web.constant.entity.LoginUser)
[2019-08-28 16:50:10.814] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/action/click_already_paid/{order_id}],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.bittrade.c2c.controller.TAdvertOrderController.clickAlreadyPaid(java.lang.Long)
[2019-08-28 16:50:10.815] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 16:50:10.816] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 16:50:10.816] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 16:50:10.817] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 16:50:10.818] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 16:50:10.819] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 16:50:10.819] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 16:50:10.820] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 16:50:10.821] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 16:50:10.821] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 16:50:10.822] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 16:50:10.823] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 16:50:10.823] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 16:50:10.824] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 16:50:10.825] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tAdvertOrder/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 16:50:10.831] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/detail],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetsVO>> com.common.bittrade.controller.TLegalCurrencyAccountController.detail(com.core.web.constant.entity.LoginUser)
[2019-08-28 16:50:10.832] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/availableBalanceFeign],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.lang.String com.common.bittrade.controller.TLegalCurrencyAccountController.availableBalanceFeign(java.lang.Long,java.lang.String)
[2019-08-28 16:50:10.833] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/conversionTotal],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.ConversionVo> com.common.bittrade.controller.TLegalCurrencyAccountController.totalConversion(com.core.web.constant.entity.LoginUser)
[2019-08-28 16:50:10.833] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getAssetsFeign],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.math.BigDecimal com.common.bittrade.controller.TLegalCurrencyAccountController.getAssetsFeign(java.lang.Long)
[2019-08-28 16:50:10.834] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 16:50:10.835] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 16:50:10.835] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 16:50:10.836] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 16:50:10.837] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 16:50:10.837] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 16:50:10.838] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 16:50:10.839] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 16:50:10.839] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 16:50:10.840] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 16:50:10.841] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 16:50:10.842] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 16:50:10.843] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 16:50:10.844] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 16:50:10.845] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyAccount/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 16:50:10.850] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/legalCurrency_coins],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.lang.Object> com.common.bittrade.controller.TLegalCurrencyCoinController.listLegalCurrencyCoins()
[2019-08-28 16:50:10.851] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 16:50:10.851] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 16:50:10.852] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 16:50:10.853] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 16:50:10.855] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 16:50:10.856] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 16:50:10.857] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 16:50:10.858] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 16:50:10.859] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 16:50:10.860] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 16:50:10.861] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 16:50:10.861] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 16:50:10.862] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 16:50:10.863] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 16:50:10.863] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyCoin/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 16:50:10.868] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/queryAccountRecord],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.RecordVO>> com.common.bittrade.controller.TLegalCurrencyRecordController.queryAccountRecord(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.AccountTypeDto)
[2019-08-28 16:50:10.869] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/queryType],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetRecordTypeVO>> com.common.bittrade.controller.TLegalCurrencyRecordController.queryTypeForFund()
[2019-08-28 16:50:10.870] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/add],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.add(Model)
[2019-08-28 16:50:10.870] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/get],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.get()
[2019-08-28 16:50:10.871] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyWithSelectiveBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveBy(Model,Model)
[2019-08-28 16:50:10.872] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyWithSelectiveByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyWithSelectiveByPK(Model)
[2019-08-28 16:50:10.872] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsByPage],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPage(Model,int,int)
[2019-08-28 16:50:10.873] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getBy(Model)
[2019-08-28 16:50:10.873] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/removeBy],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeBy(Model)
[2019-08-28 16:50:10.874] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsBy],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.getsBy(Model)
[2019-08-28 16:50:10.875] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/gets],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public java.util.List<Model> com.core.framework.base.controller.BaseController.gets()
[2019-08-28 16:50:10.876] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getsByPagination],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.PageDTO<Model> com.core.framework.base.controller.BaseController.getsByPagination(Model)
[2019-08-28 16:50:10.877] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/addWithSelective],methods=[OPTIONS || POST],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.addWithSelective(Model)
[2019-08-28 16:50:10.878] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/removeByPK],methods=[OPTIONS || DELETE],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.removeByPK(java.io.Serializable)
[2019-08-28 16:50:10.879] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyByPK],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyByPK(Model)
[2019-08-28 16:50:10.880] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/modifyBy],methods=[OPTIONS || PUT],produces=[application/json;charset=UTF-8]}" onto public int com.core.framework.base.controller.BaseController.modifyBy(Model,Model)
[2019-08-28 16:50:10.881] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/tLegalCurrencyRecord/getByPK],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public Model com.core.framework.base.controller.BaseController.getByPK(int)
[2019-08-28 16:50:10.885] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/Withdrawcoinlist],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO com.common.bittrade.controller.WCoinController.withdrawcoinlist()
[2019-08-28 16:50:10.886] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/getList],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.model.WCoin>> com.common.bittrade.controller.WCoinController.getList()
[2019-08-28 16:50:10.887] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wCoin/rechargecoinlist],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO com.common.bittrade.controller.WCoinController.rechargecoinlist()
[2019-08-28 16:50:10.888] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccount/detail],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetsVO>> com.common.bittrade.controller.WWalletAccountController.detail(com.core.web.constant.entity.LoginUser)
[2019-08-28 16:50:10.889] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccount/conversionTotal],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.bittrade.pojo.vo.ConversionVo> com.common.bittrade.controller.WWalletAccountController.totalConversion(com.core.web.constant.entity.LoginUser)
[2019-08-28 16:50:10.891] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryFundAccountRecord],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<com.baomidou.mybatisplus.extension.plugins.pagination.Page<com.bittrade.pojo.vo.RecordVO>> com.common.bittrade.controller.WWalletAccountRecordController.queryFundAccountRecord(com.core.web.constant.entity.LoginUser,com.bittrade.pojo.dto.AccountTypeDto)
[2019-08-28 16:50:10.891] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryTypeForFund],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.vo.AssetRecordTypeVO>> com.common.bittrade.controller.WWalletAccountRecordController.queryTypeForFund()
[2019-08-28 16:50:10.892] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/wWalletAccountRecord/queryCurrencies],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.core.common.DTO.ReturnDTO<java.util.List<com.bittrade.pojo.model.WCoin>> com.common.bittrade.controller.WWalletAccountRecordController.queryCurrencies()
[2019-08-28 16:50:10.896] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
[2019-08-28 16:50:10.898] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
[2019-08-28 16:50:10.899] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
[2019-08-28 16:50:10.903] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2019-08-28 16:50:10.904] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2019-08-28 16:50:11.118] [WARN ] - [DubboClientReconnectTimer-thread-1][ com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:171)] :  [DUBBO] client reconnect to localhost:20881 find error . url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=6268&register.ip=192.168.1.12&side=consumer&timestamp=1566982207879, dubbo version: 2.6.2, current host: 192.168.1.12
com.alibaba.dubbo.remoting.RemotingException: client(url: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&codec=dubbo&default.check=false&default.timeout=5000&dubbo=2.6.2&heartbeat=60000&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=6268&register.ip=192.168.1.12&side=consumer&timestamp=1566982207879) failed to connect to server localhost/127.0.0.1:20881, error message is:Connection refused: no further information
	at com.alibaba.dubbo.remoting.transport.netty.NettyClient.doConnect(NettyClient.java:124)
	at com.alibaba.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:275)
	at com.alibaba.dubbo.remoting.transport.AbstractClient$1.run(AbstractClient.java:156)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.connect(NioClientSocketPipelineSink.java:384)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.processSelectedKeys(NioClientSocketPipelineSink.java:354)
	at org.jboss.netty.channel.socket.nio.NioClientSocketPipelineSink$Boss.run(NioClientSocketPipelineSink.java:276)
	... 3 common frames omitted
[2019-08-28 16:50:12.204] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Exposing 2 endpoint(s) beneath base path '/actuator'
[2019-08-28 16:50:12.235] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2019-08-28 16:50:12.236] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
[2019-08-28 16:50:12.237] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2019-08-28 16:50:12.570] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'messageBrokerTaskScheduler'
[2019-08-28 16:50:12.666] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped URL path [/c2c/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
[2019-08-28 16:50:12.690] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Initializing ExecutorService 'brokerChannelExecutor'
[2019-08-28 16:50:13.018] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[2019-08-28 16:50:13.484] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@5ae76500: startup date [Wed Aug 28 16:49:56 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@59d4cd39
[2019-08-28 16:50:13.569] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Detected @ExceptionHandler methods in globalExceptionHandler
[2019-08-28 16:50:13.956] [WARN ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)] : No URLs will be polled as dynamic configuration sources.
[2019-08-28 16:50:13.957] [INFO ] - [main][ com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)] : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2019-08-28 16:50:15.400] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting beans in phase 0
[2019-08-28 16:50:15.400] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting beans in phase 2147483647
[2019-08-28 16:50:15.401] [INFO ] - [main][ springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:151)] : Context refreshed
[2019-08-28 16:50:15.441] [INFO ] - [main][ springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:154)] : Found 1 custom documentation plugin(s)
[2019-08-28 16:50:15.498] [INFO ] - [main][ springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41)] : Scanning for api listing references
[2019-08-28 16:50:16.008] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Starting...
[2019-08-28 16:50:16.009] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
[2019-08-28 16:50:16.011] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Started.
[2019-08-28 16:50:16.031] [INFO ] - [main][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Started AdvertInfoTester in 20.818 seconds (JVM running for 22.611)
[2019-08-28 16:50:16.625] [INFO ] - [Thread-8][ org.apache.commons.logging.impl.Jdk14Logger.log(Jdk14Logger.java:87)] : Closing org.springframework.web.context.support.GenericWebApplicationContext@5ae76500: startup date [Wed Aug 28 16:49:56 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@59d4cd39
[2019-08-28 16:50:16.625] [INFO ] - [Thread-2][ com.alibaba.boot.dubbo.context.event.AwaitingNonWebApplicationListener$2.run(AwaitingNonWebApplicationListener.java:83)] :  [Dubbo] Current Spring Boot Application is about to shutdown...
[2019-08-28 16:50:16.627] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(AbstractRegistryFactory.java:64)] :  [DUBBO] Close all registries [], dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 16:50:16.628] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(DubboProtocol.java:438)] :  [DUBBO] Close dubbo connect: 192.168.1.12:0-->localhost/127.0.0.1:20881, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 16:50:16.628] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:63)] :  [DUBBO] Destroy reference: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyTradeService?application=service-consumer&default.check=false&default.timeout=5000&dubbo=2.6.2&interface=com.bittrade.currency.api.service.ITCurrencyTradeService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,queryCurrencyTradeAtFirst,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,findTradeByCurrencyId2,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,updateById,pageMaps,listByMap,getByPK&pid=6268&register.ip=192.168.1.12&side=consumer&timestamp=1566982207879, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 16:50:16.717] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:349)] : Initializing Eureka in region us-east-1
[2019-08-28 16:50:17.007] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70)] : Using JSON encoding codec LegacyJacksonJson
[2019-08-28 16:50:17.008] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71)] : Using JSON decoding codec LegacyJacksonJson
[2019-08-28 16:50:17.125] [INFO ] - [DubboShutdownHook][ com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(AbstractProtocol.java:63)] :  [DUBBO] Destroy reference: dubbo://localhost:20881/com.bittrade.currency.api.service.ITCurrencyService?application=service-consumer&default.check=false&default.timeout=5000&dubbo=2.6.2&interface=com.bittrade.currency.api.service.ITCurrencyService&methods=removeById,lambdaQuery,removeByMap,listByIds,removeBy,getBy,updateBatchById,getsBy,saveOrUpdate,getsDTOByPage,add,modifyWithSelectiveBy,getDTOBy,query,count,listObjs,list,getMap,getsByPage,getCurrencies,getById,addWithSelective,getOne,page,modifyByPK,removeByPK,save,findAllLegalCurrency,update,getObj,saveOrUpdateBatch,remove,getBaseMapper,removeByIds,get,lambdaUpdate,modifyBy,getsByPagination,listMaps,saveBatch,modifyWithSelectiveByPK,getsDTOBy,gets,findUsableCurrency,updateById,pageMaps,listByMap,getByPK&pid=6268&register.ip=192.168.1.12&side=consumer&timestamp=1566982209314, dubbo version: 2.6.2, current host: 192.168.1.12
[2019-08-28 16:50:17.247] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80)] : Using XML encoding codec XStreamXml
[2019-08-28 16:50:17.247] [INFO ] - [Thread-8][ com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81)] : Using XML decoding codec XStreamXml
[2019-08-28 16:50:17.576] [INFO ] - [Thread-8][ com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43)] : Resolving eureka endpoints via configuration
[2019-08-28 16:50:17.618] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958)] : Disable delta property : false
[2019-08-28 16:50:17.619] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:959)] : Single vip registry refresh property : null
[2019-08-28 16:50:17.619] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960)] : Force full registry fetch : false
[2019-08-28 16:50:17.619] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:961)] : Application is null : false
[2019-08-28 16:50:17.619] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:962)] : Registered Applications size is zero : true
[2019-08-28 16:50:17.620] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:964)] : Application version is -1: true
[2019-08-28 16:50:17.620] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1047)] : Getting all instance registry info from the eureka server
[2019-08-28 16:50:19.749] [ERROR] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83)] : Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$f3f30045.CGLIB$eurekaClient$0(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$f3f30045$$FastClassBySpringCGLIB$$2926939d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:365)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$f3f30045.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:583)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1246)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:535)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:193)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 65 common frames omitted
[2019-08-28 16:50:19.751] [WARN ] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:130)] : Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2019-08-28 16:50:19.752] [ERROR] - [Thread-8][ com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:972)] : DiscoveryClient_BITTRADE-C2C/192.168.1.12:-1:bittrade-c2c:@project.version@ - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$f3f30045.CGLIB$eurekaClient$0(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$f3f30045$$FastClassBySpringCGLIB$$2926939d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:365)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$f3f30045.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:583)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1246)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:535)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:193)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
[2019-08-28 16:50:19.753] [WARN ] - [Thread-8][ com.netflix.discovery.DiscoveryClient$1.get(DiscoveryClient.java:290)] : Using default backup registry implementation which does not do anything.
[2019-08-28 16:50:19.757] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1264)] : Starting heartbeat executor: renew interval is: 30
[2019-08-28 16:50:19.764] [INFO ] - [Thread-8][ com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:60)] : InstanceInfoReplicator onDemand update allowed rate per min is 4
[2019-08-28 16:50:19.773] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:449)] : Discovery Client initialized at timestamp 1566982219770 with initial instances count: 0
[2019-08-28 16:50:19.796] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:888)] : Shutting down DiscoveryClient ...
[2019-08-28 16:50:22.798] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:922)] : Unregistering ...
[2019-08-28 16:50:24.825] [ERROR] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:83)] : Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:923)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:901)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:246)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:494)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 46 common frames omitted
[2019-08-28 16:50:24.826] [WARN ] - [Thread-8][ com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:130)] : Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2019-08-28 16:50:24.827] [ERROR] - [Thread-8][ com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:926)] : DiscoveryClient_BITTRADE-C2C/192.168.1.12:-1:bittrade-c2c:@project.version@ - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:923)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:901)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:246)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:494)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy199.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935)
[2019-08-28 16:50:24.850] [INFO ] - [Thread-8][ com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:911)] : Completed shut down of DiscoveryClient
[2019-08-28 16:50:24.862] [INFO ] - [Thread-8][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:1948)] : {dataSource-1} closing ...
[2019-08-28 16:50:24.868] [INFO ] - [Thread-8][ com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:2020)] : {dataSource-1} closed
