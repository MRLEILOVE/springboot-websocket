<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bittrade.admin.dao.sys.SysRoleMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.bittrade.admin.model.domain.SysRole">
        <id column="role_id" property="roleId" />
        <result column="role_name" property="roleName" />
        <result column="role_key" property="roleKey" />
        <result column="role_sort" property="roleSort" />
        <result column="data_scope" property="dataScope" />
        <result column="status" property="status" />
        <result column="del_flag" property="delFlag" />
        <result column="create_by" property="createBy" />
        <result column="create_time" property="createTime" />
        <result column="update_by" property="updateBy" />
        <result column="update_time" property="updateTime" />
        <result column="remark" property="remark" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        role_id AS roleId, role_name AS roleName, role_key AS roleKey, role_sort AS roleSort, data_scope AS dataScope, status, del_flag AS delFlag, create_by AS createBy, create_time AS createTime, update_by AS updateBy, update_time AS updateTime, remark
    </sql>
    
    <sql id="selectRoleContactVo">
        select distinct r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.create_by,
            r.status, r.del_flag, r.create_time, r.remark 
        from sys_role r
	        left join sys_user_role ur on ur.role_id = r.role_id
	        left join sys_user u on u.user_id = ur.user_id
	        left join sys_dept d on u.dept_id = d.dept_id
    </sql>
    
    <sql id="selectRoleVo">
		select r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.status, r.del_flag, r.create_time, r.remark 
        from sys_role r
	</sql>
    
    <select id="selectRolesByUserId" parameterType="Integer" resultMap="BaseResultMap">
		<include refid="selectRoleContactVo"/>
		WHERE r.del_flag = '1' and ur.user_id = #{userId}
	</select>
	
	<select id="selectRoleList" parameterType="com.bittrade.admin.model.domain.SysRole" resultMap="BaseResultMap">
		<include refid="selectRoleContactVo"/>
		where r.del_flag = '1'
		<if test="role.roleName != null and role.roleName != ''">
			AND r.role_name like concat('%', #{role.roleName}, '%')
		</if>
		<if test="role.status != null and role.status != ''">
			AND r.status = #{role.status}
		</if>
		<if test="role.roleKey != null and role.roleKey != ''">
			AND r.role_key like concat('%', #{role.roleKey}, '%')
		</if>
		<if test="role.dataScope != null and role.dataScope != ''">
			AND r.data_scope = #{role.dataScope}
		</if>
		<if test="role.params.beginTime != null and role.params.beginTime != ''"><!-- 开始时间检索 -->
			and date_format(r.create_time,'%y%m%d') &gt;= date_format(#{role.params.beginTime},'%y%m%d')
		</if>
		<if test="role.params.endTime != null and role.params.endTime != ''"><!-- 结束时间检索 -->
			and date_format(r.create_time,'%y%m%d') &lt;= date_format(#{role.params.endTime},'%y%m%d')
		</if>
	</select>
	
	<select id="selectRoleById" parameterType="Integer" resultMap="BaseResultMap">
		<include refid="selectRoleVo"/>
		where r.del_flag = '1' and r.role_id = #{roleId}
	</select>
	
	<select id="checkRoleNameUnique" parameterType="String" resultMap="BaseResultMap">
		<include refid="selectRoleVo"/>
		 where r.role_name=#{roleName}
	</select>
	
	<select id="checkRoleKeyUnique" parameterType="String" resultMap="BaseResultMap">
		<include refid="selectRoleVo"/>
		 where r.role_key=#{roleKey}
	</select>
	
	<delete id="deleteRoleById" parameterType="Integer">
 		delete from sys_role where role_id = #{roleId}
 	</delete>
 	
 	<delete id="deleteRoleByIds" parameterType="Integer">
 	    update sys_role set del_flag = '0' where role_id in
 		<foreach collection="array" item="roleId" open="(" separator="," close=")">
 			#{roleId}
        </foreach> 
 	</delete>
 	
 	<update id="updateRole" parameterType="com.bittrade.admin.model.domain.SysRole">
 		update sys_role
 		<set>
 			<if test="roleName != null and roleName != ''">role_name = #{roleName},</if>
 			<if test="roleKey != null and roleKey != ''">role_key = #{roleKey},</if>
 			<if test="roleSort != null and roleSort != ''">role_sort = #{roleSort},</if>
 			<if test="dataScope != null and dataScope != ''">data_scope = #{dataScope},</if>
 			<if test="status != null and status != ''">status = #{status},</if>
 			<if test="remark != null and remark != ''">remark = #{remark},</if>
 			<if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
 			update_time = sysdate()
 		</set>
 		where role_id = #{roleId}
	</update>
 	
 	<insert id="insertRole" parameterType="com.bittrade.admin.model.domain.SysRole" useGeneratedKeys="true" keyProperty="roleId">
 		insert into sys_role(
 			<if test="roleId != null and roleId != 0">role_id,</if>
 			<if test="roleName != null and roleName != ''">role_name,</if>
 			<if test="roleKey != null and roleKey != ''">role_key,</if>
 			<if test="roleSort != null and roleSort != ''">role_sort,</if>
 			<if test="dataScope != null and dataScope != ''">data_scope,</if>
 			<if test="status != null and status != ''">status,</if>
 			<if test="remark != null and remark != ''">remark,</if>
 			<if test="createBy != null and createBy != ''">create_by,</if>
 			create_time
 		)values(
 			<if test="roleId != null and roleId != 0">#{roleId},</if>
 			<if test="roleName != null and roleName != ''">#{roleName},</if>
 			<if test="roleKey != null and roleKey != ''">#{roleKey},</if>
 			<if test="roleSort != null and roleSort != ''">#{roleSort},</if>
 			<if test="dataScope != null and dataScope != ''">#{dataScope},</if>
 			<if test="status != null and status != ''">#{status},</if>
 			<if test="remark != null and remark != ''">#{remark},</if>
 			<if test="createBy != null and createBy != ''">#{createBy},</if>
 			sysdate()
 		)
	</insert>
</mapper>