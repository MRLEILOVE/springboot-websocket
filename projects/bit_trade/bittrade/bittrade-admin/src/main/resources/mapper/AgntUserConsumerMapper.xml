<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jdcloud.provider.mapper.AgntUserConsumerMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.jdcloud.provider.pojo.AgntUserConsumer">
        <id column="agnt_id" property="agntId" />
        <result column="user_id" property="userId" />
        <result column="user_name" property="userName" />
        <result column="user_phone" property="userPhone" />
        <result column="user_account" property="userAccount" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        agnt_id AS agntId, user_id AS userId, user_name AS userName, user_phone AS userPhone, user_account AS userAccount
    </sql>

	<select id="selectSubAgntUCountbyId" resultType="Integer">
		SELECT COUNT(au.user_id)
		FROM agnt_user_consumer au
		INNER JOIN agnt_user u ON u.`agnt_id` = au.`agnt_id`
		WHERE FIND_IN_SET(#{agntId}, u.`ancestors`) OR u.`agnt_id` = #{agntId}
	</select>

    <select id="agntCustomerCount" resultType="com.jdcloud.provider.dto.AgntCountDto">
        SELECT COUNT(t1.user_id) agntCount, t2.agnt_level agntLevel
        FROM agnt_user_consumer t1
        INNer JOIN agnt_user t2 ON t1.agnt_id = t2.agnt_id
        GROUP BY t2.agnt_level
    </select>

    <select id="selectConsumerList" resultType="com.jdcloud.provider.pojo.vo.ConsumerVo">
        SELECT
        uc.user_id userId,
        uc.agnt_id agntId,
        ua.login_name userPhone,                <!-- 登录名 -->
        ua.real_name userName,                  <!-- 姓名 -->
        ua.create_time createTime,              <!-- 注册时间 -->
        ua.total_deposits totalDeposits, 	    <!-- 总充值 -->
        ua.total_withdrawals totalWithdrawals,  <!-- 总提现 -->
        ua.balance balance,			            <!-- 账户余额 -->
        ua.used_margin usedMargin,		        <!-- 占用保证金 -->
        ua.internal_account internalAccount,	<!-- 内部账号 -->
        au.agnt_name agntName,		            <!-- 邀请人 -->
        IFNULL( ro.totalDepositsCNY, 0 ) totalDepositsCNY,
        IFNULL( wo.totalWithdrawalsCNY, 0 ) totalWithdrawalsCNY
        FROM agnt_user_consumer uc
        LEFT JOIN t_user_account ua ON ua.`user_id` = uc.`user_id`
        LEFT JOIN agnt_user au on uc.agnt_id = au.agnt_id
        LEFT JOIN ( SELECT SUM( order_amount ) totalDepositsCNY, user_id FROM t_recharge_order WHERE `status` = 3 GROUP BY user_id ) ro ON uc.`user_id` = ro.user_id
        LEFT JOIN ( SELECT SUM( exchange_amount ) totalWithdrawalsCNY, user_id FROM t_withdraw_order WHERE `status` = 1 GROUP BY user_id ) wo ON uc.`user_id` = wo.user_id
        <where>
            <if test="cv.agntId != null and cv.agntId != ''">
                AND uc.`agnt_id` = #{cv.agntId}
            </if>
            <if test="cv.keyWord != null">
                AND (ua.login_name LIKE CONCAT('%',#{cv.keyWord},'%')
                OR ua.real_name LIKE CONCAT('%',#{cv.keyWord},'%')
                OR au.agnt_name LIKE CONCAT('%',#{cv.keyWord},'%'))
            </if>
        </where>
    </select>

    <select id="selectAgntConsumerCount" resultType="java.lang.Integer">
        SELECT Count(user_id) FROM agnt_user_consumer
        WHERE `agnt_id` = #{agntId}
    </select>

    <update id="updateByConsumerId">
        UPDATE agnt_user_consumer
        SET `agnt_id` = #{agntId}
        WHERE `user_id` = #{userId}
    </update>

    <insert id="insertAgntConsumer">
		INSERT INTO agnt_user_consumer
		(agnt_id,user_id,user_name,user_phone,user_account,create_time)
		VALUES
		(#{agntId},
		#{userId},
		#{userName},
		#{userPhone},
		#{userAccount},
		now()
		)
	</insert>

    <delete id="delInviter">
        DELETE FROM agnt_user_consumer
        WHERE `user_id` = #{userId}
    </delete>

</mapper>
